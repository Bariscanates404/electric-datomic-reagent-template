["^ ","~:output",["^ ","~:js","goog.provide('hyperfiddle.electric');\n(hyperfiddle.electric.Pending.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL);\n\n(hyperfiddle.electric.Pending.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar this$__$1 = this;\nreturn (other instanceof hyperfiddle.electric.Pending);\n}));\n(hyperfiddle.electric.Failure.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL);\n\n(hyperfiddle.electric.Failure.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar this$__$1 = this;\nreturn (((other instanceof hyperfiddle.electric.Failure)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.error,other.error)));\n}));\n(hyperfiddle.electric.FailureInfo.prototype.__proto__ = cljs.core.ExceptionInfo.prototype);\n(hyperfiddle.electric.FailureInfo.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL);\n\n(hyperfiddle.electric.FailureInfo.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){\nvar this$__$1 = this;\nreturn (((other instanceof hyperfiddle.electric.FailureInfo)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.cause,other.cause)));\n}));\n/**\n * Takes a resolve map and a program, returns a booting function.\n *   The booting function takes\n *   * as first argument a function Any->Task[Unit] returned task writes the value on the wire.\n *   * as second argument a flow producing the values read on the wire.\n *   and returning a task that runs the local reactor.\n */\nhyperfiddle.electric.eval = hyperfiddle.electric.impl.runtime.eval;\nhyperfiddle.electric.hook = hyperfiddle.electric.impl.runtime.hook;\nhyperfiddle.electric.bind = hyperfiddle.electric.impl.runtime.bind;\nhyperfiddle.electric.with$ = hyperfiddle.electric.impl.runtime.with$;\nhyperfiddle.electric.pair = (function hyperfiddle$electric$pair(c,s){\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34116_block_0 = (function hyperfiddle$electric$pair_$_cr34116_block_0(cr34116_state){\ntry{var cr34116_place_0 = missionary.core.dfv;\nvar cr34116_place_1 = (function (){var fexpr__34180 = cr34116_place_0;\nreturn (fexpr__34180.cljs$core$IFn$_invoke$arity$0 ? fexpr__34180.cljs$core$IFn$_invoke$arity$0() : fexpr__34180.call(null));\n})();\nvar cr34116_place_2 = missionary.core.dfv;\nvar cr34116_place_3 = (function (){var fexpr__34181 = cr34116_place_2;\nreturn (fexpr__34181.cljs$core$IFn$_invoke$arity$0 ? fexpr__34181.cljs$core$IFn$_invoke$arity$0() : fexpr__34181.call(null));\n})();\nvar cr34116_place_4 = missionary.core.join;\nvar cr34116_place_5 = cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.IMap], null));\nvar cr34116_place_6 = (function (x){\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34119_block_0 = (function (cr34119_state){\ntry{var cr34119_place_0 = cr34116_place_1;\n(cr34119_state[(0)] = cr34119_block_1);\n\nreturn missionary.core.park(cr34119_place_0);\n}catch (e34186){var e34125 = e34186;\nvar cr34119_exception = e34125;\n(cr34119_state[(0)] = null);\n\nthrow cr34119_exception;\n}});\nvar cr34119_block_1 = (function (cr34119_state){\ntry{var cr34119_place_1 = missionary.core.unpark();\nvar cr34119_place_2 = cr34119_place_1;\nvar cr34119_place_3 = x;\nvar cr34119_place_4 = (function (){var G__34128 = cr34119_place_3;\nvar fexpr__34127 = cr34119_place_2;\nvar G__34189 = G__34128;\nvar fexpr__34188 = fexpr__34127;\nreturn (fexpr__34188.cljs$core$IFn$_invoke$arity$1 ? fexpr__34188.cljs$core$IFn$_invoke$arity$1(G__34189) : fexpr__34188.call(null,G__34189));\n})();\n(cr34119_state[(0)] = null);\n\nreturn cr34119_place_4;\n}catch (e34187){var e34126 = e34187;\nvar cr34119_exception = e34126;\n(cr34119_state[(0)] = null);\n\nthrow cr34119_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34129 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1));\n(G__34129[(0)] = cr34119_block_0);\n\nreturn G__34129;\n})());\n})(),missionary.core.sp_run);\n});\nvar cr34116_place_7 = (function (_BANG_){\nvar G__34191_34345 = _BANG_;\nvar fexpr__34190_34346 = cr34116_place_3;\n(fexpr__34190_34346.cljs$core$IFn$_invoke$arity$1 ? fexpr__34190_34346.cljs$core$IFn$_invoke$arity$1(G__34191_34345) : fexpr__34190_34346.call(null,G__34191_34345));\n\nreturn (function (){\nreturn cljs.core.List.EMPTY;\n});\n});\nvar cr34116_place_8 = s;\nvar cr34116_place_9 = cr34116_place_6;\nvar cr34116_place_10 = cr34116_place_7;\nvar cr34116_place_11 = (function (){var G__34193 = cr34116_place_9;\nvar G__34194 = cr34116_place_10;\nvar fexpr__34192 = cr34116_place_8;\nreturn (fexpr__34192.cljs$core$IFn$_invoke$arity$2 ? fexpr__34192.cljs$core$IFn$_invoke$arity$2(G__34193,G__34194) : fexpr__34192.call(null,G__34193,G__34194));\n})();\nvar cr34116_place_12 = (function (x){\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34133_block_0 = (function (cr34133_state){\ntry{var cr34133_place_0 = cr34116_place_3;\n(cr34133_state[(0)] = cr34133_block_1);\n\nreturn missionary.core.park(cr34133_place_0);\n}catch (e34199){var e34139 = e34199;\nvar cr34133_exception = e34139;\n(cr34133_state[(0)] = null);\n\nthrow cr34133_exception;\n}});\nvar cr34133_block_1 = (function (cr34133_state){\ntry{var cr34133_place_1 = missionary.core.unpark();\nvar cr34133_place_2 = cr34133_place_1;\nvar cr34133_place_3 = x;\nvar cr34133_place_4 = (function (){var G__34142 = cr34133_place_3;\nvar fexpr__34141 = cr34133_place_2;\nvar G__34202 = G__34142;\nvar fexpr__34201 = fexpr__34141;\nreturn (fexpr__34201.cljs$core$IFn$_invoke$arity$1 ? fexpr__34201.cljs$core$IFn$_invoke$arity$1(G__34202) : fexpr__34201.call(null,G__34202));\n})();\n(cr34133_state[(0)] = null);\n\nreturn cr34133_place_4;\n}catch (e34200){var e34140 = e34200;\nvar cr34133_exception = e34140;\n(cr34133_state[(0)] = null);\n\nthrow cr34133_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34143 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1));\n(G__34143[(0)] = cr34133_block_0);\n\nreturn G__34143;\n})());\n})(),missionary.core.sp_run);\n});\nvar cr34116_place_13 = (function (_BANG_){\nvar G__34204_34347 = _BANG_;\nvar fexpr__34203_34348 = cr34116_place_1;\n(fexpr__34203_34348.cljs$core$IFn$_invoke$arity$1 ? fexpr__34203_34348.cljs$core$IFn$_invoke$arity$1(G__34204_34347) : fexpr__34203_34348.call(null,G__34204_34347));\n\nreturn (function (){\nreturn cljs.core.List.EMPTY;\n});\n});\nvar cr34116_place_14 = (function (p1__34115_SHARP_){\nthrow p1__34115_SHARP_;\n});\nvar cr34116_place_15 = c;\nvar cr34116_place_16 = cr34116_place_12;\nvar cr34116_place_17 = cr34116_place_13;\nvar cr34116_place_18 = cr34116_place_14;\nvar cr34116_place_19 = (function (){var G__34206 = cr34116_place_16;\nvar G__34207 = cr34116_place_17;\nvar G__34208 = cr34116_place_18;\nvar fexpr__34205 = cr34116_place_15;\nreturn (fexpr__34205.cljs$core$IFn$_invoke$arity$3 ? fexpr__34205.cljs$core$IFn$_invoke$arity$3(G__34206,G__34207,G__34208) : fexpr__34205.call(null,G__34206,G__34207,G__34208));\n})();\nvar cr34116_place_20 = (function (){var G__34210 = cr34116_place_5;\nvar G__34211 = cr34116_place_11;\nvar G__34212 = cr34116_place_19;\nvar fexpr__34209 = cr34116_place_4;\nreturn (fexpr__34209.cljs$core$IFn$_invoke$arity$3 ? fexpr__34209.cljs$core$IFn$_invoke$arity$3(G__34210,G__34211,G__34212) : fexpr__34209.call(null,G__34210,G__34211,G__34212));\n})();\n(cr34116_state[(0)] = cr34116_block_1);\n\nreturn missionary.core.park(cr34116_place_20);\n}catch (e34179){var cr34116_exception = e34179;\n(cr34116_state[(0)] = null);\n\nthrow cr34116_exception;\n}});\nvar cr34116_block_1 = (function hyperfiddle$electric$pair_$_cr34116_block_1(cr34116_state){\ntry{var cr34116_place_21 = missionary.core.unpark();\n(cr34116_state[(0)] = null);\n\nreturn cr34116_place_21;\n}catch (e34213){var cr34116_exception = e34213;\n(cr34116_state[(0)] = null);\n\nthrow cr34116_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34214 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1));\n(G__34214[(0)] = cr34116_block_0);\n\nreturn G__34214;\n})());\n})(),missionary.core.sp_run);\n});\nhyperfiddle.electric.failure_QMARK_ = (function hyperfiddle$electric$failure_QMARK_(x){\nreturn (x instanceof hyperfiddle.electric.Failure);\n});\nhyperfiddle.electric.task__GT_cp = (function hyperfiddle$electric$task__GT_cp(var_args){\nvar G__34218 = arguments.length;\nswitch (G__34218) {\ncase 1:\nreturn hyperfiddle.electric.task__GT_cp.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn hyperfiddle.electric.task__GT_cp.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.task__GT_cp.cljs$core$IFn$_invoke$arity$1 = (function (_BANG_x){\nreturn hyperfiddle.electric.task__GT_cp.cljs$core$IFn$_invoke$arity$2(_BANG_x,(new hyperfiddle.electric.Failure((new hyperfiddle.electric.Pending()))));\n}));\n\n(hyperfiddle.electric.task__GT_cp.cljs$core$IFn$_invoke$arity$2 = (function (_BANG_x,pending){\nreturn missionary.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,pending,cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34219_block_0 = (function hyperfiddle$electric$cr34219_block_0(cr34219_state){\ntry{var cr34219_place_0 = _BANG_x;\n(cr34219_state[(0)] = cr34219_block_1);\n\nreturn missionary.core.park(cr34219_place_0);\n}catch (e34222){var cr34219_exception = e34222;\n(cr34219_state[(0)] = null);\n\nthrow cr34219_exception;\n}});\nvar cr34219_block_1 = (function hyperfiddle$electric$cr34219_block_1(cr34219_state){\ntry{var cr34219_place_1 = missionary.core.unpark();\n(cr34219_state[(0)] = null);\n\nreturn cr34219_place_1;\n}catch (e34223){var cr34219_exception = e34223;\n(cr34219_state[(0)] = null);\n\nthrow cr34219_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34224 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1));\n(G__34224[(0)] = cr34219_block_0);\n\nreturn G__34224;\n})());\n})(),missionary.core.ap_run));\n}));\n\n(hyperfiddle.electric.task__GT_cp.cljs$lang$maxFixedArity = 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IDeref}\n*/\nhyperfiddle.electric.Clock = (function (raf,callback,terminator){\nthis.raf = raf;\nthis.callback = callback;\nthis.terminator = terminator;\nthis.cljs$lang$protocol_mask$partition0$ = 32769;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(hyperfiddle.electric.Clock.prototype.call = (function (unused__14959__auto__){\nvar self__ = this;\nvar self__ = this;\nvar G__34226 = (arguments.length - (1));\nswitch (G__34226) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join('')));\n\n}\n}));\n\n(hyperfiddle.electric.Clock.prototype.apply = (function (self__,args34225){\nvar self__ = this;\nvar self____$1 = this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34225)));\n}));\n\n(hyperfiddle.electric.Clock.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){\nvar self__ = this;\nvar _ = this;\nif((self__.raf === (0))){\nreturn (self__.callback = null);\n} else {\nwindow.cancelAnimationFrame(self__.raf);\n\nreturn (self__.terminator.cljs$core$IFn$_invoke$arity$0 ? self__.terminator.cljs$core$IFn$_invoke$arity$0() : self__.terminator.call(null));\n}\n}));\n\n(hyperfiddle.electric.Clock.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nif((self__.callback == null)){\n(self__.terminator.cljs$core$IFn$_invoke$arity$0 ? self__.terminator.cljs$core$IFn$_invoke$arity$0() : self__.terminator.call(null));\n} else {\n(self__.raf = window.requestAnimationFrame(self__.callback));\n}\n\nreturn new cljs.core.Keyword(\"hyperfiddle.electric\",\"tick\",\"hyperfiddle.electric/tick\",-1268517293);\n}));\n\n(hyperfiddle.electric.Clock.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\"raf\",\"raf\",345121375,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),new cljs.core.Symbol(null,\"number\",\"number\",-1084057331,null),new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\"callback\",\"callback\",935395299,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"mutable\",\"mutable\",875778266),true], null)),new cljs.core.Symbol(null,\"terminator\",\"terminator\",-1051388676,null)], null);\n}));\n\n(hyperfiddle.electric.Clock.cljs$lang$type = true);\n\n(hyperfiddle.electric.Clock.cljs$lang$ctorStr = \"hyperfiddle.electric/Clock\");\n\n(hyperfiddle.electric.Clock.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"hyperfiddle.electric/Clock\");\n}));\n\n/**\n * Positional factory function for hyperfiddle.electric/Clock.\n */\nhyperfiddle.electric.__GT_Clock = (function hyperfiddle$electric$__GT_Clock(raf,callback,terminator){\nreturn (new hyperfiddle.electric.Clock(raf,callback,terminator));\n});\n\n/**\n * lazy & efficient logical clock that schedules no work unless sampled\n */\nhyperfiddle.electric._LT_clock = (function hyperfiddle$electric$_LT_clock(n,t){\nvar cancel = hyperfiddle.electric.__GT_Clock((0),null,t);\n(cancel.callback = (function (_){\n(cancel.raf = (0));\n\nreturn (n.cljs$core$IFn$_invoke$arity$0 ? n.cljs$core$IFn$_invoke$arity$0() : n.call(null));\n}));\n\n(n.cljs$core$IFn$_invoke$arity$0 ? n.cljs$core$IFn$_invoke$arity$0() : n.call(null));\n\nreturn cancel;\n});\nhyperfiddle.electric._get_system_time_ms = (function hyperfiddle$electric$_get_system_time_ms(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___34351 = arguments.length;\nvar i__5770__auto___34352 = (0);\nwhile(true){\nif((i__5770__auto___34352 < len__5769__auto___34351)){\nargs__5775__auto__.push((arguments[i__5770__auto___34352]));\n\nvar G__34353 = (i__5770__auto___34352 + (1));\ni__5770__auto___34352 = G__34353;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn hyperfiddle.electric._get_system_time_ms.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(hyperfiddle.electric._get_system_time_ms.cljs$core$IFn$_invoke$arity$variadic = (function (p__34228){\nvar vec__34229 = p__34228;\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34229,(0),null);\nreturn Date.now();\n}));\n\n(hyperfiddle.electric._get_system_time_ms.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(hyperfiddle.electric._get_system_time_ms.cljs$lang$applyTo = (function (seq34227){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq34227));\n}));\n\nhyperfiddle.electric.dom_listener = (function hyperfiddle$electric$dom_listener(node,typ,f,opts){\nnode.addEventListener(typ,f,cljs.core.clj__GT_js(opts));\n\nreturn (function (){\nreturn node.removeEventListener(typ,f);\n});\n});\nhyperfiddle.electric.listen_GT_ = (function hyperfiddle$electric$listen_GT_(var_args){\nvar G__34234 = arguments.length;\nswitch (G__34234) {\ncase 2:\nreturn hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$2 = (function (node,event_type){\nreturn hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$4(node,event_type,cljs.core.identity,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$3 = (function (node,event_type,keep_fn_BANG_){\nreturn hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$4(node,event_type,keep_fn_BANG_,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$4 = (function (node,event_type,keep_fn_BANG_,opts){\nreturn missionary.core.relieve(cljs.core.PersistentArrayMap.EMPTY,missionary.core.observe((function (_BANG_){\nreturn hyperfiddle.electric.dom_listener(node,event_type,(function (p1__34232_SHARP_){\nvar temp__5808__auto__ = (keep_fn_BANG_.cljs$core$IFn$_invoke$arity$1 ? keep_fn_BANG_.cljs$core$IFn$_invoke$arity$1(p1__34232_SHARP_) : keep_fn_BANG_.call(null,p1__34232_SHARP_));\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar v = temp__5808__auto__;\nreturn (_BANG_.cljs$core$IFn$_invoke$arity$1 ? _BANG_.cljs$core$IFn$_invoke$arity$1(v) : _BANG_.call(null,v));\n}\n}),opts);\n})));\n}));\n\n(hyperfiddle.electric.listen_GT_.cljs$lang$maxFixedArity = 4);\n\nhyperfiddle.electric._LT_dom_visibility_state = missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic((function (_){\nreturn document.visibilityState;\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missionary.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,document.visibilityState,hyperfiddle.electric.listen_GT_.cljs$core$IFn$_invoke$arity$2(document,\"visibilitychange\"))], 0));\nhyperfiddle.electric._check_fn_arity_BANG_ = (function hyperfiddle$electric$_check_fn_arity_BANG_(name,expected,actual){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(expected,actual)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"You called \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ = name;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"hyperfiddle.electric\",\"unnamed-efn\",\"hyperfiddle.electric/unnamed-efn\",1016396331)], 0));\n}\n})()),\", a \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(expected),\"-arg e/fn with \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(actual),\" arguments.\"].join(''),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"name\",\"name\",1843675177),name], null));\n} else {\nreturn null;\n}\n});\nhyperfiddle.electric.watchable_QMARK_ = (function hyperfiddle$electric$watchable_QMARK_(x){\nif((!((x == null)))){\nif((((x.cljs$lang$protocol_mask$partition1$ & (2))) || ((cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IWatchable$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition1$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IWatchable,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IWatchable,x);\n}\n});\nhyperfiddle.electric.checked_watch = (function hyperfiddle$electric$checked_watch(_BANG_x){\nif(hyperfiddle.electric.watchable_QMARK_(_BANG_x)){\n} else {\nthrow (new Error([\"Assert failed: \",\"Provided argument is not Watchable.\",\"\\n\",\"(watchable? !x)\"].join('')));\n}\n\nreturn missionary.core.watch(_BANG_x);\n});\nhyperfiddle.electric._invalid_watch_usage_message = \"Invalid e/watch (use from Electric code only, maybe you forgot a e/def?)\";\nhyperfiddle.electric.debounce_discreet = (function hyperfiddle$electric$debounce_discreet(var_args){\nvar G__34238 = arguments.length;\nswitch (G__34238) {\ncase 2:\nreturn hyperfiddle.electric.debounce_discreet.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn hyperfiddle.electric.debounce_discreet.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.debounce_discreet.cljs$core$IFn$_invoke$arity$2 = (function (delay,flow){\nreturn hyperfiddle.electric.debounce_discreet.cljs$core$IFn$_invoke$arity$3(delay,null,flow);\n}));\n\n(hyperfiddle.electric.debounce_discreet.cljs$core$IFn$_invoke$arity$3 = (function (delay,init,flow){\nreturn missionary.core.reductions.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,init,cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34239_block_10 = (function hyperfiddle$electric$cr34239_block_10(cr34239_state){\ntry{var cr34239_place_21 = missionary.core.unpark();\n(cr34239_state[(0)] = cr34239_block_11);\n\n(cr34239_state[(3)] = cr34239_place_21);\n\nreturn cr34239_state;\n}catch (e34257){var cr34239_exception = e34257;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_5 = (function hyperfiddle$electric$cr34239_block_5(cr34239_state){\ntry{var cr34239_place_13 = new cljs.core.Keyword(null,\"else\",\"else\",-1508377146);\nvar cr34239_place_14 = null;\nif(cljs.core.truth_(cr34239_place_13)){\n(cr34239_state[(0)] = cr34239_block_7);\n\n(cr34239_state[(3)] = null);\n\nreturn cr34239_state;\n} else {\n(cr34239_state[(0)] = cr34239_block_6);\n\n(cr34239_state[(4)] = cr34239_place_14);\n\nreturn cr34239_state;\n}\n}catch (e34258){var cr34239_exception = e34258;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_12 = (function hyperfiddle$electric$cr34239_block_12(cr34239_state){\ntry{var cr34239_place_2 = (cr34239_state[(1)]);\nvar cr34239_place_3 = (cr34239_state[(2)]);\nvar cr34239_place_22 = (cljs.core.truth_(cr34239_place_3)?(function(){throw cr34239_place_2})():cr34239_place_2);\n(cr34239_state[(0)] = null);\n\n(cr34239_state[(1)] = null);\n\n(cr34239_state[(2)] = null);\n\nreturn cr34239_place_22;\n}catch (e34259){var cr34239_exception = e34259;\n(cr34239_state[(0)] = null);\n\n(cr34239_state[(1)] = null);\n\n(cr34239_state[(2)] = null);\n\nthrow cr34239_exception;\n}});\nvar cr34239_block_4 = (function hyperfiddle$electric$cr34239_block_4(cr34239_state){\ntry{var cr34239_place_2 = (cr34239_state[(1)]);\nvar cr34239_place_9 = cr34239_place_2;\nvar cr34239_place_10 = missionary.Cancelled;\nvar cr34239_place_11 = (cr34239_place_9 instanceof cr34239_place_10);\nvar cr34239_place_12 = null;\nif(cr34239_place_11){\n(cr34239_state[(0)] = cr34239_block_9);\n\n(cr34239_state[(3)] = cr34239_place_12);\n\nreturn cr34239_state;\n} else {\n(cr34239_state[(0)] = cr34239_block_5);\n\n(cr34239_state[(3)] = cr34239_place_12);\n\nreturn cr34239_state;\n}\n}catch (e34260){var cr34239_exception = e34260;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_3 = (function hyperfiddle$electric$cr34239_block_3(cr34239_state){\ntry{var cr34239_place_8 = missionary.core.unpark();\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(1)] = cr34239_place_8);\n\nreturn cr34239_state;\n}catch (e34261){var cr34239_exception = e34261;\n(cr34239_state[(0)] = cr34239_block_4);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_9 = (function hyperfiddle$electric$cr34239_block_9(cr34239_state){\ntry{var cr34239_place_2 = (cr34239_state[(1)]);\nvar cr34239_place_18 = cr34239_place_2;\nvar cr34239_place_19 = (1);\nvar cr34239_place_20 = missionary.core.none;\n(cr34239_state[(0)] = cr34239_block_10);\n\nreturn missionary.core.fork(cr34239_place_19,cr34239_place_20);\n}catch (e34262){var cr34239_exception = e34262;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_7 = (function hyperfiddle$electric$cr34239_block_7(cr34239_state){\ntry{var cr34239_place_2 = (cr34239_state[(1)]);\nvar cr34239_place_16 = cr34239_place_2;\nvar cr34239_place_17 = (function(){throw cr34239_place_16})();\n(cr34239_state[(0)] = null);\n\n(cr34239_state[(1)] = null);\n\n(cr34239_state[(2)] = null);\n\nreturn null;\n}catch (e34263){var cr34239_exception = e34263;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_0 = (function hyperfiddle$electric$cr34239_block_0(cr34239_state){\ntry{var cr34239_place_0 = flow;\n(cr34239_state[(0)] = cr34239_block_1);\n\nreturn missionary.core.switch$(cr34239_place_0);\n}catch (e34264){var cr34239_exception = e34264;\n(cr34239_state[(0)] = null);\n\nthrow cr34239_exception;\n}});\nvar cr34239_block_2 = (function hyperfiddle$electric$cr34239_block_2(cr34239_state){\ntry{var cr34239_place_1 = (cr34239_state[(3)]);\nvar cr34239_place_4 = missionary.core.sleep;\nvar cr34239_place_5 = delay;\nvar cr34239_place_6 = cr34239_place_1;\nvar cr34239_place_7 = (function (){var G__34267 = cr34239_place_5;\nvar G__34268 = cr34239_place_6;\nvar fexpr__34266 = cr34239_place_4;\nreturn (fexpr__34266.cljs$core$IFn$_invoke$arity$2 ? fexpr__34266.cljs$core$IFn$_invoke$arity$2(G__34267,G__34268) : fexpr__34266.call(null,G__34267,G__34268));\n})();\n(cr34239_state[(0)] = cr34239_block_3);\n\n(cr34239_state[(3)] = null);\n\nreturn missionary.core.park(cr34239_place_7);\n}catch (e34265){var cr34239_exception = e34265;\n(cr34239_state[(0)] = cr34239_block_4);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_1 = (function hyperfiddle$electric$cr34239_block_1(cr34239_state){\ntry{var cr34239_place_1 = missionary.core.unpark();\nvar cr34239_place_2 = null;\nvar cr34239_place_3 = false;\n(cr34239_state[(0)] = cr34239_block_2);\n\n(cr34239_state[(3)] = cr34239_place_1);\n\n(cr34239_state[(1)] = cr34239_place_2);\n\n(cr34239_state[(2)] = cr34239_place_3);\n\nreturn cr34239_state;\n}catch (e34269){var cr34239_exception = e34269;\n(cr34239_state[(0)] = null);\n\nthrow cr34239_exception;\n}});\nvar cr34239_block_11 = (function hyperfiddle$electric$cr34239_block_11(cr34239_state){\ntry{var cr34239_place_12 = (cr34239_state[(3)]);\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(1)] = cr34239_place_12);\n\nreturn cr34239_state;\n}catch (e34270){var cr34239_exception = e34270;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_6 = (function hyperfiddle$electric$cr34239_block_6(cr34239_state){\ntry{var cr34239_place_15 = null;\n(cr34239_state[(0)] = cr34239_block_8);\n\n(cr34239_state[(4)] = cr34239_place_15);\n\nreturn cr34239_state;\n}catch (e34271){var cr34239_exception = e34271;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(4)] = null);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nvar cr34239_block_8 = (function hyperfiddle$electric$cr34239_block_8(cr34239_state){\ntry{var cr34239_place_14 = (cr34239_state[(4)]);\n(cr34239_state[(0)] = cr34239_block_11);\n\n(cr34239_state[(4)] = null);\n\n(cr34239_state[(3)] = cr34239_place_14);\n\nreturn cr34239_state;\n}catch (e34272){var cr34239_exception = e34272;\n(cr34239_state[(0)] = cr34239_block_12);\n\n(cr34239_state[(4)] = null);\n\n(cr34239_state[(3)] = null);\n\n(cr34239_state[(2)] = true);\n\n(cr34239_state[(1)] = cr34239_exception);\n\nreturn cr34239_state;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34273 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((5));\n(G__34273[(0)] = cr34239_block_0);\n\nreturn G__34273;\n})());\n})(),missionary.core.ap_run));\n}));\n\n(hyperfiddle.electric.debounce_discreet.cljs$lang$maxFixedArity = 3);\n\nhyperfiddle.electric.throttle = (function hyperfiddle$electric$throttle(dur,_GT_in){\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr34274_block_0 = (function hyperfiddle$electric$throttle_$_cr34274_block_0(cr34274_state){\ntry{var cr34274_place_0 = (1);\nvar cr34274_place_1 = missionary.core.relieve;\nvar cr34274_place_2 = cljs.core.with_meta(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),cljs.core.IMap], null));\nvar cr34274_place_3 = _GT_in;\nvar cr34274_place_4 = (function (){var G__34297 = cr34274_place_2;\nvar G__34298 = cr34274_place_3;\nvar fexpr__34296 = cr34274_place_1;\nreturn (fexpr__34296.cljs$core$IFn$_invoke$arity$2 ? fexpr__34296.cljs$core$IFn$_invoke$arity$2(G__34297,G__34298) : fexpr__34296.call(null,G__34297,G__34298));\n})();\n(cr34274_state[(0)] = cr34274_block_1);\n\nreturn missionary.core.fork(cr34274_place_0,cr34274_place_4);\n}catch (e34295){var cr34274_exception = e34295;\n(cr34274_state[(0)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_5 = (function hyperfiddle$electric$throttle_$_cr34274_block_5(cr34274_state){\ntry{var cr34274_place_19 = missionary.core.unpark();\nvar cr34274_place_20 = (1);\nvar cr34274_place_21 = missionary.core.none;\n(cr34274_state[(0)] = cr34274_block_6);\n\nreturn missionary.core.fork(cr34274_place_20,cr34274_place_21);\n}catch (e34299){var cr34274_exception = e34299;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(2)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_7 = (function hyperfiddle$electric$throttle_$_cr34274_block_7(cr34274_state){\ntry{var cr34274_place_12 = (cr34274_state[(1)]);\nvar cr34274_place_23 = \"No matching clause: \";\nvar cr34274_place_24 = cr34274_place_12;\nvar cr34274_place_25 = [cr34274_place_23,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cr34274_place_24)].join('');\nvar cr34274_place_26 = (new Error(cr34274_place_25));\nvar cr34274_place_27 = (function(){throw cr34274_place_26})();\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(1)] = null);\n\nreturn null;\n}catch (e34300){var cr34274_exception = e34300;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(1)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_2 = (function hyperfiddle$electric$throttle_$_cr34274_block_2(cr34274_state){\ntry{var cr34274_place_12 = missionary.core.unpark();\nvar cr34274_place_13 = cr34274_place_12;\nvar cr34274_place_14 = null;\nvar G__34302 = cr34274_place_13;\nswitch (G__34302) {\ncase (0):\n(cr34274_state[(0)] = cr34274_block_3);\n\n(cr34274_state[(2)] = cr34274_place_14);\n\nreturn cr34274_state;\n\nbreak;\ncase (1):\n(cr34274_state[(0)] = cr34274_block_4);\n\n(cr34274_state[(1)] = null);\n\n(cr34274_state[(2)] = cr34274_place_14);\n\nreturn cr34274_state;\n\nbreak;\ndefault:\n(cr34274_state[(0)] = cr34274_block_7);\n\n(cr34274_state[(1)] = null);\n\n(cr34274_state[(1)] = cr34274_place_12);\n\nreturn cr34274_state;\n\n}\n}catch (e34301){var cr34274_exception = e34301;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(1)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_1 = (function hyperfiddle$electric$throttle_$_cr34274_block_1(cr34274_state){\ntry{var cr34274_place_5 = missionary.core.unpark();\nvar cr34274_place_6 = (1);\nvar cr34274_place_7 = missionary.core.seed;\nvar cr34274_place_8 = cljs.core.range;\nvar cr34274_place_9 = (2);\nvar cr34274_place_10 = (function (){var G__34305 = cr34274_place_9;\nvar fexpr__34304 = cr34274_place_8;\nreturn (fexpr__34304.cljs$core$IFn$_invoke$arity$1 ? fexpr__34304.cljs$core$IFn$_invoke$arity$1(G__34305) : fexpr__34304.call(null,G__34305));\n})();\nvar cr34274_place_11 = (function (){var G__34307 = cr34274_place_10;\nvar fexpr__34306 = cr34274_place_7;\nreturn (fexpr__34306.cljs$core$IFn$_invoke$arity$1 ? fexpr__34306.cljs$core$IFn$_invoke$arity$1(G__34307) : fexpr__34306.call(null,G__34307));\n})();\n(cr34274_state[(0)] = cr34274_block_2);\n\n(cr34274_state[(1)] = cr34274_place_5);\n\nreturn missionary.core.fork(cr34274_place_6,cr34274_place_11);\n}catch (e34303){var cr34274_exception = e34303;\n(cr34274_state[(0)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_3 = (function hyperfiddle$electric$throttle_$_cr34274_block_3(cr34274_state){\ntry{var cr34274_place_5 = (cr34274_state[(1)]);\nvar cr34274_place_15 = cr34274_place_5;\n(cr34274_state[(0)] = cr34274_block_8);\n\n(cr34274_state[(1)] = null);\n\n(cr34274_state[(2)] = cr34274_place_15);\n\nreturn cr34274_state;\n}catch (e34308){var cr34274_exception = e34308;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(1)] = null);\n\n(cr34274_state[(2)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_6 = (function hyperfiddle$electric$throttle_$_cr34274_block_6(cr34274_state){\ntry{var cr34274_place_22 = missionary.core.unpark();\n(cr34274_state[(0)] = cr34274_block_8);\n\n(cr34274_state[(2)] = cr34274_place_22);\n\nreturn cr34274_state;\n}catch (e34309){var cr34274_exception = e34309;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(2)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_8 = (function hyperfiddle$electric$throttle_$_cr34274_block_8(cr34274_state){\ntry{var cr34274_place_14 = (cr34274_state[(2)]);\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(2)] = null);\n\nreturn cr34274_place_14;\n}catch (e34310){var cr34274_exception = e34310;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(2)] = null);\n\nthrow cr34274_exception;\n}});\nvar cr34274_block_4 = (function hyperfiddle$electric$throttle_$_cr34274_block_4(cr34274_state){\ntry{var cr34274_place_16 = missionary.core.sleep;\nvar cr34274_place_17 = dur;\nvar cr34274_place_18 = (function (){var G__34313 = cr34274_place_17;\nvar fexpr__34312 = cr34274_place_16;\nreturn (fexpr__34312.cljs$core$IFn$_invoke$arity$1 ? fexpr__34312.cljs$core$IFn$_invoke$arity$1(G__34313) : fexpr__34312.call(null,G__34313));\n})();\n(cr34274_state[(0)] = cr34274_block_5);\n\nreturn missionary.core.park(cr34274_place_18);\n}catch (e34311){var cr34274_exception = e34311;\n(cr34274_state[(0)] = null);\n\n(cr34274_state[(2)] = null);\n\nthrow cr34274_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__34314 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((3));\n(G__34314[(0)] = cr34274_block_0);\n\nreturn G__34314;\n})());\n})(),missionary.core.ap_run);\n});\n/**\n * Bound to the HTTP request of the page in which the current Electric program is running.\n */\nhyperfiddle.electric._STAR_http_request_STAR_ = null;\nhyperfiddle.electric._snapshot = (function hyperfiddle$electric$_snapshot(flow){\nreturn missionary.core.eduction.cljs$core$IFn$_invoke$arity$2(contrib.data.take_upto(cljs.core.complement(cljs.core.PersistentHashSet.createAsIfByAssoc([hyperfiddle.electric.impl.runtime.pending]))),flow);\n});\nhyperfiddle.electric.__GT_Object = (function hyperfiddle$electric$__GT_Object(){\nreturn (new Object());\n});\nhyperfiddle.electric.pending = (new hyperfiddle.electric.Pending());\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","hyperfiddle/electric.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",25],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.math","~$cljs.math","~$clojure.core","~$cljs.core"],"~:use-macros",["^ ","~$local","~$hyperfiddle.electric","~$run","^H","~$wrap","^H","~$fn","^H","~$for-by","^H","~$defn","^H","~$debounce","^H","~$boot","^H","~$for","^H","~$on-unmount","^H","~$do-browser","~$contrib.cljs-target","~$def","^H"],"~:excludes",["~#set",["~$eval","^K","~$empty?","^M","^P","~$partial","^T"]],"~:macros",["^ ","~$partial-dynamic",["^ ","~:arglists",["~#list",[["~$bindings","~$f"]]],"~:doc","Return a function calling given function `f` with given dynamic environment.","^7",331,"^8",1,"^6","hyperfiddle/electric.cljc","~:name","~$hyperfiddle.electric/partial-dynamic","~:ns","^H","~:macro",true],"^G",["^ ","^10",["^11",[["~$&","~$body"]]],"^13","Single peer loopback system without whitelist. Returns boot task.","^7",77,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/local","^16","^H","^17",true],"~$remote",["^ ","~:deprecated",true,"^10",["^11",[["~$&","^18"]]],"^7",297,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/remote","^16","^H","^17",true],"^I",["^ ","^10",["^11",[["~$&","^18"]]],"^13","test entrypoint without whitelist.","^7",84,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/run","^16","^H","^17",true],"^J",["^ ","^16","^H","^14","~$hyperfiddle.electric/wrap","^6","hyperfiddle/electric.cljc","^8",1,"^7",115,"^17",true,"^1;",true,"^10",["^11",[["~$&","^18"]]],"^13","Deprecated. Use `offload` instead."],"^K",["^ ","^10",["^11",[["~$name?","~$&",["~$args","~$&","^18"]]]],"^7",217,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/fn","^16","^H","^17",true],"^L",["^ ","^10",["^11",[["~$kf","^12","~$&","^18"]]],"^7",248,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/for-by","^16","^H","^17",true],"~$lexical-env",["^ ","^10",["^11",[[]]],"^13","Return a map containing lexical bindings","^7",318,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/lexical-env","^16","^H","^17",true],"^M",["^ ","^10",["^11",[["~$sym","~$&","~$fdecl"]]],"^7",239,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/defn","^16","^H","^17",true],"^N",["^ ","^16","^H","^14","~$hyperfiddle.electric/debounce","^6","hyperfiddle/electric.cljc","^8",1,"^7",285,"^17",true,"^1;",true,"^10",["^11",[["~$delay","~$flow"]]],"^13","Debounce a continous flow by `delay` milliseconds."],"~$server",["^ ","^10",["^11",[["~$&","^18"]]],"^7",307,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/server","^16","^H","^17",true],"~$for-event-pending",["^ ","^10",["^11",[["~$bind","~$&","^18"]]],"^13","Like for-event, but each branch completes as soon as a non-Pending value or \nexception is available. Returns [::pending e/pending] if there are one or more\nuncompleted branches, otherwise returns a 4-colored result corresponding to the\nprogress of the most recently completed branch.","^7",465,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/for-event-pending","^16","^H","^17",true],"^O",["^ ","^10",["^11",[["~$&","^18"]]],"^13","\nTakes an Electric program and returns a task setting up the full system with client part running locally and server part\nrunning on a remote host.\n","^7",373,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/boot","^16","^H","^17",true],"~$for-event-pending-switch",["^ ","^10",["^11",[[["^1F","~$>flow","~:as","^1O"],"~$&","^18"]]],"^13","Like for-event, but each new event supersedes the prior event, canceling and \ndiscarding previous it even if in progress. The single active branch completes \non the first non-Pending value. Returns a single four-colored result \ncorresponding to the progress of the most recent event.","^7",486,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/for-event-pending-switch","^16","^H","^17",true],"~$client",["^ ","^10",["^11",[["~$&","^18"]]],"^7",302,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/client","^16","^H","^17",true],"~$do-event-pending",["^ ","^10",["^11",[[["^1F","^1S","^1T","^1O"],"~$&","^18"]]],"^13","Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a non-Pending result. On completion, \nunmounts the body, latches and returns the 4-colored result while waiting for a \nfresh event.","^7",522,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/do-event-pending","^16","^H","^17",true],"~$with-zero-config-entrypoint",["^ ","^10",["^11",[["~$&","^18"]]],"^7",362,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/with-zero-config-entrypoint","^16","^H","^17",true],"~$with-cycle",["^ ","^10",["^11",[[["~$s","~$i"],"~$&","^18"]]],"^13","evaluates body with symbol s bound to the previous result of the body evaluation.\n  the first evaluation binds s to i.","^7",324,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/with-cycle","^16","^H","^17",true],"^P",["^ ","^10",["^11",[["^12","~$&","^18"]]],"^7",260,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/for","^16","^H","^17",true],"^Y",["^ ","^10",["^11",[["~$argc","~$F","~$&","^1@"]]],"^13","Like `cc/partial` for reactive functions. Requires the target function\n  arity (`argc`) until reactive function supports variadic arguments.\n\n  e.g. (new (partial 2 (e/fn [a b] [a b]) :a) :b) ;; => [:a :b]","^7",336,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/partial","^16","^H","^17",true],"~$snapshot",["^ ","^10",["^11",[["~$x"]]],"^13","Snapshots the first non-Pending value of reactive value `x` and freezes it, \ninhibiting all further reactive updates.","^7",439,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/snapshot","^16","^H","^17",true],"~$do-event",["^ ","^10",["^11",[[["^1F","^1S"],"~$&","^18"]]],"^13","Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a `reduced` value. On completion, \nunmounts the body, returning nil while waiting for a fresh event.","^7",504,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/do-event","^16","^H","^17",true],"~$check-electric",["^ ","^10",["^11",[["^K","~$form"]]],"^7",432,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/check-electric","^16","^H","^17",true],"~$watch",["^ ","^10",["^11",[["~$!x"]]],"^13","Derive a reactive value from a Clojure atom or reference.","^7",273,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/watch","^16","^H","^17",true],"^Q",["^ ","^10",["^11",[["~$f"]]],"^13","Run clojure(script) thunk `f` during unmount.\n\n  Standard electric code runs on mount, therefore there is no `on-mount`.","^7",349,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/on-unmount","^16","^H","^17",true],"~$discard",["^ ","^10",["^11",[["~$&","^18"]]],"^13","Silence \"Unserializable reference transfer\"; inlining `(do ... nil)` is idiomatic as well","^7",312,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/discard","^16","^H","^17",true],"~$offload-task",["^ ","^10",["^11",[["~$f!","~$executor"],["^2C"]]],"^7",95,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/offload-task","^16","^H","^17",true],"~$for-event",["^ ","^10",["^11",[[["^1F","^1S"],"~$&","^18"]]],"^13","For each value of >flow, spawn concurrent `body` branches which individually \nprogress towards completion. Keeps each branch alive to progress in isolation \nuntil it signals completion by returning a reduced value, at which point the branch\nis unmounted. Returns active progress values as a vector. Exceptions bubble out.","^7",447,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/for-event","^16","^H","^17",true],"~$offload",["^ ","^10",["^11",[["^2C","^2D"],["^2C"]]],"^13","run a blocking function (i.e. query) on threadpool specified by `executor` (i.e. m/blk or m/cpu).\nIO-bound fns should use m/blk, which is the default. Compute-bound fns should pass m/cpu. Custom\nexecutors are allowed (i.e. to control max concurrency, timeouts etc). Currently JVM only.","^7",105,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/offload","^16","^H","^17",true],"^T",["^ ","^10",["^11",[["~$symbol"],["^2J","~$docstring","~$init"],["^2J","^2L"]]],"^7",165,"^8",1,"^6","hyperfiddle/electric.cljc","^14","~$hyperfiddle.electric/def","^16","^H","^17",true]],"^14","^H","~:reader-aliases",["^ "],"~:op","^16","~:imports",["^ ","~$Pending","~$hyperfiddle.electric.Pending","~$Failure","~$hyperfiddle.electric.Failure","~$FailureInfo","~$hyperfiddle.electric.FailureInfo","~$Cancelled","~$missionary.Cancelled"],"~:requires",["^ ","^2W","^2X","~$hyperfiddle.electric.debug","^2Z","^2T","^2T","~$missionary.core","^2[","^S","^S","~$r","~$hyperfiddle.electric.impl.runtime","~$dbg","^2Z","^2S","^2T","^E","^E","^2Q","^2R","~$io","~$hyperfiddle.electric.impl.io","~$hyperfiddle.electric-client","^34","~$goog","^35","~$contrib.missionary-contrib","^36","^D","^E","^33","^33","~$m","^2[","^30","^30","~$contrib.data","^37","~$hyperfiddle.electric.impl.for","^38","~$cc","^E","^2V","^2V","~$hyperfiddle.electric.impl.compiler","^3:","^2U","^2V","~$c","^3:","^2X","^2X","~$mx","^36","^2R","^2R"],"~:seen",["^V",["~:require","~:require-macros"]],"~:uses",["^ ","^R","^S","~$map-by","^38"],"^3>",["^ ","^H","^H","^E","^E","^2[","^2[","^S","^S","^D","^E","~$m","^2[","^37","^37","^39","^E"],"~:form",["^11",["~$ns","^H",["^11",["~:refer-clojure","~:exclude",["^W","^T","^M","^K","^P","^X","^Y"]]],["^11",["^3=",["^D","^1T","^39"],"^37",["^S","~:refer",["^R"]],["^36","^1T","^3;"],"^37",["^3:","^1T","~$c"],["^30","^1T","~$r"],["^38","^3E",["^3@"]],["^2[","^1T","~$m"],["^34"],["^33","^1T","^32"],["^2Z","^1T","^31"]]],["^11",["^3>",["^H","^3E",["^T","^M","^K","^O","^P","^L","^G","^I","^N","^J","^Q"]]]],["^11",["~:import",["^11",["^H","^2Q","^2S","^2U"]],["^11",["~$missionary","^2W"]]]]]],"~:flags",["^ ","^3=",["^V",[]],"^3>",["^V",[]]],"~:js-deps",["^ "],"~:deps",["^35","^E","^E","^37","^S","^36","^3:","^30","^38","^2[","^34","^33","^2Z","^2R","^2T","^2V","^2X"]],"^16","^H","~:resource-id",["~:shadow.build.classpath/resource","hyperfiddle/electric.cljc"],"~:compiled-at",1693922841542,"^2N",["^ ","^2W","^2X","^2Z","^2Z","^2T","^2T","^2[","^2[","^S","^S","~$r","^30","^31","^2Z","^2S","^2T","^E","^E","^2Q","^2R","^32","^33","^34","^34","^35","^35","^36","^36","^D","^E","^33","^33","~$m","^2[","^30","^30","^37","^37","^38","^38","^39","^E","^2V","^2V","^3:","^3:","^2U","^2V","~$c","^3:","^2X","^2X","^3;","^36","^2R","^2R","^H","^H"],"~:resource-name","hyperfiddle/electric.cljc","~:warnings",[],"~:source","(ns hyperfiddle.electric\n  (:refer-clojure :exclude [eval def defn fn for empty? partial])\n  (:require [clojure.core :as cc]\n            contrib.data\n            [contrib.cljs-target :refer [do-browser]]\n            [contrib.missionary-contrib :as mx]\n            contrib.data\n            [hyperfiddle.electric.impl.compiler :as c]\n            [hyperfiddle.electric.impl.runtime :as r]\n            [hyperfiddle.electric.impl.for :refer [map-by]]\n            #?(:clj [hyperfiddle.rcf.analyzer :as ana])     ; todo remove\n            [missionary.core :as m]\n            #?(:cljs [hyperfiddle.electric-client])\n            [hyperfiddle.electric.impl.io :as io]\n            [hyperfiddle.electric.debug :as dbg])\n  #?(:cljs (:require-macros [hyperfiddle.electric :refer [def defn fn boot for for-by local run debounce wrap on-unmount]]))\n  (:import #?(:clj (clojure.lang IDeref))\n           (hyperfiddle.electric Pending Failure FailureInfo)\n           (missionary Cancelled)))\n\n;; Equality semantics for Failure and Pending\n;; For JVM, defined in java class.\n#?(:cljs\n   (extend-type Pending\n     IEquiv\n     (-equiv [this other]\n       (instance? Pending other))))\n\n#?(:cljs\n   (extend-type Failure\n     IEquiv\n     (-equiv [this other]\n       (and (instance? Failure other)\n            (= (.-error this) (.-error other))))))\n\n#?(:cljs (set! (.. FailureInfo -prototype -__proto__) cljs.core/ExceptionInfo.prototype))\n#?(:cljs\n   (extend-type FailureInfo\n     IEquiv\n     (-equiv [this other]\n       (and (instance? FailureInfo other)\n            (= (.-cause this) (.-cause other))))))\n\n#?(:clj\n   (do\n     ;; Optionally, tell RCF not to rewrite Electric programs.\n     (defmethod ana/macroexpand-hook `hyperfiddle.electric/run [the-var form env args] (reduced `(hyperfiddle.electric/run ~@args))) ; optional\n     ;;(defmethod ana/macroexpand-hook `hyperfiddle.electric/run2 [_the-var _form _env args] `(hyperfiddle.electric/run2 ~@args))\n\n     ;; Don't expand cc/binding (prevent infinite loop). Explicit implicit do\n     (defmethod ana/macroexpand-hook 'clojure.core/binding [_the-var _form _env [bindings & body]] (reduced `(binding ~bindings (do ~@body))))\n     (defmethod ana/macroexpand-hook 'cljs.core/binding [_the-var _form _env [bindings & body]] (reduced `(binding ~bindings (do ~@body))))))\n\n(def eval \"Takes a resolve map and a program, returns a booting function.\n  The booting function takes\n  * as first argument a function Any->Task[Unit] returned task writes the value on the wire.\n  * as second argument a flow producing the values read on the wire.\n  and returning a task that runs the local reactor.\"\n  r/eval)\n\n(def hook r/hook)\n(def bind r/bind) ; for when you want to spawn a e/fn without a new\n(def with r/with)\n\n(cc/defn pair [c s]\n  (m/sp\n    (let [s->c (m/dfv)\n          c->s (m/dfv)]\n      (m/?\n        (m/join {}\n          (s (cc/fn [x] (m/sp ((m/? s->c) x)))\n            (cc/fn [!] (c->s !) #()))\n          (c (cc/fn [x] (m/sp ((m/? c->s) x)))\n            (cc/fn [!] (s->c !) #())\n            #(throw %)))))))\n\n(defmacro local\n  \"Single peer loopback system without whitelist. Returns boot task.\"\n  [& body]\n                                        ; use compiler (client) because no need for exports\n  (let [[client server] (c/analyze &env `(do ~@body))]\n    `(pair ~(r/emit (gensym) client) ~(r/emit (gensym) server))))\n\n(defmacro run \"test entrypoint without whitelist.\" [& body]\n  `((local ~@body) (cc/fn [_#]) (cc/fn [_#])))\n\n(cc/defn failure? [x] (instance? Failure x))\n\n#?(:clj\n   (cc/defn -offload-task [thunk executor]\n     (->> (m/ap (m/? (m/via executor (thunk)))) ; run once\n       (m/reductions {} (Failure. (Pending.)))\n       (m/relieve {}))))\n\n(defmacro offload-task ; speculative\n  ([f! executor] `(new (-offload-task ~f! ~executor))) ; rebuild flow and cancel old thread\n  ; no varadic arity, user should explicitly state unit of work, so no ambiguity about concurrent tasks\n  ([f!] `(new (-offload-task ~f! m/blk))))\n\n#?(:clj (cc/defn -offload [tsk executor]\n          (m/reductions {} r/pending\n            (m/ap (try (m/? (m/via-call executor (m/?< (mx/poll-task tsk))))\n                       (catch Cancelled _ (m/amb)))))))\n\n(defmacro offload\n  \"run a blocking function (i.e. query) on threadpool specified by `executor` (i.e. m/blk or m/cpu).\nIO-bound fns should use m/blk, which is the default. Compute-bound fns should pass m/cpu. Custom\nexecutors are allowed (i.e. to control max concurrency, timeouts etc). Currently JVM only.\"\n  ([f! executor]\n   `(let [mbx# (m/mbx)]\n      (mbx# ~f!)\n      (new (-offload mbx# ~executor))))\n  ([f!] `(offload ~f! m/blk)))\n\n(defmacro ^:deprecated wrap \"Deprecated. Use `offload` instead.\" [& body] `(offload #(do ~@body)))\n\n; Should these be in missionary?\n;(def chan-read! contrib.missionary-contrib/chan-read!)\n;(def chan->ap contrib.missionary-contrib/chan->ap)\n;(def chan->task contrib.missionary-contrib/chan->task)\n;(def chan->cp contrib.missionary-contrib/chan->cp)\n\n(cc/defn task->cp ; leo to review\n  ([!x] (task->cp !x (Failure. (Pending.)))) ; note Electric dependency\n  ([!x pending] (->> (m/ap (m/? !x)) (m/reductions {} pending))))\n\n; Moved to contrib.missionary-contrib\n;(defmacro use-channel ;; TODO rename\n;  ([chan] `(use-channel nil ~chan))\n;  ([init chan] `(new (m/reductions {} ~init (chan->ap ~chan)))))\n\n#?(:cljs\n   (deftype Clock [^:mutable ^number raf\n                   ^:mutable callback\n                   terminator]\n     IFn                                                    ; cancel\n     (-invoke [_]\n       (if (zero? raf)\n         (set! callback nil)\n         (do (.cancelAnimationFrame js/window raf)\n             (terminator))))\n     IDeref                                                 ; sample\n     (-deref [_]\n       ; lazy clock, only resets once sampled\n       (if (nil? callback)\n         (terminator)\n         (set! raf (.requestAnimationFrame js/window callback))) ; RAF not called until first sampling\n       ::tick)))\n\n; cc def, must be above defmacro def\n(def ^:no-doc <clock \"lazy & efficient logical clock that schedules no work unless sampled\"\n  #?(:cljs (cc/fn [n t]\n             (let [cancel (->Clock 0 nil t)]\n               (set! (.-callback cancel)\n                 (cc/fn [_] (set! (.-raf cancel) 0) (n)))\n               (n) cancel))\n     \n     ; 120 hz server, careful this impacts bandwidth in demo-two-clocks\n     ; typical UI animation rate is 60 or 120hz, no point in going higher \n     :clj (m/ap (loop [] (m/amb nil (do (m/? (m/sleep (/ 1000 120))) (recur)))))\n     #_(m/ap (m/? (m/sleep 1 (m/?> (m/seed (repeat nil))))))))\n\n;; --------------------------------------\n\n(defmacro def\n  ([symbol] `(hyperfiddle.electric/def ~symbol ::c/unbound))\n  ([symbol docstring init]\n   (assert (string? docstring))\n   (#'def &form &env (vary-meta symbol assoc :doc docstring) init))\n  ([symbol init]\n   ;; GG: Expand to an unbound var with body stored in ::c/node meta.\n   ;;     Clojure compiler will analyze vars metas, which would analyze form as clojure, so we quote it.\n   ;;     ClojureScript do not have vars at runtime and will not analyze or emit vars meta. No need to quote.\n   `(def ~(vary-meta symbol assoc ::c/node (if (:js-globals &env) init `(quote ~init))))))\n\n(cc/defn -get-system-time-ms [& [_]] #?(:clj (System/currentTimeMillis) :cljs (js/Date.now)))\n\n; DOM event utilities promoted due to visibility-state being critical\n\n#?(:cljs (cc/defn dom-listener [node typ f opts] \n           (.addEventListener node typ f (clj->js opts))\n           #(.removeEventListener node typ f)))\n\n#?(:cljs (cc/defn listen> ; we intend to replace this in UI5 workstream\n           ([node event-type] (listen> node event-type identity {}))\n           ([node event-type keep-fn!] (listen> node event-type keep-fn! {}))\n           ([node event-type keep-fn! opts]\n            (m/relieve {}\n              (m/observe (cc/fn [!]\n                           (dom-listener node event-type #(when-some [v (keep-fn! %)]\n                                                            (! v)) opts)))))))\n\n#?(:cljs (def <dom-visibility-state \n           (do-browser \n             (->> (listen> js/document \"visibilitychange\")\n               (m/reductions {} (.-visibilityState js/document))\n               (m/latest (cc/fn [_] (.-visibilityState js/document)))))))\n\n(hyperfiddle.electric/def dom-visibility-state (client (new (identity <dom-visibility-state)))) ; starts Pending on server\n\n(hyperfiddle.electric/def dom-mousemove \"mousemove events, Pending if unknown\"\n  (client (new (m/reductions {} r/pending (e/listen> js/document \"mousemove\")))))\n\n(hyperfiddle.electric/def system-time-ms \"ms since 1970 Jan 1\" \n  (if (= \"visible\" dom-visibility-state)\n    (new (m/sample -get-system-time-ms <clock))\n    (throw (Pending.)))) ; tab is hidden, no clock. (This guards NPEs in userland)\n\n(hyperfiddle.electric/def system-time-secs \"seconds since 1970 Jan 1\" (/ system-time-ms 1000.0))\n\n(cc/defn -check-fn-arity! [name expected actual]\n  (when (not= expected actual)\n    (throw (ex-info (str \"You called \" (or name (pr-str ::unnamed-efn)) \", a \" expected \"-arg e/fn with \" actual \" arguments.\")\n             {:name name}))))\n\n;; TODO self-refer\n(defmacro fn [name? & [args & body]]\n  (let [[name? args body] (if (symbol? name?) [name? args body]\n                              [nil name? (cons args body)])]\n    (if (bound? #'c/*env*)\n      `(::c/closure\n        ;; Beware, `do` is implemented with `m/latest`, which evaluates\n        ;; arguments in parallel. The e/fn body will be called even if arity is\n        ;; incorrect, then the arity exception will be thrown. This might be\n        ;; confusing to users in presence of effects. Same as `(do (assert\n        ;; false) (prn 42))`: 42 is printed anyway. This is a broader question\n        ;; than \"what should the semantics of e/fn should be\", so we decided to\n        ;; be consistent with the current model and to not introduce a specific\n        ;; behavior for e/fn.\n        (do (-check-fn-arity! '~name? ~(count args) c/%arity)\n            (binding [c/rec (::c/closure (let [~@(interleave args c/arg-sym)] ~@body))]\n              (new c/rec ~@(take (count args) c/arg-sym))))\n        ~{::dbg/name name?, ::dbg/args args, ::dbg/type (or (::dbg/type (meta name?)) :reactive-fn)\n          ::dbg/meta (merge (select-keys (meta &form) [:file :line])\n                       (select-keys (meta name?) [:file :line]))})\n      `(throw (ex-info \"Invalid e/fn in Clojure code block (use from Electric code only)\" ~(into {} (meta &form)))))))\n\n; syntax quote doesn't qualify special forms like 'def\n(defmacro defn [sym & fdecl]\n  (let [[_defn sym' & _] (macroexpand `(cc/defn ~sym ~@fdecl))] ; GG: docstring support\n    `(hyperfiddle.electric/def ~sym' (hyperfiddle.electric/fn ~(vary-meta sym' merge {::dbg/type :reactive-defn}\n                                                                          (meta &form)\n                                                                          (meta sym'))\n                                                              ~@(if (string? (first fdecl)) ; GG: skip docstring\n                                         (rest fdecl)\n                                         fdecl)))))\n\n(defmacro for-by [kf bindings & body]\n  (if-some [[s v & bindings] (seq bindings)]\n    `(let [xs# ~v]\n       (new (r/bind map-by ~kf\n              ~(->> body\n                 (list* `for-by kf bindings)\n                 (list `let [s (first c/arg-sym)])\n                 (list `fn [])\n                 (list `cc/partial (list ::c/inject (first c/arg-sym))))\n              (::c/lift xs#))))\n    (cons `do body))) ; todo, buggy: (e/for [x []] (println 42)) should not print\n\n(defmacro for [bindings & body]\n  `(hyperfiddle.electric/for-by identity ~bindings ~@body))\n\n(cc/defn ^:no-doc watchable? [x]\n  #?(:clj (instance? clojure.lang.IRef x)\n     :cljs (satisfies? IWatchable x)))\n\n(cc/defn ^:no-doc checked-watch [!x]\n  (assert (watchable? !x) \"Provided argument is not Watchable.\")\n  (m/watch !x))\n\n(def -invalid-watch-usage-message \"Invalid e/watch (use from Electric code only, maybe you forgot a e/def?)\")\n\n(defmacro watch \"Derive a reactive value from a Clojure atom or reference.\"\n  [!x]\n  (if (bound? #'c/*env*)\n    `(new (checked-watch ~!x))\n    `(throw (ex-info -invalid-watch-usage-message ~(into {} (meta &form))))))\n\n(cc/defn debounce-discreet\n  ([delay flow] (debounce-discreet delay nil flow))\n  ([delay init flow] (m/reductions {} init (m/ap (let [x (m/?< flow)]\n                                                   (try (m/? (m/sleep delay x))\n                                                        (catch Cancelled _ (m/amb))))))) )\n\n(defmacro ^:deprecated debounce ; immoral? introduces avoidable delays\n  \"Debounce a continous flow by `delay` milliseconds.\"\n  [delay flow]\n  `(new (->> (fn [] ~flow)\n             (debounce-discreet ~delay)\n             (m/relieve {}))))\n\n(cc/defn throttle [dur >in] ; in CLJ, wrong number of args (1) passed to: hyperfiddle.electric-ui4/long --- ?????\n  (m/ap\n    (let [x (m/?> (m/relieve {} >in))]\n      (m/amb x (do (m/? (m/sleep dur)) (m/amb))))))\n\n(defmacro ^:deprecated remote [& body]\n  (if (= 1 (count body))\n    `(unquote-splicing ~@body)\n    `(unquote-splicing (do ~@body))))\n\n(defmacro client [& body]\n  (if (bound? #'c/*env*)\n    `(::c/client (do ~@body) ~(assoc (meta &form) ::dbg/type :transfer, ::dbg/name ::client))\n    `(throw (ex-info \"Invalid e/client in Clojure code block (use from Electric code only)\" ~(into {} (meta &form))))))\n\n(defmacro server [& body]\n  (if (bound? #'c/*env*)\n    `(::c/server (do ~@body) ~(assoc (meta &form) ::dbg/type :transfer, ::dbg/name ::server))\n    `(throw (ex-info \"Invalid e/server in Clojure code block (use from Electric code only)\" ~(into {} (meta &form))))))\n\n(defmacro discard\n  \"Silence \\\"Unserializable reference transfer\\\"; inlining `(do ... nil)` is idiomatic as well\"\n  [& body] `(do ~@body nil))\n\n(hyperfiddle.electric/def trace \"In a `catch` block, bound by the runtime to the current stacktrace. An Electric stacktrace is an ExceptionInfo. Use `hyperfiddle.electric.debug/stack-trace` to get a string representation.\" nil)\n\n(defmacro lexical-env \"Return a map containing lexical bindings\" []\n  (let [env (if (:js-globals &env) (:locals &env) &env)]\n    (with-meta\n      `{:env ~(reduce-kv (cc/fn [r k v] (assoc r (list 'quote k) k)) (empty env) env)}\n      (meta &form))))\n\n(defmacro with-cycle\n  \"evaluates body with symbol s bound to the previous result of the body evaluation.\n  the first evaluation binds s to i.\"\n  [[s i] & body]\n  `(let [a# (atom ~i) ~s (hyperfiddle.electric/watch a#)]\n     (reset! a# (do ~@body))))\n\n(defmacro partial-dynamic\n  \"Return a function calling given function `f` with given dynamic environment.\"\n  [bindings f]\n  `(cc/fn [& args#] (binding ~bindings (apply ~f args#))))\n\n(defmacro partial\n  \"Like `cc/partial` for reactive functions. Requires the target function\n  arity (`argc`) until reactive function supports variadic arguments.\n\n  e.g. (new (partial 2 (e/fn [a b] [a b]) :a) :b) ;; => [:a :b]\"\n  [argc F & args]\n  (if (= 0 argc)\n    F\n    (let [rest-args (map #(symbol (str \"arg_\" %)) (range (- argc (count args))))]\n      `(let [F# ~F]\n         (hyperfiddle.electric/fn ~@(when (symbol? F) [F]) [~@rest-args]\n                                  (new F# ~@args ~@rest-args))))))\n\n(defmacro on-unmount \"Run clojure(script) thunk `f` during unmount.\n\n  Standard electric code runs on mount, therefore there is no `on-mount`.\"\n  [f] `(new (m/observe (cc/fn [!#] (!# nil) ~f)))) ; experimental\n\n(defn ?PrintServerException [id]\n  (try (server\n         (when-some [ex (io/get-original-ex id)]\n           (println ex)\n           (try (client (js/console.log \"server logged the root exception\"))\n                (catch Pending _))))\n       (catch Pending _)))\n\n(defmacro with-zero-config-entrypoint [& body]\n  `(try\n     (do ~@body)\n     (catch Pending _#)                 ; silently ignore\n     (catch Cancelled e# (throw e#))    ; bypass catchall, app is shutting down\n     (catch :default err#               ; note client bias\n       (js/console.error\n         (str (ex-message err#) \"\\n\\n\" (dbg/stack-trace hyperfiddle.electric/trace)) \"\\n\\n\"\n         (or (io/get-original-ex (dbg/ex-id hyperfiddle.electric/trace)) err#))\n       (new ?PrintServerException (dbg/ex-id hyperfiddle.electric/trace)))))\n\n(defmacro boot \"\nTakes an Electric program and returns a task setting up the full system with client part running locally and server part\nrunning on a remote host.\n\" [& body]\n  (assert (:js-globals &env))\n  (let [[client server] (c/analyze\n                          (assoc &env ::c/peers-config {::c/local :cljs ::c/remote :clj})\n                          `(with-zero-config-entrypoint ~@body))]\n    `(hyperfiddle.electric-client/reload-when-stale\n      (hyperfiddle.electric-client/boot-with-retry\n       ~(r/emit (gensym) client)\n       (hyperfiddle.electric-client/connector (quote ~server))))))\n\n;; WIP: user space socket reconnection\n\n#_\n(hyperfiddle.electric/def ^{:doc \"\n`true` if the main process was cancelled, `false` otherwise.\n\"} cancelled (new r/cancelled))\n\n#_\n(hyperfiddle.electric/def ^{:doc \"\n`true` if the link to the remote peer is up, `false` otherwise. May throw Pending during connection.\n\"} connected (new r/connected))\n\n#_\n(hyperfiddle.electric/defn Entrypoint [App]\n  (or cancelled\n    (not= :waiting\n      (with-cycle [s {:status :connecting :delay 1000}]\n        (try (App.) (catch :default e (.error js/console e)))\n        (case (:status s)\n          :waiting (let [{:keys [since delay]} s\n                         remaining (-> since (+ delay) (- time))]\n                     (if (pos? remaining)\n                       (do (println (str \"Retrying in \" (int (/ remaining 1000)) \"s.\")) s)\n                       (do (println \"Connecting...\")\n                           (-> s\n                             (dissoc :since)\n                             (assoc :status :connecting)))))\n          :connecting (try (if connected\n                             (do (println \"Connected.\")\n                                 (-> s\n                                   (dissoc :delay)\n                                   (assoc :status :connected)))\n                             (do (println \"Failed to reconnect.\")\n                                 (-> s\n                                   (update :delay * 2)\n                                   (assoc :status :waiting\n                                          :since time))))\n                           (catch Pending _ s))\n          :connected (if connected\n                       s (do (println \"Connection reset.\")\n                             {:status :waiting\n                              :since  time\n                              :delay  1000})))))))\n\n(def ^:dynamic *http-request* \"Bound to the HTTP request of the page in which the current Electric program is running.\" nil)\n\n(defmacro check-electric [fn form]\n  (if (bound? #'c/*env*)\n    form\n    (throw (ex-info (str \"Electric code (\" fn \") inside a Clojure function\") (into {:electric-fn fn} (meta &form))))))\n\n(cc/defn -snapshot [flow] (->> flow (m/eduction (contrib.data/take-upto (complement #{r/pending})))))\n\n(defmacro snapshot \n  \"Snapshots the first non-Pending value of reactive value `x` and freezes it, \ninhibiting all further reactive updates.\" \n  [x] `(check-electric snapshot (new (-snapshot (hyperfiddle.electric/fn [] ~x)))))\n\n(cc/defn ->Object [] #?(:clj (Object.) :cljs (js/Object.))) ; private\n\n;; low-level, most powerful, hardest to use\n(defmacro for-event\n  ; Progress in UI is a continuous flow (succession of values) that eventually completes with a final result.\n  \"For each value of >flow, spawn concurrent `body` branches which individually \nprogress towards completion. Keeps each branch alive to progress in isolation \nuntil it signals completion by returning a reduced value, at which point the branch\nis unmounted. Returns active progress values as a vector. Exceptions bubble out.\"\n  [[sym >flow] & body]\n  `(let [mbx# (m/mbx)]\n     (new (m/reductions {} nil (m/eduction (map #(mbx# [::mx/add (->Object) %])) ~>flow)))\n     (for-by first [[progressing-event# ~sym] (new (mx/document (mx/poll-task mbx#)))]\n       (let [v# (do ~@body)]\n         (if (reduced? v#)\n           (do (mbx# [::mx/retract progressing-event#]) nil)\n           v#)))))\n\n(def pending (Pending.))\n\n;; high-level wrapper of above, returns a union type, waits for non-Pending value\n(defmacro for-event-pending\n  \"Like for-event, but each branch completes as soon as a non-Pending value or \nexception is available. Returns [::pending e/pending] if there are one or more\nuncompleted branches, otherwise returns a 4-colored result corresponding to the\nprogress of the most recently completed branch.\"\n  [bind & body]\n  `(let [!state# (atom [::init]), state# (hyperfiddle.electric/watch !state#)]\n     (if (seq (for-event ~bind\n                (try (reduced (reset! !state# [::ok (do ~@body)]))\n                     (catch Pending ex#)\n                     (catch Cancelled ex# (reduced nil))\n                     (catch ~(if (:ns &env) :default `Throwable) ex# \n                       (reduced (reset! !state# [::failed ex#]))))))\n       [::pending pending] ; save Pending exception for easy re-throw\n       state#)))\n\n;; e/for-event-pending-switch is similar to m/?<. \n;; When a new event comes in a new branch is immediately spawned and the previous cancelled\n;; ok, so these operators are basically the equivalent of m/?< m/?> and m/?= extended into continuous time. \n;; one runs events concurrently, one runs events sequentially, and one interrupts\n;; for-event-sequence, for-event-concurrent, for-event-interrupt\n(defmacro for-event-pending-switch ; for-event?<\n  \"Like for-event, but each new event supersedes the prior event, canceling and \ndiscarding previous it even if in progress. The single active branch completes \non the first non-Pending value. Returns a single four-colored result \ncorresponding to the progress of the most recent event.\"\n  [[sym >flow :as bind] & body]\n  `(let [!i# (atom 0), i# (hyperfiddle.electric/watch !i#)\n         !state# (atom [::init]), state# (hyperfiddle.electric/watch !state#)]\n     (if (seq (for-event ~bind\n                (try (when (<= i# (inc @!i#)) \n                       (reset! !state# [::ok (do ~@body)])) \n                  (reduced (swap! !i# inc))\n                  (catch Pending ex#)\n                  (catch Cancelled ex# (reduced nil))\n                  (catch ~(if (:ns &env) :default `Throwable) \n                    ex# (reduced (reset! !state# [::failed ex#]))))))\n       [::pending pending] state#)))\n\n(defmacro do-event ; for-one-event\n  \"Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a `reduced` value. On completion, \nunmounts the body, returning nil while waiting for a fresh event.\"\n  ; Useful for button case because it discards. Not useful for create-new, because it discards.\n  ; Does this blink-and-clear on completion?\n  \n  [[sym >flow] & body]\n  `(let [!e# (atom nil)]\n     (new (m/reductions #(swap! !e# (cc/fn [cur#] ; latch first non-nil event\n                                      (if (nil? cur#) %2 cur#))) ; discarding events until event processing completes\n            nil ~>flow))\n     (when-some [~sym (hyperfiddle.electric/watch !e#)] ; wait for non-nil event (rising edge), bind in scope for body\n       (let [v# (do ~@body)] ; nil is insignificant here\n         (if (reduced? v#) ; never seen\n           (reset! !e# nil) ; reset, unmount body, wait for fresh event\n           v#)))))\n\n(defmacro do-event-pending\n  \"Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a non-Pending result. On completion, \nunmounts the body, latches and returns the 4-colored result while waiting for a \nfresh event.\"\n  [[sym >flow :as bind] & body]\n  `(let [!state# (atom [::init])]\n     (do-event ~bind\n       ; D: Why not leave the body alive, is the signal state the same as this explicit latch?\n       (try (reduced (reset! !state# [::ok (do ~@body)])) ; latch result\n            (catch Pending ex# (reset! !state# [::pending pending])) ; wait longer\n            (catch Cancelled ex# (reduced nil))\n            (catch ~(if (:ns &env) :default `Throwable) ex#\n              (reduced (reset! !state# [::failed ex#]))))) ; latch result\n     (hyperfiddle.electric/watch !state#)))\n","~:reader-features",["^V",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["cljs.core/PROTOCOL_SENTINEL","js/hyperfiddle.electric.Pending","this","other","js/hyperfiddle.electric.Failure","cljs.core._EQ_","js/hyperfiddle.electric.FailureInfo","cljs.core/ExceptionInfo","hyperfiddle.electric/eval","hyperfiddle.electric.impl.runtime/eval","hyperfiddle.electric/hook","hyperfiddle.electric.impl.runtime/hook","hyperfiddle.electric/bind","hyperfiddle.electric.impl.runtime/bind","hyperfiddle.electric/with","hyperfiddle.electric.impl.runtime/with","hyperfiddle.electric/pair","c","s","cljs.core.partial","cr34116-state","cr34116-place-0","cr34116-place-1","cr34116-place-2","cr34116-place-3","cr34116-place-4","cr34116-place-5","cljs.core/IMap","cr34116-place-6","cr34116-place-7","cr34116-place-8","cr34116-place-9","cr34116-place-10","cr34116-place-11","cr34116-place-12","cr34116-place-13","cr34116-place-14","cr34116-place-15","cr34116-place-16","cr34116-place-17","cr34116-place-18","cr34116-place-19","cr34116-place-20","cr34116-block-1","missionary.core/park","cr34116-exception","e34179","cr34116-place-21","missionary.core/unpark","e34213","cloroutine.impl/coroutine","G__34214","cljs.core.object_array","cr34116-block-0","missionary.core/sp-run","fexpr__34180","missionary.core/dfv","fexpr__34181","G__34210","G__34211","G__34212","fexpr__34209","missionary.core/join","G__34193","G__34194","fexpr__34192","x","cr34119-state","cr34119-place-0","cr34119-block-1","e34125","e34186","cr34119-exception","cr34119-place-1","cr34119-place-2","cr34119-place-3","cr34119-place-4","e34126","e34187","G__34129","cr34119-block-0","G__34128","fexpr__34127","G__34189","fexpr__34188","!","G__34191","fexpr__34190","p1__34115#","G__34206","G__34207","G__34208","fexpr__34205","cr34133-state","cr34133-place-0","cr34133-block-1","e34139","e34199","cr34133-exception","cr34133-place-1","cr34133-place-2","cr34133-place-3","cr34133-place-4","e34140","e34200","G__34143","cr34133-block-0","G__34142","fexpr__34141","G__34202","fexpr__34201","G__34204","fexpr__34203","hyperfiddle.electric/failure?","var_args","G__34218","hyperfiddle.electric/task->cp","js/Error","!x","hyperfiddle.electric.task__GT_cp","pending","cr34219-state","cr34219-place-0","cr34219-block-1","cr34219-exception","e34222","cr34219-place-1","e34223","G__34224","cr34219-block-0","missionary.core/ap-run","missionary.core.reductions","unused__14959__auto__","self__","G__34226","args34225","cljs.core/aclone","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","hyperfiddle.electric/Clock","hyperfiddle.electric/->Clock","raf","callback","terminator","_","js/window","hyperfiddle.electric/<clock","n","t","cancel","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","hyperfiddle.electric/-get-system-time-ms","p__34228","vec__34229","cljs.core.nth","seq34227","self__5755__auto__","cljs.core/seq","js/Date.now","hyperfiddle.electric/dom-listener","node","typ","f","opts","cljs.core/clj->js","G__34234","hyperfiddle.electric/listen>","event-type","hyperfiddle.electric.listen_GT_","cljs.core/identity","keep-fn!","missionary.core/relieve","missionary.core/observe","p1__34232#","temp__5808__auto__","v","hyperfiddle.electric/<dom-visibility-state","js/document","missionary.core.latest","hyperfiddle.electric/-check-fn-arity!","name","expected","actual","cljs.core.not_EQ_","cljs.core.ex_info","or__5045__auto__","cljs.core.pr_str","hyperfiddle.electric/watchable?","cljs.core/native-satisfies?","cljs.core/IWatchable","hyperfiddle.electric/checked-watch","missionary.core/watch","hyperfiddle.electric/-invalid-watch-usage-message","G__34238","hyperfiddle.electric/debounce-discreet","delay","flow","hyperfiddle.electric.debounce_discreet","init","cr34239-state","cr34239-place-21","cr34239-block-11","cr34239-exception","e34257","cr34239-block-12","cr34239-place-13","cr34239-place-14","cr34239-block-7","cr34239-block-6","e34258","cr34239-place-2","cr34239-place-3","cr34239-place-22","e34259","cr34239-place-9","cr34239-place-10","cr34239-place-11","cr34239-place-12","cr34239-block-9","cr34239-block-5","e34260","cr34239-place-8","e34261","cr34239-block-4","cr34239-place-18","cr34239-place-19","cr34239-place-20","missionary.core/none","cr34239-block-10","missionary.core/fork","e34262","cr34239-place-16","cr34239-place-17","e34263","cr34239-place-0","cr34239-block-1","missionary.core/switch","e34264","cr34239-place-1","cr34239-place-4","cr34239-place-5","cr34239-place-6","cr34239-place-7","cr34239-block-3","e34265","cr34239-block-2","e34269","e34270","cr34239-place-15","cr34239-block-8","e34271","e34272","G__34273","cr34239-block-0","G__34267","G__34268","fexpr__34266","missionary.core/sleep","js/missionary.Cancelled","hyperfiddle.electric/throttle","dur",">in","cr34274-state","cr34274-place-0","cr34274-place-1","cr34274-place-2","cr34274-place-3","cr34274-place-4","cr34274-block-1","cr34274-exception","e34295","cr34274-place-19","cr34274-place-20","cr34274-place-21","cr34274-block-6","e34299","cr34274-place-12","cr34274-place-23","cr34274-place-24","cr34274-place-25","cr34274-place-26","cr34274-place-27","e34300","cr34274-place-13","cr34274-place-14","G__34302","cr34274-block-3","cr34274-block-4","cr34274-block-7","e34301","cr34274-place-5","cr34274-place-6","cr34274-place-7","missionary.core/seed","cr34274-place-8","cljs.core/range","cr34274-place-9","cr34274-place-10","cr34274-place-11","cr34274-block-2","e34303","cr34274-place-15","cr34274-block-8","e34308","cr34274-place-22","e34309","e34310","cr34274-place-16","cr34274-place-17","cr34274-place-18","cr34274-block-5","e34311","G__34314","cr34274-block-0","G__34297","G__34298","fexpr__34296","G__34305","fexpr__34304","G__34307","fexpr__34306","G__34313","fexpr__34312","hyperfiddle.electric/*http-request*","hyperfiddle.electric/-snapshot","missionary.core.eduction","contrib.data/take-upto","cljs.core/complement","hyperfiddle.electric.impl.runtime/pending","hyperfiddle.electric/->Object","js/Object","hyperfiddle.electric/pending"]],"~:used-vars",["^V",["~$hyperfiddle.electric/watchable?","~$hyperfiddle.electric.impl.runtime/with","~$cljs.core/PROTOCOL_SENTINEL","~$hyperfiddle.electric/Clock","~$js/document","~$missionary.core/reductions","~$hyperfiddle.electric/-snapshot","~$hyperfiddle.electric/<dom-visibility-state","~$cljs.core/IWatchable","~$missionary.core/ap-run","~$js/hyperfiddle.electric.FailureInfo","~$hyperfiddle.electric/dom-listener","~$cljs.core/=","~$hyperfiddle.electric/system-time-ms","~$hyperfiddle.electric/bind","~$cljs.core/partial","~$hyperfiddle.electric/failure?","~$cljs.core/-write","~$js/hyperfiddle.electric.Pending","~$cljs.core/IndexedSeq","~$missionary.core/seed","~$hyperfiddle.electric/-invalid-watch-usage-message","~$cljs.core/seq","~$cljs.core/identity","~$cljs.core/aclone","~$cljs.core/object-array","~$cljs.core/not=","~$hyperfiddle.electric/hook","~$hyperfiddle.electric/dom-visibility-state","~$missionary.core/switch","~$cljs.core/ExceptionInfo","~$cljs.core/pr-str","~$hyperfiddle.electric/eval","~$cljs.core/native-satisfies?","~$hyperfiddle.electric/task->cp","~$missionary.core/watch","~$js/Date.now","~$missionary.core/dfv","~$missionary.core/latest","~$js/missionary.Cancelled","~$hyperfiddle.electric/*http-request*","~$hyperfiddle.electric/pair","~$missionary.core/unpark","~$missionary.core/relieve","~$missionary.core/fork","~$missionary.core/park","~$missionary.core/eduction","~$hyperfiddle.electric.impl.runtime/bind","~$cljs.core/clj->js","~$js/hyperfiddle.electric.Failure","~$cloroutine.impl/coroutine","~$missionary.core/none","~$missionary.core/sleep","~$contrib.data/take-upto","~$hyperfiddle.electric/pending","~$hyperfiddle.electric/debounce-discreet","~$cljs.core/nth","~$hyperfiddle.electric/trace","~$cljs.core/ex-info","~$hyperfiddle.electric/dom-mousemove","~$missionary.core/join","~$hyperfiddle.electric/-get-system-time-ms","~$hyperfiddle.electric.impl.runtime/hook","~$hyperfiddle.electric/-check-fn-arity!","~$cljs.core/not","~$cljs.core/complement","~$hyperfiddle.electric/?PrintServerException","~$hyperfiddle.electric.impl.runtime/eval","~$cljs.core/range","~$hyperfiddle.electric/system-time-secs","~$js/Object","~$hyperfiddle.electric.impl.runtime/pending","~$hyperfiddle.electric/<clock","~$js/window","~$hyperfiddle.electric/throttle","~$hyperfiddle.electric/checked-watch","~$hyperfiddle.electric/->Clock","~$hyperfiddle.electric/with","~$js/Error","~$missionary.core/observe","~$cljs.core/IMap","~$missionary.core/sp-run","~$hyperfiddle.electric/->Object","~$hyperfiddle.electric/listen>"]]],"~:cache-keys",["~#cmap",[["^3L","hyperfiddle/electric/impl/array_fields.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^V",[]],"~:deps-syms",["^35","^E","~$hyperfiddle.rcf"]]],["^3L","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.dom.HtmlElement"]]],["^3L","missionary/Cancelled.js"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$clojure.string","~$goog.string"]]],["^3L","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","hyperfiddle/electric/impl/for.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$hyperfiddle.electric.impl.gather","~$hyperfiddle.electric.impl.eventually","^30","^2[","^5Z","^60","^2X","^2T"]]],["^3L","cljs/env.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","hyperfiddle/electric_client.cljs"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^S","^2[","^30","^33","^2X"]]],["^3L","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^3L","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^67"]]],["^3L","cljs/analyzer/impl/namespaces.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","missionary/impl/Semaphore.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68"]]],["^3L","com/cognitect/transit/impl/reader.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$com.cognitect.transit.impl.decoder","~$com.cognitect.transit.caching"]]],["^3L","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","missionary/impl/Reactor.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","hyperfiddle/electric/impl/eventually.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","missionary/core.cljc"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cloroutine.core","~$missionary.impl.Reduce","~$missionary.impl.Reductions","~$missionary.impl.GroupBy","~$missionary.impl.Relieve","~$missionary.impl.Latest","~$missionary.impl.Sample","~$missionary.impl.Reactor","~$missionary.impl.Fiber","~$missionary.impl.Sequential","~$missionary.impl.Ambiguous","~$missionary.impl.Continuous","~$missionary.impl.Watch","~$missionary.impl.Observe","~$missionary.impl.Buffer","~$missionary.impl.Rendezvous","~$missionary.impl.Dataflow","~$missionary.impl.Mailbox","~$missionary.impl.Semaphore","~$missionary.impl.RaceJoin","~$missionary.impl.Sleep","~$missionary.impl.Never","~$missionary.impl.Seed","~$missionary.impl.Eduction","~$missionary.impl.Zip"]]],["^3L","hyperfiddle/electric/impl/runtime.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$hyperfiddle.electric.impl.yield2","~$hyperfiddle.electric.impl.failer","~$hyperfiddle.electric.impl.local","~$hyperfiddle.electric.impl.ir","^2Z","^2[","^5Z","^60","^37","^2X","^2T","^2R","~$hyperfiddle.electric.Remote"]]],["^3L","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^61","~$goog.string.StringBuffer"]]],["^3L","missionary/impl/Seed.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","hyperfiddle/rcf.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.test","^60","~$hyperfiddle.rcf.reporters","~$hyperfiddle.rcf.queue","~$hyperfiddle.rcf.time","~$hyperfiddle.rcf.unify"]]],["^3L","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","com/cognitect/transit/util.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^65"]]],["^3L","hyperfiddle/electric/Pending.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^60","^61","^78"]]],["^3L","missionary/impl/RaceJoin.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^74","^75","^76","^73","^64","^61","^78"]]],["^3L","hyperfiddle/electric/impl/io.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2[","~$cognitect.transit","^2Z","^5Z","~$com.cognitect.transit.types","~$hyperfiddle.electric.impl.array-fields","^2X","^2T","^2R","^72","^2V"]]],["^3L","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cloroutine/core.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cloroutine.impl"]]],["^3L","hyperfiddle/electric.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^E","^37","^S","^36","^3:","^30","^38","^2[","^34","^33","^2Z","^2R","^2T","^2V","^2X"]]],["^3L","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68"]]],"~:SHADOW-TIMESTAMP",[1677656185000,1677656185000,1674331854000],["^3L","missionary/impl/Sequential.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^6I","^2X"]]],["^3L","missionary/impl/Ambiguous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^6I","^2X"]]],["^3L","missionary/impl/Watch.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","~$goog.reflect"]]],["^3L","missionary/impl/Eduction.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","~$goog.fs.blob","^69","~$goog.html.SafeScript","~$goog.html.trustedtypes","^6;","^6<","^6=","^6>"]]],["^3L","missionary/impl/Latest.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$missionary.impl.Heap"]]],["^3L","missionary/impl/Sample.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","cljs/analyzer/passes/and_or.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.analyzer.passes"]]],["^3L","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","missionary/impl/Relieve.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","missionary/impl/GroupBy.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","hyperfiddle/electric/Remote.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","missionary/impl/Zip.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^6=","~$goog.html.SafeUrl","^6>","^68","^67"]]],["^3L","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^7E","~$goog.html.SafeStyle","^7I","^6:","~$goog.html.uncheckedconversions","^6=","^67"]]],["^3L","contrib/data.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^C","~$clojure.datafy","^5Z"]]],["^3L","missionary/impl/Buffer.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","com/cognitect/transit/delimiters.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/analyzer/passes.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^6=","^6;","^6<","^7E","^7M","~$goog.html.SafeStyleSheet","^7I","~$goog.dom.TagName","^6:","^6>","^68","~$goog.labs.userAgent.browser","^64","^65","^67","~$goog.dom.tags","^7F"]]],["^3L","cljs/math.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^65"]]],["^3L","hyperfiddle/electric/impl/ir.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","missionary/impl/Continuous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^6I","^2X"]]],["^3L","missionary/impl/Reduce.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","hyperfiddle/electric/impl/gather.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^6["]]],["^3L","hyperfiddle/rcf/time.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","com/cognitect/transit/impl/decoder.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$com.cognitect.transit.util","~$com.cognitect.transit.delimiters","^6@","^7?"]]],["^3L","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^65","^77","~$cljs.tools.reader.edn","^78"]]],["^3L","missionary/impl/Dataflow.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","missionary/impl/Mailbox.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^3L","hyperfiddle/electric/impl/yield2.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X","^5Z","^7@","^2["]]],["^3L","cljs/tagged_literals.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.reader"]]],["^3L","contrib/missionary_contrib.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2[","^5Z"]]],["^3L","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^64","^68","~$goog.collections.maps","^61","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^3L","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cloroutine/impl.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.analyzer","~$cljs.env"]]],["^3L","contrib/cljs_target.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^65"]]],["^3L","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","missionary/impl/Observe.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","clojure/core/protocols.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",[]]],["^3L","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^64","^65"]]],["^3L","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^74","^60","~$cljs.tools.reader.impl.inspect"]]],["^3L","missionary/impl/Rendezvous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^61","^78"]]],["^3L","missionary/impl/Reductions.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","com/cognitect/transit/handlers.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7T","^7?","~$goog.math.Long"]]],["^3L","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.dom.safe","^7N","^6=","^67"]]],["^3L","com/cognitect/transit/types.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7T","~$com.cognitect.transit.eq","^86"]]],["^3L","missionary/impl/Sleep.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","hyperfiddle/rcf/queue.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^7<"]]],["^3L","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","~$goog.labs.userAgent","^67"]]],["^3L","com/cognitect/transit/eq.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7T"]]],["^3L","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^75","^61","^78"]]],["^3L","missionary/impl/Heap.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","hyperfiddle/electric/impl/compiler.cljs"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","hyperfiddle/electric/impl/failer.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","missionary/impl/Fiber.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","^7L","^7E","^7M","^7P","^7I","^6:","^6=","^67","^6;"]]],["^3L","hyperfiddle/rcf/unify.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$clojure.walk","~$clojure.set"]]],["^3L","com/cognitect/transit/caching.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7U"]]],["^3L","hyperfiddle/electric/debug.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^60","^37","^5Z","^2T","^2R","^2X","^2V"]]],["^3L","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^73","^74","^75"]]],["^3L","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^86","~$goog.math.Integer","^61","^65","^64","~$goog.Uri","^78"]]],["^3L","com/cognitect/transit.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7T","~$com.cognitect.transit.impl.reader","~$com.cognitect.transit.impl.writer","^7?","^88","^6?","^6@"]]],["^3L","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^6=","^6>","^7F","^68"]]],["^3L","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^6=","^7M","^6>","^65","^68","^67"]]],["^3L","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7C"]]],["^3L","hyperfiddle/electric/Failure.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]],["^3L","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","^61"]]],["^3L","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^68","^6>"]]],["^3L","cljs/analyzer.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$cljs.analyzer.impl","~$cljs.analyzer.impl.namespaces","~$cljs.analyzer.passes.and-or","^84","^7Y","~$cljs.tagged-literals","^77","^74","^8;","^60","^61"]]],["^3L","clojure/datafy.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","~$clojure.core.protocols"]]],["^3L","hyperfiddle/rcf/reporters.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^79"]]],["^3L","com/cognitect/transit/impl/writer.js"],["f8b4f570ca4d41649190efecac27a5932cc11429","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^7T","^6@","~$com.cognitect.transit.handlers","^7?","^7U","^86"]]],["^3L","cljs/test.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^60","^?"]]],["^3L","hyperfiddle/electric/impl/local.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","cljs/analyzer/impl.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E"]]],["^3L","cognitect/transit.cljs"],["98d11d81caee82f97b9417025750b785fb6ecb16","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^8;","~$com.cognitect.transit","^7?","^88","^65","^86"]]],["^3L","missionary/impl/Never.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35","^E","^2X"]]],["^3L","hyperfiddle/electric/FailureInfo.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^5V",["^ ","^5W",null,"^5X",["^V",[]],"^5Y",["^35"]]]]],"~:clj-info",["^ ","jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/local.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/gather.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/passes/emit_form.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.logging/1.2.4/tools.logging-1.2.4.jar!/clojure/tools/logging.clj",1677656081000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/template.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/env.clj",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.logging/1.2.4/tools.logging-1.2.4.jar!/clojure/tools/logging/impl.clj",1677656081000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/cljs_target.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/api.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/impl.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/cognitect/transit-clj/1.0.329/transit-clj-1.0.329.jar!/cognitect/transit.clj",1674332080000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/test.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/unify.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/time.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/test.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/missionary/missionary/b.28/missionary-b.28.jar!/missionary/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/io.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/analyzer.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/missionary_contrib.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/debug.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/impl.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/yield2.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/ast.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/compiler.clj",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/array_fields.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/stacktrace.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/failer.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/reflect.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/queue.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/env.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/analyzer.clj",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/passes/jvm/emit_form.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/data.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/runtime.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/ir.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm.clj",1691052514000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",1,"^8",5,"^9",1,"^:",25],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H","^I","^H","^J","^H","^K","^H","^L","^H","^M","^H","^N","^H","^O","^H","^P","^H","^Q","^H","^R","^S","^T","^H"],"^U",["^V",["^W","^K","^X","^M","^P","^Y","^T"]],"^Z",["^ ","^[",["^ ","^10",["^11",[["^12","~$f"]]],"^13","Return a function calling given function `f` with given dynamic environment.","^7",331,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^15","^16","^H","^17",true],"^G",["^ ","^10",["^11",[["~$&","^18"]]],"^13","Single peer loopback system without whitelist. Returns boot task.","^7",77,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^19","^16","^H","^17",true],"^1:",["^ ","^1;",true,"^10",["^11",[["~$&","^18"]]],"^7",297,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1<","^16","^H","^17",true],"^I",["^ ","^10",["^11",[["~$&","^18"]]],"^13","test entrypoint without whitelist.","^7",84,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1=","^16","^H","^17",true],"^J",["^ ","^16","^H","^14","^1>","^6","hyperfiddle/electric.cljc","^8",1,"^7",115,"^17",true,"^1;",true,"^10",["^11",[["~$&","^18"]]],"^13","Deprecated. Use `offload` instead."],"^K",["^ ","^10",["^11",[["^1?","~$&",["^1@","~$&","^18"]]]],"^7",217,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1A","^16","^H","^17",true],"^L",["^ ","^10",["^11",[["^1B","^12","~$&","^18"]]],"^7",248,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1C","^16","^H","^17",true],"^1D",["^ ","^10",["^11",[[]]],"^13","Return a map containing lexical bindings","^7",318,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1E","^16","^H","^17",true],"^M",["^ ","^10",["^11",[["^1F","~$&","^1G"]]],"^7",239,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1H","^16","^H","^17",true],"^N",["^ ","^16","^H","^14","^1I","^6","hyperfiddle/electric.cljc","^8",1,"^7",285,"^17",true,"^1;",true,"^10",["^11",[["^1J","^1K"]]],"^13","Debounce a continous flow by `delay` milliseconds."],"^1L",["^ ","^10",["^11",[["~$&","^18"]]],"^7",307,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1M","^16","^H","^17",true],"^1N",["^ ","^10",["^11",[["^1O","~$&","^18"]]],"^13","Like for-event, but each branch completes as soon as a non-Pending value or \nexception is available. Returns [::pending e/pending] if there are one or more\nuncompleted branches, otherwise returns a 4-colored result corresponding to the\nprogress of the most recently completed branch.","^7",465,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1P","^16","^H","^17",true],"^O",["^ ","^10",["^11",[["~$&","^18"]]],"^13","\nTakes an Electric program and returns a task setting up the full system with client part running locally and server part\nrunning on a remote host.\n","^7",373,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1Q","^16","^H","^17",true],"^1R",["^ ","^10",["^11",[[["^1F","^1S","^1T","^1O"],"~$&","^18"]]],"^13","Like for-event, but each new event supersedes the prior event, canceling and \ndiscarding previous it even if in progress. The single active branch completes \non the first non-Pending value. Returns a single four-colored result \ncorresponding to the progress of the most recent event.","^7",486,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1U","^16","^H","^17",true],"^1V",["^ ","^10",["^11",[["~$&","^18"]]],"^7",302,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1W","^16","^H","^17",true],"^1X",["^ ","^10",["^11",[[["^1F","^1S","^1T","^1O"],"~$&","^18"]]],"^13","Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a non-Pending result. On completion, \nunmounts the body, latches and returns the 4-colored result while waiting for a \nfresh event.","^7",522,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1Y","^16","^H","^17",true],"^1Z",["^ ","^10",["^11",[["~$&","^18"]]],"^7",362,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^1[","^16","^H","^17",true],"^20",["^ ","^10",["^11",[[["~$s","~$i"],"~$&","^18"]]],"^13","evaluates body with symbol s bound to the previous result of the body evaluation.\n  the first evaluation binds s to i.","^7",324,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^21","^16","^H","^17",true],"^P",["^ ","^10",["^11",[["^12","~$&","^18"]]],"^7",260,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^22","^16","^H","^17",true],"^Y",["^ ","^10",["^11",[["^23","~$F","~$&","^1@"]]],"^13","Like `cc/partial` for reactive functions. Requires the target function\n  arity (`argc`) until reactive function supports variadic arguments.\n\n  e.g. (new (partial 2 (e/fn [a b] [a b]) :a) :b) ;; => [:a :b]","^7",336,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^24","^16","^H","^17",true],"^25",["^ ","^10",["^11",[["~$x"]]],"^13","Snapshots the first non-Pending value of reactive value `x` and freezes it, \ninhibiting all further reactive updates.","^7",439,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^26","^16","^H","^17",true],"^27",["^ ","^10",["^11",[[["^1F","^1S"],"~$&","^18"]]],"^13","Run `body` continuation in response to next event (silently discarding subsequent \nevents) until it completes by evaluating to a `reduced` value. On completion, \nunmounts the body, returning nil while waiting for a fresh event.","^7",504,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^28","^16","^H","^17",true],"^29",["^ ","^10",["^11",[["^K","^2:"]]],"^7",432,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2;","^16","^H","^17",true],"^2<",["^ ","^10",["^11",[["^2="]]],"^13","Derive a reactive value from a Clojure atom or reference.","^7",273,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2>","^16","^H","^17",true],"^Q",["^ ","^10",["^11",[["~$f"]]],"^13","Run clojure(script) thunk `f` during unmount.\n\n  Standard electric code runs on mount, therefore there is no `on-mount`.","^7",349,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2?","^16","^H","^17",true],"^2@",["^ ","^10",["^11",[["~$&","^18"]]],"^13","Silence \"Unserializable reference transfer\"; inlining `(do ... nil)` is idiomatic as well","^7",312,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2A","^16","^H","^17",true],"^2B",["^ ","^10",["^11",[["^2C","^2D"],["^2C"]]],"^7",95,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2E","^16","^H","^17",true],"^2F",["^ ","^10",["^11",[[["^1F","^1S"],"~$&","^18"]]],"^13","For each value of >flow, spawn concurrent `body` branches which individually \nprogress towards completion. Keeps each branch alive to progress in isolation \nuntil it signals completion by returning a reduced value, at which point the branch\nis unmounted. Returns active progress values as a vector. Exceptions bubble out.","^7",447,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2G","^16","^H","^17",true],"^2H",["^ ","^10",["^11",[["^2C","^2D"],["^2C"]]],"^13","run a blocking function (i.e. query) on threadpool specified by `executor` (i.e. m/blk or m/cpu).\nIO-bound fns should use m/blk, which is the default. Compute-bound fns should pass m/cpu. Custom\nexecutors are allowed (i.e. to control max concurrency, timeouts etc). Currently JVM only.","^7",105,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2I","^16","^H","^17",true],"^T",["^ ","^10",["^11",[["^2J"],["^2J","^2K","^2L"],["^2J","^2L"]]],"^7",165,"^8",1,"^6","hyperfiddle/electric.cljc","^14","^2M","^16","^H","^17",true]],"~:shadow/js-access-properties",["^V",["now"]],"^14","^H","^2N",["^ "],"^2P",["^ ","^2Q","^2R","^2S","^2T","^2U","^2V","^2W","^2X"],"^2Y",["^ ","^2W","^2X","^2Z","^2Z","^2T","^2T","^2[","^2[","^S","^S","~$r","^30","^31","^2Z","^2S","^2T","^E","^E","^2Q","^2R","^32","^33","^34","^34","^35","^35","^36","^36","^D","^E","^33","^33","~$m","^2[","^30","^30","^37","^37","^38","^38","^39","^E","^2V","^2V","^3:","^3:","^2U","^2V","~$c","^3:","^2X","^2X","^3;","^36","^2R","^2R"],"^3<",["^V",["^3=","^3>"]],"~:shadow/js-access-global",["^V",["window","Object","Date","document","Error"]],"^3?",["^ ","^R","^S","^3@","^38"],"~:defs",["^ ","~$dom-listener",["^ ","~:protocol-inline",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",180,"^8",19,"^9",180,"^:",31,"^10",["^11",["~$quote",["^11",[["~$node","~$typ","~$f","~$opts"]]]]]],"^14","^47","^6","hyperfiddle/electric.cljc","^:",31,"~:method-params",["^11",[["^:I","^:J","~$f","^:K"]]],"~:protocol-impl",null,"~:arglists-meta",["^11",[null,null]],"^8",10,"~:variadic?",false,"^7",180,"~:ret-tag","~$function","^9",180,"~:max-fixed-arity",4,"~:fn-var",true,"^10",["^11",["^:H",["^11",[["^:I","^:J","~$f","^:K"]]]]]],"~$?PrintServerException",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",354,"^8",7,"^9",354,"^:",28,"^10",["^11",["^:H",["^11",[["~$id"]]]]],"~:hyperfiddle.electric.impl.compiler/node",["^11",["^1A","^:T",["^:U"],["^11",["~$try",["^11",["^1L",["^11",["~$when-some",["~$ex",["^11",["~$io/get-original-ex","^:U"]]],["^11",["~$println","^:Y"]],["^11",["^:W",["^11",["^1V",["^11",["~$js/console.log","server logged the root exception"]]]],["^11",["~$catch","^2Q","~$_"]]]]]]]],["^11",["^;1","^2Q","~$_"]]]]]]],"^14","^5B","^6","hyperfiddle/electric.cljc","^:",28,"^8",1,"^:V",["^11",["^1A","^:T",["^:U"],["^11",["^:W",["^11",["^1L",["^11",["^:X",["^:Y",["^11",["^:Z","^:U"]]],["^11",["^:[","^:Y"]],["^11",["^:W",["^11",["^1V",["^11",["^;0","server logged the root exception"]]]],["^11",["^;1","^2Q","~$_"]]]]]]]],["^11",["^;1","^2Q","~$_"]]]]]],"^7",354,"^9",354,"^10",["^11",["^:H",["^11",[["^:U"]]]]]],"~$-invalid-watch-usage-message",["^ ","^14","^4A","^6","hyperfiddle/electric.cljc","^7",271,"^8",1,"^9",271,"^:",34,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",271,"^8",6,"^9",271,"^:",34],"~:tag","~$string"],"^W",["^ ","^14","^4L","^6","hyperfiddle/electric.cljc","^7",54,"^8",1,"^9",54,"^:",10,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",54,"^8",6,"^9",54,"^:",10],"^13","Takes a resolve map and a program, returns a booting function.\n  The booting function takes\n  * as first argument a function Any->Task[Unit] returned task writes the value on the wire.\n  * as second argument a flow producing the values read on the wire.\n  and returning a task that runs the local reactor."],"^1O",["^ ","^14","^4:","^6","hyperfiddle/electric.cljc","^7",62,"^8",1,"^9",62,"^:",10,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",62,"^8",6,"^9",62,"^:",10]],"~$hook",["^ ","^14","^4G","^6","hyperfiddle/electric.cljc","^7",61,"^8",1,"^9",61,"^:",10,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",61,"^8",6,"^9",61,"^:",10]],"~$dom-mousemove",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",201,"^8",27,"^9",201,"^:",40,"^13","mousemove events, Pending if unknown","^:V",["^11",["^1V",["^11",["~$new",["^11",["~$m/reductions",["^ "],"~$r/pending",["^11",["~$e/listen>","^40","mousemove"]]]]]]]]],"^14","^5;","^6","hyperfiddle/electric.cljc","^:",40,"^8",1,"^:V",["^11",["^1V",["^11",["^;7",["^11",["^;8",["^ "],"^;9",["^11",["^;:","^40","mousemove"]]]]]]]],"^7",201,"^9",201,"^13","mousemove events, Pending if unknown"],"~$task->cp",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",123,"^8",10,"^9",123,"^:",18,"^10",["^11",["^:H",["^11",[["^2="],["^2=","~$pending"]]]]],"~:top-fn",["^ ","^:O",false,"~:fixed-arity",2,"^:R",2,"^:L",[["^2="],["^2=","^;<"]],"^10",["^11",[["^2="],["^2=","^;<"]]],"^:N",["^11",[null,null]]]],"^14","^4N","^6","hyperfiddle/electric.cljc","^:",18,"^;=",["^ ","^:O",false,"^;>",2,"^:R",2,"^:L",[["^2="],["^2=","^;<"]],"^10",["^11",[["^2="],["^2=","^;<"]]],"^:N",["^11",[null,null]]],"^:L",[["^2="],["^2=","^;<"]],"^:M",null,"^;>",2,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"~:methods",[["^ ","^;>",1,"^:O",false,"^;3","~$any"],["^ ","^;>",2,"^:O",false,"^;3","^:Q"]],"^7",123,"^9",123,"^:R",2,"^:S",true,"^10",["^11",[["^2="],["^2=","^;<"]]]],"~$dom-visibility-state",["^ ","^14","^4H","^6","hyperfiddle/electric.cljc","^7",199,"^8",1,"^9",199,"^:",47,"^:V",["^11",["^1V",["^11",["^;7",["^11",["~$identity","~$<dom-visibility-state"]]]]]],"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",199,"^8",27,"^9",199,"^:",47,"^:V",["^11",["^1V",["^11",["^;7",["^11",["^;B","^;C"]]]]]]]],"~$-snapshot",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",437,"^8",10,"^9",437,"^:",19,"^10",["^11",["^:H",["^11",[["^1K"]]]]]],"^14","^42","^6","hyperfiddle/electric.cljc","^:",19,"^:L",["^11",[["^1K"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",437,"^:P","^;@","^9",437,"^:R",1,"^:S",true,"^10",["^11",["^:H",["^11",[["^1K"]]]]]],"^;C",["^ ","^14","^43","^6","hyperfiddle/electric.cljc","^7",193,"^8",10,"^9",193,"^:",36,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",193,"^8",15,"^9",193,"^:",36],"^;3","^:Q"],"~$pair",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",65,"^8",10,"^9",65,"^:",14,"^10",["^11",["^:H",["^11",[["~$c","~$s"]]]]]],"^14","^4U","^6","hyperfiddle/electric.cljc","^:",14,"^:L",["^11",[["~$c","~$s"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",65,"^:P","^:Q","^9",65,"^:R",2,"^:S",true,"^10",["^11",["^:H",["^11",[["~$c","~$s"]]]]]],"~$trace",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",316,"^8",27,"^9",316,"^:",32,"^13","In a `catch` block, bound by the runtime to the current stacktrace. An Electric stacktrace is an ExceptionInfo. Use `hyperfiddle.electric.debug/stack-trace` to get a string representation.","^:V",null],"^14","^59","^6","hyperfiddle/electric.cljc","^:",32,"^8",1,"^:V",null,"^7",316,"^9",316,"^13","In a `catch` block, bound by the runtime to the current stacktrace. An Electric stacktrace is an ExceptionInfo. Use `hyperfiddle.electric.debug/stack-trace` to get a string representation."],"~$listen>",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",184,"^8",19,"^9",184,"^:",26,"^10",["^11",["^:H",["^11",[["^:I","~$event-type"],["^:I","^;H","~$keep-fn!"],["^:I","^;H","^;I","^:K"]]]]],"^;=",["^ ","^:O",false,"^;>",4,"^:R",4,"^:L",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]],"^10",["^11",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]]],"^:N",["^11",[null,null,null]]]],"^14","^5S","^6","hyperfiddle/electric.cljc","^:",26,"^;=",["^ ","^:O",false,"^;>",4,"^:R",4,"^:L",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]],"^10",["^11",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]]],"^:N",["^11",[null,null,null]]],"^:L",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]],"^:M",null,"^;>",4,"^:N",["^11",[null,null,null]],"^8",10,"^:O",false,"^;?",[["^ ","^;>",2,"^:O",false,"^;3","^;@"],["^ ","^;>",3,"^:O",false,"^;3","^;@"],["^ ","^;>",4,"^:O",false,"^;3","^:Q"]],"^7",184,"^9",184,"^:R",4,"^:S",true,"^10",["^11",[["^:I","^;H"],["^:I","^;H","^;I"],["^:I","^;H","^;I","^:K"]]]],"~$debounce-discreet",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",279,"^8",10,"^9",279,"^:",27,"^10",["^11",["^:H",["^11",[["^1J","^1K"],["^1J","^2L","^1K"]]]]],"^;=",["^ ","^:O",false,"^;>",3,"^:R",3,"^:L",[["^1J","^1K"],["^1J","^2L","^1K"]],"^10",["^11",[["^1J","^1K"],["^1J","^2L","^1K"]]],"^:N",["^11",[null,null]]]],"^14","^57","^6","hyperfiddle/electric.cljc","^:",27,"^;=",["^ ","^:O",false,"^;>",3,"^:R",3,"^:L",[["^1J","^1K"],["^1J","^2L","^1K"]],"^10",["^11",[["^1J","^1K"],["^1J","^2L","^1K"]]],"^:N",["^11",[null,null]]],"^:L",[["^1J","^1K"],["^1J","^2L","^1K"]],"^:M",null,"^;>",3,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^;?",[["^ ","^;>",2,"^:O",false,"^;3","^;@"],["^ ","^;>",3,"^:O",false,"^;3","^:Q"]],"^7",279,"^9",279,"^:R",3,"^:S",true,"^10",["^11",[["^1J","^1K"],["^1J","^2L","^1K"]]]],"~$->Object",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",444,"^8",10,"^9",444,"^:",18,"^10",["^11",["^:H",["^11",[[]]]]]],"^14","^5R","^6","hyperfiddle/electric.cljc","^:",18,"^:L",["^11",[[]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",444,"^:P","~$js","^9",444,"^:R",0,"^:S",true,"^10",["^11",["^:H",["^11",[[]]]]]],"^;<",["^ ","^14","^56","^6","hyperfiddle/electric.cljc","^7",462,"^8",1,"^9",462,"^:",13,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",462,"^8",6,"^9",462,"^:",13],"^;3","^4>"],"~$*http-request*",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",430,"^8",16,"^9",430,"^:",30,"~:dynamic",true],"^14","^4T","^6","hyperfiddle/electric.cljc","^:",30,"^8",1,"^;N",true,"^7",430,"^9",430,"^;3","^;@","^13","Bound to the HTTP request of the page in which the current Electric program is running."],"~$-get-system-time-ms",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",176,"^8",10,"^9",176,"^:",29,"^10",["^11",["^:H",["^11",[["~$&",["~$_"]]]]]],"^;=",["^ ","^:O",true,"^;>",0,"^:R",0,"^:L",[["^11",[["~$_"]]]],"^10",["^11",[["~$&",["~$_"]]]],"^:N",["^11",[null]]]],"^14","^5=","^6","hyperfiddle/electric.cljc","^:",29,"^;=",["^ ","^:O",true,"^;>",0,"^:R",0,"^:L",[["^11",[["~$_"]]]],"^10",["^11",[["~$&",["~$_"]]]],"^:N",["^11",[null]]],"^:L",[["^11",[["~$_"]]]],"^:M",null,"^;>",0,"^:N",["^11",[null]],"^8",1,"^:O",true,"^;?",[["^ ","^;>",0,"^:O",true,"^;3","^;L"]],"^7",176,"^:P","^;@","^9",176,"^:R",0,"^:S",true,"^10",["^11",[["~$&",["~$_"]]]]],"~$system-time-secs",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",209,"^8",27,"^9",209,"^:",43,"^13","seconds since 1970 Jan 1","^:V",["^11",["~$/","~$system-time-ms",1000.0]]],"^14","^5E","^6","hyperfiddle/electric.cljc","^:",43,"^8",1,"^:V",["^11",["~$/","^;Q",1000.0]],"^7",209,"^9",209,"^13","seconds since 1970 Jan 1"],"~$<clock",["^ ","~:no-doc",true,"^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",151,"^8",15,"^9",151,"^:",21,"^;S",true],"^14","^5H","^6","hyperfiddle/electric.cljc","^:",21,"^:L",["^11",[["~$n","~$t"]]],"^:M",null,"^:N",["^11",[]],"^8",1,"^:O",false,"^7",151,"^:P","^3[","^9",151,"^:R",2,"^:S",true,"^10",null,"^13","lazy & efficient logical clock that schedules no work unless sampled"],"~$failure?",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",87,"^8",10,"^9",87,"^:",18,"^10",["^11",["^:H",["^11",[["~$x"]]]]]],"^14","^4<","^6","hyperfiddle/electric.cljc","^:",18,"^:L",["^11",[["~$x"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",87,"^:P","~$boolean","^9",87,"^:R",1,"^:S",true,"^10",["^11",["^:H",["^11",[["~$x"]]]]]],"~$-check-fn-arity!",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",211,"^8",10,"^9",211,"^:",26,"^10",["^11",["^:H",["^11",[["~$name","~$expected","~$actual"]]]]]],"^14","^5?","^6","hyperfiddle/electric.cljc","^:",26,"^:L",["^11",[["^;W","^;X","^;Y"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",211,"^:P","~$clj-nil","^9",211,"^:R",3,"^:S",true,"^10",["^11",["^:H",["^11",[["^;W","^;X","^;Y"]]]]]],"^;Q",["^ ","^5",["^ ","^6","hyperfiddle/electric.cljc","^7",204,"^8",27,"^9",204,"^:",41,"^13","ms since 1970 Jan 1","^:V",["^11",["~$if",["^11",["~$=","visible","^;A"]],["^11",["^;7",["^11",["~$m/sample","^;O","^;R"]]]],["^11",["~$throw",["^11",["~$Pending."]]]]]]],"^14","^49","^6","hyperfiddle/electric.cljc","^:",41,"^8",1,"^:V",["^11",["^;[",["^11",["~$=","visible","^;A"]],["^11",["^;7",["^11",["^<0","^;O","^;R"]]]],["^11",["^<1",["^11",["^<2"]]]]]],"^7",204,"^9",204,"^13","ms since 1970 Jan 1"],"~$with",["^ ","^14","^5M","^6","hyperfiddle/electric.cljc","^7",63,"^8",1,"^9",63,"^:",10,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",63,"^8",6,"^9",63,"^:",10]],"~$Clock",["^ ","~:num-fields",3,"~:protocols",["^V",["~$cljs.core/IFn","~$cljs.core/IDeref"]],"^14","^3[","^6","hyperfiddle/electric.cljc","^:",18,"~:type",true,"^8",13,"^7",133,"~:record",false,"^9",133,"^;3","^:Q","~:skip-protocol-flag",["^V",["^<7","^<8"]]],"~$watchable?",["^ ","^;S",true,"^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",263,"^8",19,"^9",263,"^:",29,"^;S",true,"^10",["^11",["^:H",["^11",[["~$x"]]]]]],"^14","^3X","^6","hyperfiddle/electric.cljc","^:",29,"^:L",["^11",[["~$x"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",263,"^:P","^;U","^9",263,"^:R",1,"^:S",true,"^10",["^11",["^:H",["^11",[["~$x"]]]]]],"~$->Clock",["^ ","^:G",null,"^5",["^ ","^<6",["^V",["^<7","^<8"]],"^6","hyperfiddle/electric.cljc","^:",18,"^8",13,"~:factory","~:positional","^7",133,"^9",133,"^10",["^11",["^:H",["^11",[["~$raf","~$callback","~$terminator"]]]]],"^<;",["^V",["^<7","^<8"]],"^13","Positional factory function for hyperfiddle.electric/Clock."],"^<6",["^V",["^<7","^<8"]],"^14","^5L","^6","hyperfiddle/electric.cljc","^:",18,"^:L",["^11",[["^<@","^<A","^<B"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",4,"^:O",false,"^<>","^<?","^7",133,"^:P","^3[","^9",133,"^:R",3,"^:S",true,"^10",["^11",["^:H",["^11",[["^<@","^<A","^<B"]]]]],"^<;",["^V",["^<7","^<8"]],"^13","Positional factory function for hyperfiddle.electric/Clock."],"~$checked-watch",["^ ","^;S",true,"^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",267,"^8",19,"^9",267,"^:",32,"^;S",true,"^10",["^11",["^:H",["^11",[["^2="]]]]]],"^14","^5K","^6","hyperfiddle/electric.cljc","^:",32,"^:L",["^11",[["^2="]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",267,"^:P","^:Q","^9",267,"^:R",1,"^:S",true,"^10",["^11",["^:H",["^11",[["^2="]]]]]],"~$throttle",["^ ","^:G",null,"^5",["^ ","^6","hyperfiddle/electric.cljc","^7",292,"^8",10,"^9",292,"^:",18,"^10",["^11",["^:H",["^11",[["~$dur","~$>in"]]]]]],"^14","^5J","^6","hyperfiddle/electric.cljc","^:",18,"^:L",["^11",[["^<E","^<F"]]],"^:M",null,"^:N",["^11",[null,null]],"^8",1,"^:O",false,"^7",292,"^:P","^:Q","^9",292,"^:R",2,"^:S",true,"^10",["^11",["^:H",["^11",[["^<E","^<F"]]]]]]],"^3>",["^ ","^H","^H","^E","^E","^2[","^2[","^S","^S","^D","^E","~$m","^2[","^37","^37","^39","^E"],"~:cljs.analyzer/constants",["^ ","^3<",["^V",["^<A","~:else","^14","~:hyperfiddle.electric/unnamed-efn","~$number","~:hyperfiddle.electric/tick","^;3","~:mutable","^<B","^<@"]],"~:order",["^;3","^<K","^<@","^<L","^<J","^<A","^<B","^<I","^14","^<H"]],"^3H",["^ ","^3=",["^V",[]],"^3>",["^V",[]]],"^3I",["^ "],"^3J",["^35","^E","^E","^37","^S","^36","^3:","^30","^38","^2[","^34","^33","^2Z","^2R","^2T","^2V","^2X"]],"^16","^H","~:ns-specs",["^ "],"~:ns-spec-vars",["^V",[]],"~:compiler-options",["^5U",[["^<P","~:static-fns"],true,["^<P","~:shadow-tweaks"],null,["^<P","~:source-map-inline"],null,["^<P","~:elide-asserts"],false,["^<P","~:optimize-constants"],null,["^<P","^3O"],null,["^<P","~:external-config"],null,["^<P","~:tooling-config"],null,["^<P","~:emit-constants"],null,["^<P","~:load-tests"],null,["^<P","~:form-size-threshold"],null,["^<P","~:global-goog-object&array"],null,["^<P","~:data-readers"],null,["^<P","~:infer-externs"],"~:auto",["^<P","^3Q"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^<P","~:fn-invoke-direct"],null,["^<P","~:source-map"],"/dev/null"]]]