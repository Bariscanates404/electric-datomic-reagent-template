["^ ","~:output",["^ ","~:js","goog.provide('hyperfiddle.electric.debug');\nhyperfiddle.electric.debug.__GT_id = (function hyperfiddle$electric$debug$__GT_id(){\nreturn cljs.core.random_uuid();\n});\nif((typeof hyperfiddle !== 'undefined') && (typeof hyperfiddle.electric !== 'undefined') && (typeof hyperfiddle.electric.debug !== 'undefined') && (typeof hyperfiddle.electric.debug.PEER_ID !== 'undefined')){\n} else {\n/**\n * A random unique ID generated for each Electric runtime instance (browser tab, jvm). Used to identify origin of a transfered value.\n */\nhyperfiddle.electric.debug.PEER_ID = hyperfiddle.electric.debug.__GT_id();\n}\nhyperfiddle.electric.debug.ex_info_STAR_ = (function hyperfiddle$electric$debug$ex_info_STAR_(var_args){\nvar G__29651 = arguments.length;\nswitch (G__29651) {\ncase 2:\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$2 = (function (message,data){\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$3(message,data,null);\n}));\n\n(hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$3 = (function (message,data,cause){\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$4(message,data,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.debug.__GT_id()),cause);\n}));\n\n(hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$4 = (function (message,data,id,cause){\nreturn (new hyperfiddle.electric.FailureInfo(message,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(data,new cljs.core.Keyword(\"hyperfiddle.electric\",\"type\",\"hyperfiddle.electric/type\",1565804079),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033)),id,cause));\n}));\n\n(hyperfiddle.electric.debug.ex_info_STAR_.cljs$lang$maxFixedArity = 4);\n\nhyperfiddle.electric.debug.ex_id = (function hyperfiddle$electric$debug$ex_id(ex){\nreturn ex.id;\n});\nhyperfiddle.electric.debug.add_stack_frame = (function hyperfiddle$electric$debug$add_stack_frame(frame,ex){\nvar frame__$1 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(frame,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"origin\",\"hyperfiddle.electric.debug/origin\",-1379474448),hyperfiddle.electric.debug.PEER_ID);\nif((ex instanceof hyperfiddle.electric.FailureInfo)){\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$4(cljs.core.ex_message(ex),cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.ex_data(ex),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033),cljs.core.conj,frame__$1),hyperfiddle.electric.debug.ex_id(ex),(function (){var or__5045__auto__ = cljs.core.ex_cause(ex);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ex;\n}\n})());\n} else {\nreturn hyperfiddle.electric.debug.ex_info_STAR_.cljs$core$IFn$_invoke$arity$3(cljs.core.ex_message(ex),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [frame__$1], null)], null),ex);\n}\n});\nhyperfiddle.electric.debug.error = (function hyperfiddle$electric$debug$error(debug_info,failure){\nvar err = failure.error;\nif((((err instanceof hyperfiddle.electric.Pending)) || ((err instanceof missionary.Cancelled)))){\nreturn failure;\n} else {\nreturn (new hyperfiddle.electric.Failure(hyperfiddle.electric.debug.add_stack_frame(debug_info,err)));\n}\n});\nhyperfiddle.electric.debug.render_arg = (function hyperfiddle$electric$debug$render_arg(arg){\nif(typeof arg === 'string'){\nreturn arg;\n} else {\nif(cljs.core.ident_QMARK_(arg)){\nreturn arg;\n} else {\nif((((arg instanceof hyperfiddle.electric.Failure)) || ((arg instanceof Error)))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(\"<exception>\");\n} else {\nvar _STAR_print_level_STAR__orig_val__29713 = cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_length_STAR__orig_val__29714 = cljs.core._STAR_print_length_STAR_;\nvar _STAR_print_level_STAR__temp_val__29715 = (1);\nvar _STAR_print_length_STAR__temp_val__29716 = (4);\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__29715);\n\n(cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__temp_val__29716);\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arg], 0));\n}finally {(cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__orig_val__29714);\n\n(cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__29713);\n}\n}\n}\n}\n});\nhyperfiddle.electric.debug.serializable_frame = (function hyperfiddle$electric$debug$serializable_frame(frame){\nif(cljs.core.truth_(new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"serializable\",\"hyperfiddle.electric.debug/serializable\",-2113729763).cljs$core$IFn$_invoke$arity$1(frame))){\nreturn frame;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(frame,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"args\",\"hyperfiddle.electric.debug/args\",-1101355176),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv,hyperfiddle.electric.debug.render_arg)),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"serializable\",\"hyperfiddle.electric.debug/serializable\",-2113729763),true);\n}\n});\nhyperfiddle.electric.debug.serializable = (function hyperfiddle$electric$debug$serializable(map){\nif(cljs.core.contains_QMARK_(map,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(map,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.mapv,hyperfiddle.electric.debug.serializable_frame));\n} else {\nreturn map;\n}\n});\nhyperfiddle.electric.debug.normalize_frame = (function hyperfiddle$electric$debug$normalize_frame(frame){\nvar meta = new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"meta\",\"hyperfiddle.electric.debug/meta\",-368038788).cljs$core$IFn$_invoke$arity$1(frame);\nvar dbg_in_meta = contrib.data.select_ns(new cljs.core.Keyword(null,\"hyperfiddle.electric.debug\",\"hyperfiddle.electric.debug\",-987645572),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"meta\",\"hyperfiddle.electric.debug/meta\",-368038788).cljs$core$IFn$_invoke$arity$1(frame));\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([frame,dbg_in_meta,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"meta\",\"hyperfiddle.electric.debug/meta\",-368038788),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(meta,dbg_in_meta)], null)], 0));\n});\nhyperfiddle.electric.debug.stack_trace = (function hyperfiddle$electric$debug$stack_trace(err){\nvar G__29734 = new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(err));\nvar G__29734__$1 = (((G__29734 == null))?null:cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (frame){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"name\",\"hyperfiddle.electric.debug/name\",-35961215).cljs$core$IFn$_invoke$arity$1(frame));\n}),G__29734));\nvar G__29734__$2 = (((G__29734__$1 == null))?null:cljs.core.filter.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),G__29734__$1));\nvar G__29734__$3 = (((G__29734__$2 == null))?null:cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,frame){\nif(typeof frame === 'string'){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,frame);\n} else {\nvar map__29739 = hyperfiddle.electric.debug.normalize_frame(frame);\nvar map__29739__$1 = cljs.core.__destructure_map(map__29739);\nvar origin = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"origin\",\"hyperfiddle.electric.debug/origin\",-1379474448));\nvar type = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812));\nvar name = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"name\",\"hyperfiddle.electric.debug/name\",-35961215));\nvar params = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"params\",\"hyperfiddle.electric.debug/params\",-1701534765));\nvar args = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"args\",\"hyperfiddle.electric.debug/args\",-1101355176));\nvar macro = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"macro\",\"hyperfiddle.electric.debug/macro\",-46765604));\nvar scope = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"scope\",\"hyperfiddle.electric.debug/scope\",-708382234));\nvar meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29739__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"meta\",\"hyperfiddle.electric.debug/meta\",-368038788));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_((function (){var and__5043__auto__ = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.PEER_ID,origin);\nif(and__5043__auto__){\nvar and__5043__auto____$1 = cljs.core.not((function (){var fexpr__29745 = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"transfer\",\"transfer\",327423400),null,new cljs.core.Keyword(null,\"toggle\",\"toggle\",1291842030),null], null), null);\nreturn (fexpr__29745.cljs$core$IFn$_invoke$arity$1 ? fexpr__29745.cljs$core$IFn$_invoke$arity$1(type) : fexpr__29745.call(null,type));\n})());\nif(and__5043__auto____$1){\nreturn \"remote\";\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())?null:null),(function (){var G__29746 = scope;\nvar G__29746__$1 = (((G__29746 instanceof cljs.core.Keyword))?G__29746.fqn:null);\nswitch (G__29746__$1) {\ncase \"lexical\":\nreturn \"lexically bound\";\n\nbreak;\ncase \"dynamic\":\nreturn \"dynamically bound\";\n\nbreak;\ndefault:\nreturn null;\n\n}\n})()], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2((function (){var G__29749 = type;\nvar G__29749__$1 = (((G__29749 instanceof cljs.core.Keyword))?G__29749.fqn:null);\nswitch (G__29749__$1) {\ncase \"apply\":\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,\"(\",null,(1),null)),(new cljs.core.List(null,(function (){var G__29755 = name;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"fail\",\"hyperfiddle.electric.impl.runtime/fail\",-1672627762,null),G__29755)){\nreturn new cljs.core.Symbol(null,\"throw\",\"throw\",595905694,null);\n} else {\nreturn name;\n\n}\n})(),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.render_arg,args),(new cljs.core.List(null,\")\",null,(1),null))], 0)))));\n\nbreak;\ncase \"eval\":\nvar map__29758 = frame;\nvar map__29758__$1 = cljs.core.__destructure_map(map__29758);\nvar action = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29758__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"action\",\"hyperfiddle.electric.debug/action\",1557442480));\nvar target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29758__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"target\",\"hyperfiddle.electric.debug/target\",2130291153));\nvar method = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29758__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"method\",\"hyperfiddle.electric.debug/method\",-1822364192));\nvar args__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__29758__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"args\",\"hyperfiddle.electric.debug/args\",-1101355176));\nvar G__29763 = action;\nvar G__29763__$1 = (((G__29763 instanceof cljs.core.Keyword))?G__29763.fqn:null);\nswitch (G__29763__$1) {\ncase \"field-access\":\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"(\",[\".-\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method)].join(''),target,\")\"], null);\n\nbreak;\ncase \"static-call\":\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,\"(\",null,(1),null)),(new cljs.core.List(null,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(target),\"/\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method)].join(''),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.render_arg,cljs.core.rest(args__$1)),(new cljs.core.List(null,\")\",null,(1),null))], 0)))));\n\nbreak;\ncase \"call\":\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,\"(\",null,(1),null)),(new cljs.core.List(null,[\".\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(method)].join(''),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,target,null,(1),null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.render_arg,cljs.core.rest(args__$1)),(new cljs.core.List(null,\")\",null,(1),null))], 0)))));\n\nbreak;\ncase \"fn-call\":\nif((!((name == null)))){\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,\"(\",null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(params)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.render_arg,args__$1),(new cljs.core.List(null,\")\",null,(1),null))], 0)))));\n} else {\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,\"(\",null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1(params)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.debug.render_arg,args__$1),(new cljs.core.List(null,\")\",null,(1),null))], 0)))));\n}\n\nbreak;\ndefault:\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"<unknown interop>\",frame], null);\n\n}\n\nbreak;\ncase \"reactive-fn\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reactive\",(((!((name == null))))?cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,args,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0)))):cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"fn\",\"fn\",465265323,null),null,(1),null)),(new cljs.core.List(null,args,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0)))))], null);\n\nbreak;\ncase \"reactive-defn\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"reactive\",cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"defn\",\"defn\",-126010802,null),null,(1),null)),(new cljs.core.List(null,name,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,args,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0))))], null);\n\nbreak;\ncase \"try\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"(try ...)\"], null);\n\nbreak;\ncase \"catch\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"catch\",\"catch\",-1616370245,null),null,(1),null)),args,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0))))], null);\n\nbreak;\ncase \"finally\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"(finally ...)\"], null);\n\nbreak;\ncase \"case-clause\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"case\",\"case\",-1510733573,null),null,(1),null)),args,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,new cljs.core.Symbol(null,\"...\",\"...\",-1926939749,null),null,(1),null))], 0))))], null);\n\nbreak;\ncase \"case-default\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"case default branch\"], null);\n\nbreak;\ncase \"transfer\":\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"transfer to\",cljs.core.name(name)], null);\n\nbreak;\ncase \"toggle\":\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\"transfer\"], null);\n\nbreak;\ndefault:\nreturn cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,\"<unknow frame>\",null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"op\",\"hyperfiddle.electric.impl.ir/op\",1320467425).cljs$core$IFn$_invoke$arity$1(frame),null,(1),null))))));\n\n}\n})(),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(macro)?[\"from macro \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(macro)].join(''):null),(function (){var G__29789 = new cljs.core.Keyword(null,\"file\",\"file\",-1269645878).cljs$core$IFn$_invoke$arity$1(meta);\nif((G__29789 == null)){\nreturn null;\n} else {\nreturn [\"in \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__29789)].join('');\n}\n})(),(function (){var G__29791 = new cljs.core.Keyword(null,\"line\",\"line\",212345235).cljs$core$IFn$_invoke$arity$1(meta);\nif((G__29791 == null)){\nreturn null;\n} else {\nreturn [\"line \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__29791)].join('');\n}\n})()], null))));\n}\n}),cljs.core.PersistentVector.EMPTY,G__29734__$2));\nvar G__29734__$4 = (((G__29734__$3 == null))?null:cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (frame){\nif(typeof frame === 'string'){\nreturn frame;\n} else {\nreturn [\" in \",clojure.string.join.cljs$core$IFn$_invoke$arity$2(\" \",cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,frame))].join('');\n}\n}),G__29734__$3));\nif((G__29734__$4 == null)){\nreturn null;\n} else {\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"\\n\",G__29734__$4);\n}\n});\nhyperfiddle.electric.debug.unwrap = (function hyperfiddle$electric$debug$unwrap(exception){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"trace\",\"hyperfiddle.electric.debug/trace\",1332052033),new cljs.core.Keyword(\"hyperfiddle.electric\",\"type\",\"hyperfiddle.electric/type\",1565804079).cljs$core$IFn$_invoke$arity$1(cljs.core.ex_data(exception)))){\nreturn cljs.core.ex_cause(exception);\n} else {\nreturn exception;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","hyperfiddle/electric/debug.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",31],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.math","~$cljs.math","~$clojure.core","~$cljs.core"],"~:use-macros",["^ ","~$tests","~$hyperfiddle.rcf"],"~:excludes",["~#set",[]],"~:name","~$hyperfiddle.electric.debug","~:reader-aliases",["^ ","~$ir","~$hyperfiddle.electric.impl.ir"],"~:op","~:ns","~:imports",["^ ","~$Failure","~$hyperfiddle.electric.Failure","~$Pending","~$hyperfiddle.electric.Pending","~$Cancelled","~$missionary.Cancelled","~$FailureInfo","~$hyperfiddle.electric.FailureInfo"],"~:requires",["^ ","^W","^X","^T","^T","~$data","~$contrib.data","^S","^T","^E","^E","^U","^V","~$goog","^12","^H","^H","~$rcf","^H","^11","^11","^Z","^Z","^Y","^Z","^X","^X","~$str","~$clojure.string","^15","^15","^V","^V"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","^G","^H"],"~:require-macros",["^ ","^E","^E","^10","^11","^H","^H","^13","^H","^11","^11"],"~:form",["~#list",["~$ns","^L",["^1;",["^17",["^15","~:as","^14"],["^11","^1=","^10"],["^O","~:as-alias","^N"],["^H","^1=","^13","~:refer",["^G"]]]],["^1;",["~:import",["^1;",["~$hyperfiddle.electric","^S","^U"]],["^1;",["~$missionary","^W"]],["^1;",["^1A","^Y"]]]]]],"~:flags",["^ ","^17",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^12","^E","^15","^11","^H","^T","^V","^X","^Z"]],"^Q","^L","~:resource-id",["~:shadow.build.classpath/resource","hyperfiddle/electric/debug.cljc"],"~:compiled-at",1693922839791,"^M",["^ ","^W","^X","^N","^O","^T","^T","^10","^11","^S","^T","^E","^E","^U","^V","^12","^12","^H","^H","^13","^H","^11","^11","^Z","^Z","^Y","^Z","^X","^X","^14","^15","^15","^15","^V","^V"],"~:resource-name","hyperfiddle/electric/debug.cljc","~:warnings",[],"~:source","(ns hyperfiddle.electric.debug\n  (:require #_[hyperfiddle.electric.impl.runtime :as-alias r]\n            [clojure.string :as str]\n            [contrib.data :as data]\n            [hyperfiddle.electric.impl.ir :as-alias ir]\n            [hyperfiddle.rcf :as rcf :refer [tests]])\n  (:import (hyperfiddle.electric Failure Pending)\n           (missionary Cancelled)\n           #?(:clj (clojure.lang ExceptionInfo))\n           (hyperfiddle.electric FailureInfo)))\n\n(defn ->id []\n  #?(:clj  (java.util.UUID/randomUUID)\n     :cljs (random-uuid)))\n\n(defonce ^{:doc \"A random unique ID generated for each Electric runtime instance (browser tab, jvm). Used to identify origin of a transfered value.\"}\n  PEER-ID\n  ;; UUID v4 collision probability assumed insignificant for this use case\n  (->id))\n\n(defn ex-info*\n  ([message data] (ex-info* message data nil))\n  ([message data cause] (ex-info* message data (str (->id)) cause))\n  ([message data id cause] (FailureInfo. message (assoc data :hyperfiddle.electric/type ::trace) id cause)))\n\n(tests \"2 traces with equal values are =\"\n  (let [cause #?(:clj (Throwable.) :cljs (js/Error.))]\n    (ex-info* \"\" {} cause) := (ex-info* \"\" {} cause)\n    nil))\n\n(defn ex-id [ex] (.-id ^FailureInfo ex))\n\n(defn add-stack-frame [frame ex]\n  (let [frame (assoc frame ::origin PEER-ID)]\n   (if (instance? FailureInfo ex)\n    (ex-info* (ex-message ex) (update (ex-data ex) ::trace conj frame) (ex-id ex) (or (ex-cause ex) ex))\n    (ex-info* (ex-message ex) {::trace [frame]} ex))))\n\n(defn error [debug-info ^Failure failure]\n  (let [err (.-error failure)]\n    (if (or (instance? Pending err) (instance? Cancelled err))\n      failure\n      (Failure. (add-stack-frame debug-info err)))))\n\n(tests \"rewrapping keeps same ID\"\n  (def ex (ex-info* \"x\" {}))\n  (ex-id ex) := (ex-id (add-stack-frame {} ex)))\n\n(defn render-arg [arg]\n  (cond\n    (string? arg) arg\n    (ident? arg)  arg\n\n    (or (instance? hyperfiddle.electric.Failure arg)\n      #?(:clj (instance? Throwable arg)\n         :cljs (instance? js/Error arg)))\n    (symbol \"<exception>\")\n\n    :else\n    (binding [*print-level*  1\n              *print-length* 4]\n      (pr-str arg))))\n\n(defn serializable-frame [frame]\n  (if (::serializable frame)\n    frame\n    (-> (update frame ::args (partial mapv render-arg))\n        (assoc ::serializable true))))\n\n(defn serializable [map]\n  (if (contains? map ::trace)\n    (update map ::trace (partial mapv serializable-frame))\n    map))\n\n(defn normalize-frame [frame]\n  (let [meta        (::meta frame)\n        dbg-in-meta (data/select-ns :hyperfiddle.electric.debug (::meta frame))]\n    (merge frame dbg-in-meta {::meta (dissoc meta dbg-in-meta)})))\n\n(defn stack-trace [err]\n  (some->> (::trace (ex-data err))\n    (remove (fn [frame] (= {} (::name frame)))) ; (do a b) => ({} a b)\n    (filter ::type)\n    (reduce (fn [r frame]\n              (if (string? frame)\n                (conj r frame)\n                (let [{::keys [origin type name params args macro scope meta]} (normalize-frame frame)]\n                  (conj r\n                    (into [(when (and (not= PEER-ID origin)\n                                   (not (#{:transfer :toggle} type))\n                                   \"remote\"))\n                           (case scope\n                             :lexical \"lexically bound\"\n                             :dynamic \"dynamically bound\"\n                             nil)]\n                      (into\n                        (case type\n                          :apply         `[\"(\" ~(case name\n                                                  hyperfiddle.electric.impl.runtime/fail 'throw\n                                                  name)\n                                           ~@(map render-arg args) \")\"]\n                          :eval (let [{::keys [action target method args]} frame]\n                                  (case action\n                                    :field-access [\"(\" (str \".-\" method) target \")\"]\n                                    :static-call  `[\"(\" ~(str target \"/\" method) ~@(map render-arg (rest args)) \")\"]\n                                    :call         `[\"(\" ~(str \".\" method) ~target ~@(map render-arg (rest args))\")\"]\n                                    :fn-call      (if (some? name)\n                                                    `[\"(\" (clojure.core/fn ~name [~@params] ~'...) ~@(map render-arg args) \")\"]\n                                                    `[\"(\" (clojure.core/fn [~@params] ~'...) ~@(map render-arg args) \")\"])\n\n                                    [\"<unknown interop>\" frame]))\n                          :reactive-fn   [\"reactive\" (if (some? name)\n                                                       `(~'fn ~name ~args ~'...)\n                                                       `(~'fn ~args ~'...))]\n                          :reactive-defn [\"reactive\" `(~'defn ~name ~args ~'...)]\n                          :try           [\"(try ...)\" ]\n                          :catch         [`(~'catch ~@args ~'...)]\n                          :finally       [\"(finally ...)\"]\n                          :case-clause   [`(~'case ~@args ~'...)]\n                          :case-default  [\"case default branch\"]\n                          :transfer      [\"transfer to\" (clojure.core/name name)]\n                          :toggle        [\"transfer\"]\n                          `[\"<unknow frame>\" ~(::ir/op frame)])\n                        [(when macro (str \"from macro \" macro))\n                         (some->> (:file meta) (str \"in \"))\n                         (some->> (:line meta) (str \"line \"))]))))))\n      [])\n    (mapv (fn [frame] (if (string? frame) frame (str \" in \" (str/join \" \" (remove nil? frame))))))\n    (str/join \"\\n\")))\n\n(defn unwrap [exception]\n  (if (= ::trace (:hyperfiddle.electric/type (ex-data exception)))\n    (ex-cause exception)\n    exception))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["hyperfiddle.electric.debug/->id","cljs.core/random-uuid","js/hyperfiddle","js/hyperfiddle.electric","js/hyperfiddle.electric.debug","js/hyperfiddle.electric.debug.PEER-ID","hyperfiddle.electric.debug/PEER-ID","var_args","G__29651","hyperfiddle.electric.debug/ex-info*","js/Error","message","data","hyperfiddle.electric.debug.ex_info_STAR_","cause","id","js/hyperfiddle.electric.FailureInfo","cljs.core.assoc","hyperfiddle.electric.debug/ex-id","ex","hyperfiddle.electric.debug/add-stack-frame","frame","cljs.core/ex-message","cljs.core.update","cljs.core/ex-data","cljs.core/conj","or__5045__auto__","cljs.core/ex-cause","hyperfiddle.electric.debug/error","debug-info","failure","err","js/hyperfiddle.electric.Pending","js/missionary.Cancelled","js/hyperfiddle.electric.Failure","hyperfiddle.electric.debug/render-arg","arg","cljs.core/ident?","cljs.core.symbol","*print-level*-orig-val__29713","*print-length*-orig-val__29714","*print-level*-temp-val__29715","*print-length*-temp-val__29716","cljs.core/*print-level*","cljs.core/*print-length*","cljs.core.pr_str","hyperfiddle.electric.debug/serializable-frame","cljs.core.partial","cljs.core/mapv","hyperfiddle.electric.debug/serializable","map","cljs.core/contains?","hyperfiddle.electric.debug/normalize-frame","meta","dbg-in-meta","contrib.data/select-ns","cljs.core.merge","cljs.core.dissoc","hyperfiddle.electric.debug/stack-trace","G__29734","cljs.core.remove","cljs.core._EQ_","cljs.core.filter","cljs.core.reduce","r","cljs.core.conj","map__29739","cljs.core/--destructure-map","cljs.core.get","origin","type","name","params","args","macro","scope","cljs.core.into","and__5043__auto__","cljs.core.not_EQ_","cljs.core/not","fexpr__29745","G__29746","cljs.core/Keyword","G__29749","cljs.core/vec","cljs.core.sequence","cljs.core/seq","cljs.core.concat","cljs.core/List","G__29755","cljs.core.map","map__29758","action","target","method","G__29763","cljs.core/rest","cljs.core/name","G__29789","G__29791","cljs.core.mapv","clojure.string.join","cljs.core/nil?","hyperfiddle.electric.debug/unwrap","exception"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$clojure.string/join","~$hyperfiddle.electric.debug/ex-info*","~$cljs.core/rest","~$cljs.core/ex-message","~$cljs.core/*print-level*","~$js/hyperfiddle.electric.FailureInfo","~$hyperfiddle.electric.debug/serializable","~$js/hyperfiddle.electric","~$cljs.core/filter","~$cljs.core/=","~$hyperfiddle.electric.debug/normalize-frame","~$cljs.core/partial","~$contrib.data/select-ns","~$js/hyperfiddle.electric.Pending","~$cljs.core/reduce","~$cljs.core/seq","~$hyperfiddle.electric.debug/error","~$hyperfiddle.electric.debug/serializable-frame","~$cljs.core/Keyword","~$js/hyperfiddle","~$cljs.core/mapv","~$cljs.core/not=","~$cljs.core/dissoc","~$hyperfiddle.electric.debug/unwrap","~$cljs.core/concat","~$cljs.core/pr-str","~$js/hyperfiddle.electric.debug.PEER-ID","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/conj","~$cljs.core/update","~$cljs.core/map","~$js/missionary.Cancelled","~$cljs.core/List","~$hyperfiddle.electric.debug/add-stack-frame","~$cljs.core/*print-length*","~$cljs.core/get","~$cljs.core/remove","~$js/hyperfiddle.electric.Failure","~$cljs.core/symbol","~$hyperfiddle.electric.debug/ex-id","~$hyperfiddle.electric.debug/PEER-ID","~$cljs.core/nil?","~$cljs.core/ex-cause","~$cljs.core/vec","~$hyperfiddle.electric.debug/render-arg","~$cljs.core/sequence","~$hyperfiddle.electric.debug/->id","~$cljs.core/not","~$cljs.core/assoc","~$cljs.core/ex-data","~$js/hyperfiddle.electric.debug","~$cljs.core/name","~$cljs.core/merge","~$js/Error","~$cljs.core/random-uuid","~$cljs.core/ident?","~$hyperfiddle.electric.debug/stack-trace"]]],"~:cache-keys",["~#cmap",[["^1G","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^12","~$goog.dom.HtmlElement"]]],["^1G","missionary/Cancelled.js"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1G","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3@"]]],["^1G","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A"]]],["^1G","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","hyperfiddle/rcf.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","~$cljs.test","^15","~$hyperfiddle.rcf.reporters","~$hyperfiddle.rcf.queue","~$hyperfiddle.rcf.time","~$hyperfiddle.rcf.unify"]]],["^1G","hyperfiddle/electric/Pending.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^15","~$goog.string","~$goog.string.StringBuffer"]]],["^1G","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A"]]],"~:SHADOW-TIMESTAMP",[1677656185000,1677656185000,1674331854000],["^1G","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","~$goog.reflect"]]],["^1G","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","~$goog.fs.blob","^3B","~$goog.html.SafeScript","~$goog.html.trustedtypes","^3D","^3E","^3F","^3G"]]],["^1G","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3F","~$goog.html.SafeUrl","^3G","^3A","^3@"]]],["^1G","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^3R","~$goog.html.SafeStyle","^3T","^3C","~$goog.html.uncheckedconversions","^3F","^3@"]]],["^1G","contrib/data.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^C","~$clojure.datafy","^H"]]],["^1G","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E"]]],["^1G","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3F","^3D","^3E","^3R","^3X","~$goog.html.SafeStyleSheet","^3T","~$goog.dom.TagName","^3C","^3G","^3A","~$goog.labs.userAgent.browser","^3=","^3>","^3@","~$goog.dom.tags","^3S"]]],["^1G","cljs/math.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E"]]],["^1G","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3>"]]],["^1G","hyperfiddle/rcf/time.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E"]]],["^1G","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1G","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3=","^3A","~$goog.collections.maps","^3M","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1G","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","clojure/core/protocols.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E"]]],["^1G","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",[]]],["^1G","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3=","^3>"]]],["^1G","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^3M","^3N"]]],["^1G","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.dom.safe","^3Y","^3F","^3@"]]],["^1G","hyperfiddle/rcf/queue.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^3K"]]],["^1G","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.labs.userAgent","^3@"]]],["^1G","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","^3W","^3R","^3X","^3[","^3T","^3C","^3F","^3@","^3D"]]],["^1G","hyperfiddle/rcf/unify.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","~$clojure.walk","~$clojure.set"]]],["^1G","hyperfiddle/electric/debug.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^15","^11","^H","^T","^V","^X","^Z"]]],["^1G","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","~$goog.math.Long","~$goog.math.Integer","^3M","^3>","^3=","~$goog.Uri","^3N"]]],["^1G","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3F","^3G","^3S","^3A"]]],["^1G","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3F","^3X","^3G","^3>","^3A","^3@"]]],["^1G","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3P"]]],["^1G","hyperfiddle/electric/Failure.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]],["^1G","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E"]]],["^1G","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","^3M"]]],["^1G","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^3A","^3G"]]],["^1G","clojure/datafy.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","~$clojure.core.protocols"]]],["^1G","hyperfiddle/rcf/reporters.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^3H"]]],["^1G","cljs/test.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12","^E","^15","^?"]]],["^1G","hyperfiddle/electric/FailureInfo.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^38",["^ ","^39",null,"^3:",["^J",[]],"^3;",["^12"]]]]],"~:clj-info",["^ ","jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/template.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/api.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/impl.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/test.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/unify.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/time.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/test.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/analyzer.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/stacktrace.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/queue.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/data.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674331854000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",1,"^8",5,"^9",1,"^:",31],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K","^L","^M",["^ ","^N","^O"],"^R",["^ ","^S","^T","^U","^V","^W","^X","^Y","^Z"],"^[",["^ ","^W","^X","^T","^T","^10","^11","^S","^T","^E","^E","^U","^V","^12","^12","^H","^H","^13","^H","^11","^11","^Z","^Z","^Y","^Z","^X","^X","^14","^15","^15","^15","^V","^V"],"^16",["^J",["^17"]],"~:shadow/js-access-global",["^J",["Error"]],"^18",["^ ","^G","^H"],"~:defs",["^ ","~$unwrap",["^ ","~:protocol-inline",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",131,"^8",7,"^9",131,"^:",13,"~:arglists",["^1;",["~$quote",["^1;",[["~$exception"]]]]]],"^K","^2?","^6","hyperfiddle/electric/debug.cljc","^:",13,"~:method-params",["^1;",[["^5I"]]],"~:protocol-impl",null,"~:arglists-meta",["^1;",[null,null]],"^8",1,"~:variadic?",false,"^7",131,"~:ret-tag",["^J",[null,"~$any","~$clj-nil"]],"^9",131,"~:max-fixed-arity",1,"~:fn-var",true,"^5G",["^1;",["^5H",["^1;",[["^5I"]]]]]],"~$stack-trace",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",80,"^8",7,"^9",80,"^:",18,"^5G",["^1;",["^5H",["^1;",[["~$err"]]]]]],"^K","^35","^6","hyperfiddle/electric/debug.cljc","^:",18,"^5J",["^1;",[["^5T"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",80,"^5N",["^J",["~$string","^5P"]],"^9",80,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^5T"]]]]]],"~$ex-info*",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",21,"^8",7,"^9",21,"^:",15,"^5G",["^1;",["^5H",["^1;",[["~$message","^10"],["^5W","^10","~$cause"],["^5W","^10","~$id","^5X"]]]]],"~:top-fn",["^ ","^5M",false,"~:fixed-arity",4,"^5Q",4,"^5J",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]],"^5G",["^1;",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]]],"^5L",["^1;",[null,null,null]]]],"^K","^1U","^6","hyperfiddle/electric/debug.cljc","^:",15,"^5Z",["^ ","^5M",false,"^5[",4,"^5Q",4,"^5J",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]],"^5G",["^1;",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]]],"^5L",["^1;",[null,null,null]]],"^5J",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]],"^5K",null,"^5[",4,"^5L",["^1;",[null,null,null]],"^8",1,"^5M",false,"~:methods",[["^ ","^5[",2,"^5M",false,"~:tag","^5O"],["^ ","^5[",3,"^5M",false,"^61","^5O"],["^ ","^5[",4,"^5M",false,"^61","^1Y"]],"^7",21,"^9",21,"^5Q",4,"^5R",true,"^5G",["^1;",[["^5W","^10"],["^5W","^10","^5X"],["^5W","^10","^5Y","^5X"]]]],"~$add-stack-frame",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",33,"^8",7,"^9",33,"^:",22,"^5G",["^1;",["^5H",["^1;",[["~$frame","~$ex"]]]]]],"^K","^2J","^6","hyperfiddle/electric/debug.cljc","^:",22,"^5J",["^1;",[["^63","^64"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",33,"^5N",["^J",["^1Y","^5O"]],"^9",33,"^5Q",2,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^63","^64"]]]]]],"~$normalize-frame",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",75,"^8",7,"^9",75,"^:",22,"^5G",["^1;",["^5H",["^1;",[["^63"]]]]]],"^K","^22","^6","hyperfiddle/electric/debug.cljc","^:",22,"^5J",["^1;",[["^63"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",75,"^5N",["^J",["^5O","^5P"]],"^9",75,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^63"]]]]]],"~$serializable-frame",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",64,"^8",7,"^9",64,"^:",25,"^5G",["^1;",["^5H",["^1;",[["^63"]]]]]],"^K","^29","^6","hyperfiddle/electric/debug.cljc","^:",25,"^5J",["^1;",[["^63"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",64,"^5N",["^J",[null,"~$clj","^5O"]],"^9",64,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^63"]]]]]],"~$->id",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",12,"^8",7,"^9",12,"^:",11,"^5G",["^1;",["^5H",["^1;",[[]]]]]],"^K","^2W","^6","hyperfiddle/electric/debug.cljc","^:",11,"^5J",["^1;",[[]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",12,"^5N","^5O","^9",12,"^5Q",0,"^5R",true,"^5G",["^1;",["^5H",["^1;",[[]]]]]],"~$render-arg",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",49,"^8",7,"^9",49,"^:",17,"^5G",["^1;",["^5H",["^1;",[["~$arg"]]]]]],"^K","^2U","^6","hyperfiddle/electric/debug.cljc","^:",17,"^5J",["^1;",[["^6:"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",49,"^5N",["^J",[null,"^5O","^2:","^5U","~$cljs.core/Symbol"]],"^9",49,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^6:"]]]]]],"~$serializable",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",70,"^8",7,"^9",70,"^:",19,"^5G",["^1;",["^5H",["^1;",[["~$map"]]]]]],"^K","^1Z","^6","hyperfiddle/electric/debug.cljc","^:",19,"^5J",["^1;",[["^6="]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",70,"^5N",["^J",[null,"^67","^5O"]],"^9",70,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^6="]]]]]],"~$PEER-ID",["^ ","^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",17,"^8",3,"^9",17,"^:",10,"~:doc","A random unique ID generated for each Electric runtime instance (browser tab, jvm). Used to identify origin of a transfered value."],"^K","^2Q","^6","hyperfiddle/electric/debug.cljc","^:",10,"^8",1,"^7",16,"^9",17,"^61","^5O","^6?","A random unique ID generated for each Electric runtime instance (browser tab, jvm). Used to identify origin of a transfered value."],"~$ex-id",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",31,"^8",7,"^9",31,"^:",12,"^5G",["^1;",["^5H",["^1;",[["^64"]]]]]],"^K","^2P","^6","hyperfiddle/electric/debug.cljc","^:",12,"^5J",["^1;",[["^64"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",31,"^5N","^5O","^9",31,"^5Q",1,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^64"]]]]]],"~$error",["^ ","^5F",null,"^5",["^ ","^6","hyperfiddle/electric/debug.cljc","^7",39,"^8",7,"^9",39,"^:",12,"^5G",["^1;",["^5H",["^1;",[["~$debug-info","~$failure"]]]]]],"^K","^28","^6","hyperfiddle/electric/debug.cljc","^:",12,"^5J",["^1;",[["^6B","^6C"]]],"^5K",null,"^5L",["^1;",[null,null]],"^8",1,"^5M",false,"^7",39,"^5N",["^J",["^S","^2N"]],"^9",39,"^5Q",2,"^5R",true,"^5G",["^1;",["^5H",["^1;",[["^6B","^6C"]]]]]]],"^19",["^ ","^E","^E","^10","^11","^H","^H","^13","^H","^11","^11"],"~:cljs.analyzer/constants",["^ ","^16",["^J",["~:hyperfiddle.electric.debug/method","~:hyperfiddle.electric.debug/trace","~:hyperfiddle.electric.debug/name","~:hyperfiddle.electric.impl.ir/op","~:hyperfiddle.electric.debug/type","~:else","~:hyperfiddle.electric.debug/scope","~:transfer","^6","~$fn","~$hyperfiddle.electric.impl.runtime/fail","~:toggle","~$defn","~:hyperfiddle.electric/type","~:hyperfiddle.electric.debug/action","~:hyperfiddle.electric.debug/origin","~:hyperfiddle.electric.debug/target","^7","~:hyperfiddle.electric.debug/params","~$cljs.core/fn","~:hyperfiddle.electric.debug/args","~$case","~$catch","~$...","~:hyperfiddle.electric.debug/meta","~:hyperfiddle.electric.debug","~:hyperfiddle.electric.debug/macro","~:hyperfiddle.electric.debug/serializable","~$throw"]],"~:order",["^6Q","^6F","^6S","^6J","^72","^6W","^6[","^70","^6G","^6I","^6U","^71","^6K","^6L","^6O","^6N","^73","^6R","^6T","^6E","^6V","^6Z","^6M","^6P","^6Y","^6X","^6H","^6","^7"]],"^1C",["^ ","^17",["^J",[]]],"^1D",["^ "],"^1E",["^12","^E","^15","^11","^H","^T","^V","^X","^Z"]],"^Q","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^37",[["^77","~:static-fns"],true,["^77","~:shadow-tweaks"],null,["^77","~:source-map-inline"],null,["^77","~:elide-asserts"],false,["^77","~:optimize-constants"],null,["^77","^1J"],null,["^77","~:external-config"],null,["^77","~:tooling-config"],null,["^77","~:emit-constants"],null,["^77","~:load-tests"],null,["^77","~:form-size-threshold"],null,["^77","~:global-goog-object&array"],null,["^77","~:data-readers"],null,["^77","~:infer-externs"],"~:auto",["^77","^1L"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^77","~:fn-invoke-direct"],null,["^77","~:source-map"],"/dev/null"]]]