["^ ","~:output",["^ ","~:js","goog.provide('hyperfiddle.electric.impl.for$');\nhyperfiddle.electric.impl.for$.seq_diff = (function hyperfiddle$electric$impl$for$seq_diff(kf){\nreturn (function (rf){\nvar state = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((4));\nvar append = (function (o,k){\nvar next_index = (state[((2) | (0))]);\n(state[((2) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(next_index,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(next_index,k,cljs.core.PersistentVector.EMPTY),o)));\n\nvar temp__5806__auto__ = (state[((3) | (0))]);\nif((temp__5806__auto__ == null)){\n(o[((0) | (0))] = o);\n\n(o[((1) | (0))] = o);\n\nreturn (state[((3) | (0))] = o);\n} else {\nvar next_head = temp__5806__auto__;\nvar next_tail = (next_head[((0) | (0))]);\n(o[((0) | (0))] = next_tail);\n\n(o[((1) | (0))] = next_head);\n\n(next_head[((0) | (0))] = o);\n\nreturn (next_tail[((1) | (0))] = o);\n}\n});\nvar scan = (function (r,x){\nvar k = (kf.cljs$core$IFn$_invoke$arity$1 ? kf.cljs$core$IFn$_invoke$arity$1(x) : kf.call(null,x));\nvar prev_index = (state[((0) | (0))]);\nvar prev_head = (state[((1) | (0))]);\nvar temp__5806__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(prev_index,k);\nif((temp__5806__auto__ == null)){\nvar o = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((3));\nappend(o,k);\n\nvar G__31018 = (function (){var G__31021 = r;\nvar G__31022 = o;\nvar G__31023 = (o[((2) | (0))] = x);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31021,G__31022,G__31023) : rf.call(null,G__31021,G__31022,G__31023));\n})();\nvar G__31019 = null;\nvar G__31020 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o,prev_head], null);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31018,G__31019,G__31020) : rf.call(null,G__31018,G__31019,G__31020));\n} else {\nvar vec__31025 = temp__5806__auto__;\nvar seq__31026 = cljs.core.seq(vec__31025);\nvar first__31027 = cljs.core.first(seq__31026);\nvar seq__31026__$1 = cljs.core.next(seq__31026);\nvar o = first__31027;\nvar os = seq__31026__$1;\nvar prev = (o[((0) | (0))]);\nvar next = (((o === prev))?null:(prev[((1) | (0))] = (function (){var G__31032 = (o[((1) | (0))]);\n(G__31032[((0) | (0))] = prev);\n\nreturn G__31032;\n})()));\nvar r__$1 = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,(o[((2) | (0))])))?r:(function (){var G__31033 = r;\nvar G__31034 = o;\nvar G__31035 = (o[((2) | (0))] = x);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31033,G__31034,G__31035) : rf.call(null,G__31033,G__31034,G__31035));\n})());\nvar r__$2 = (((o === prev_head))?(function (){\n(state[((1) | (0))] = next);\n\nreturn r__$1;\n})()\n:(function (){var G__31036 = r__$1;\nvar G__31037 = null;\nvar G__31038 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o,prev_head], null);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31036,G__31037,G__31038) : rf.call(null,G__31036,G__31037,G__31038));\n})());\n(state[((0) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(prev_index,k,os));\n\nappend(o,k);\n\nreturn r__$2;\n}\n});\nreturn (function() {\nvar G__31224 = null;\nvar G__31224__0 = (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__31224__1 = (function (r){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(r) : rf.call(null,r));\n});\nvar G__31224__2 = (function (r,xs){\nif((xs instanceof hyperfiddle.electric.Failure)){\nvar temp__5806__auto__ = (state[((1) | (0))]);\nif((temp__5806__auto__ == null)){\nreturn r;\n} else {\nvar prev_head = temp__5806__auto__;\nvar o = prev_head;\nvar r__$1 = r;\nwhile(true){\nvar o__$1 = (o[((0) | (0))]);\nvar r__$2 = (function (){var G__31041 = r__$1;\nvar G__31042 = o__$1;\nvar G__31043 = (o__$1[((2) | (0))] = xs);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31041,G__31042,G__31043) : rf.call(null,G__31041,G__31042,G__31043));\n})();\nif((o__$1 === prev_head)){\nreturn r__$2;\n} else {\nvar G__31234 = o__$1;\nvar G__31235 = r__$2;\no = G__31234;\nr__$1 = G__31235;\ncontinue;\n}\nbreak;\n}\n}\n} else {\nvar r__$1 = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(scan,r,xs);\nvar r__$2 = (function (){var temp__5806__auto__ = (state[((1) | (0))]);\nif((temp__5806__auto__ == null)){\nreturn r__$1;\n} else {\nvar prev_head = temp__5806__auto__;\nvar o = prev_head;\nvar r__$2 = r__$1;\nwhile(true){\nvar o__$1 = (o[((0) | (0))]);\nvar r__$3 = (function (){var G__31048 = r__$2;\nvar G__31049 = null;\nvar G__31050 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [o__$1,o__$1], null);\nreturn (rf.cljs$core$IFn$_invoke$arity$3 ? rf.cljs$core$IFn$_invoke$arity$3(G__31048,G__31049,G__31050) : rf.call(null,G__31048,G__31049,G__31050));\n})();\nif((o__$1 === prev_head)){\nreturn r__$3;\n} else {\nvar G__31240 = o__$1;\nvar G__31241 = r__$3;\no = G__31240;\nr__$2 = G__31241;\ncontinue;\n}\nbreak;\n}\n}\n})();\n(state[((0) | (0))] = (state[((2) | (0))]));\n\n(state[((1) | (0))] = (state[((3) | (0))]));\n\n(state[((2) | (0))] = null);\n\n(state[((3) | (0))] = null);\n\nreturn r__$2;\n}\n});\nG__31224 = function(r,xs){\nswitch(arguments.length){\ncase 0:\nreturn G__31224__0.call(this);\ncase 1:\nreturn G__31224__1.call(this,r);\ncase 2:\nreturn G__31224__2.call(this,r,xs);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31224.cljs$core$IFn$_invoke$arity$0 = G__31224__0;\nG__31224.cljs$core$IFn$_invoke$arity$1 = G__31224__1;\nG__31224.cljs$core$IFn$_invoke$arity$2 = G__31224__2;\nreturn G__31224;\n})()\n});\n});\nhyperfiddle.electric.impl.for$.entry = (function hyperfiddle$electric$impl$for$entry(k,v){\nreturn cljs.core.__GT_MapEntry(k,v,null);\n});\nhyperfiddle.electric.impl.for$.insert_before = (function hyperfiddle$electric$impl$for$insert_before(tier){\nreturn (function (rf){\nvar state = (function (){var G__31065 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((2));\n(G__31065[((0) | (0))] = cljs.core.PersistentArrayMap.EMPTY);\n\n(G__31065[((1) | (0))] = cljs.core.PersistentVector.EMPTY);\n\nreturn G__31065;\n})();\nreturn (function() {\nvar G__31259 = null;\nvar G__31259__0 = (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__31259__1 = (function (r){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(r) : rf.call(null,r));\n});\nvar G__31259__2 = (function (r,p__31068){\nvar vec__31071 = p__31068;\nvar target = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31071,(0),null);\nvar anchor = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31071,(1),null);\nvar r__$1 = (function (){var k__GT_p = (state[((0) | (0))]);\nif(cljs.core.contains_QMARK_(k__GT_p,target)){\nreturn r;\n} else {\n(state[((0) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(k__GT_p,target,cljs.core.count(k__GT_p)));\n\n(state[((1) | (0))] = cljs.core.conj.cljs$core$IFn$_invoke$arity$2((state[((1) | (0))]),target));\n\nvar G__31075 = r;\nvar G__31076 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [target], null);\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31075,G__31076) : rf.call(null,G__31075,G__31076));\n}\n})();\nvar k__GT_p = (state[((0) | (0))]);\nvar start_position = (k__GT_p.cljs$core$IFn$_invoke$arity$1 ? k__GT_p.cljs$core$IFn$_invoke$arity$1(target) : k__GT_p.call(null,target));\nvar anchor_position = ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(anchor,target))?cljs.core.count(k__GT_p):(function (){var G__31079 = anchor;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__31079)){\nreturn cljs.core.count(k__GT_p);\n} else {\nreturn (k__GT_p.cljs$core$IFn$_invoke$arity$1 ? k__GT_p.cljs$core$IFn$_invoke$arity$1(anchor) : k__GT_p.call(null,anchor));\n\n}\n})());\nvar final_position = (((start_position < anchor_position))?(anchor_position - (1)):anchor_position);\nvar step = cljs.core.compare(final_position,start_position);\nvar r__$2 = (function (){var G__31088 = step;\nswitch (G__31088) {\ncase (0):\nreturn r__$1;\n\nbreak;\ndefault:\nvar ks = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [target], null);\nvar i = start_position;\nwhile(true){\nvar j = (i + step);\nvar k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2((state[((1) | (0))]),j);\nvar ks__$1 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ks,k);\n(state[((0) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((state[((0) | (0))]),k,i));\n\n(state[((1) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((state[((1) | (0))]),i,k));\n\nif((j === final_position)){\n(state[((0) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((state[((0) | (0))]),target,j));\n\n(state[((1) | (0))] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((state[((1) | (0))]),j,target));\n\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(r__$1,ks__$1) : rf.call(null,r__$1,ks__$1));\n} else {\nvar G__31266 = ks__$1;\nvar G__31267 = j;\nks = G__31266;\ni = G__31267;\ncontinue;\n}\nbreak;\n}\n\n}\n})();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(anchor,target)){\n(state[((0) | (0))] = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((state[((0) | (0))]),target));\n\n(state[((1) | (0))] = cljs.core.pop((state[((1) | (0))])));\n\nhyperfiddle.electric.impl.runtime.move(tier,start_position,start_position);\n\nvar G__31099 = r__$2;\nvar G__31100 = new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [target], null);\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31099,G__31100) : rf.call(null,G__31099,G__31100));\n} else {\nif((start_position === final_position)){\n} else {\nhyperfiddle.electric.impl.runtime.move(tier,start_position,final_position);\n}\n\nreturn r__$2;\n}\n});\nG__31259 = function(r,p__31068){\nswitch(arguments.length){\ncase 0:\nreturn G__31259__0.call(this);\ncase 1:\nreturn G__31259__1.call(this,r);\ncase 2:\nreturn G__31259__2.call(this,r,p__31068);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31259.cljs$core$IFn$_invoke$arity$0 = G__31259__0;\nG__31259.cljs$core$IFn$_invoke$arity$1 = G__31259__1;\nG__31259.cljs$core$IFn$_invoke$arity$2 = G__31259__2;\nreturn G__31259;\n})()\n});\n});\nhyperfiddle.electric.impl.for$.apply_cycle = (function hyperfiddle$electric$impl$for$apply_cycle(p__31108,p__31109){\nvar map__31111 = p__31108;\nvar map__31111__$1 = cljs.core.__destructure_map(map__31111);\nvar r = map__31111__$1;\nvar vals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31111__$1,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733));\nvar index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31111__$1,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915));\nvar failed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31111__$1,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762));\nvar vec__31112 = p__31109;\nvar seq__31113 = cljs.core.seq(vec__31112);\nvar first__31114 = cljs.core.first(seq__31113);\nvar seq__31113__$1 = cljs.core.next(seq__31113);\nvar x = first__31114;\nvar ys = seq__31113__$1;\nvar temp__5806__auto__ = ys;\nif((temp__5806__auto__ == null)){\nvar temp__5806__auto____$1 = (index.cljs$core$IFn$_invoke$arity$1 ? index.cljs$core$IFn$_invoke$arity$1(x) : index.call(null,x));\nif((temp__5806__auto____$1 == null)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(r,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(index,x,cljs.core.count(index)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(vals,null)], 0));\n} else {\nvar i = temp__5806__auto____$1;\nif(((i + (1)) === cljs.core.count(index))){\n} else {\nthrow (new Error(\"Assert failed: (== (inc i) (count index))\"));\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(r,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),cljs.core.disj.cljs$core$IFn$_invoke$arity$2(failed,x),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(index,x),new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),cljs.core.pop(vals)], 0));\n}\n} else {\nvar vec__31119 = temp__5806__auto__;\nvar seq__31120 = cljs.core.seq(vec__31119);\nvar first__31121 = cljs.core.first(seq__31120);\nvar seq__31120__$1 = cljs.core.next(seq__31120);\nvar y = first__31121;\nvar ys__$1 = seq__31120__$1;\nvar i = (index.cljs$core$IFn$_invoke$arity$1 ? index.cljs$core$IFn$_invoke$arity$1(x) : index.call(null,x));\nvar v = (vals.cljs$core$IFn$_invoke$arity$1 ? vals.cljs$core$IFn$_invoke$arity$1(i) : vals.call(null,i));\nvar index__$1 = index;\nvar vals__$1 = vals;\nvar i__$1 = i;\nvar y__$1 = y;\nvar ys__$2 = ys__$1;\nwhile(true){\nvar j = (index__$1.cljs$core$IFn$_invoke$arity$1 ? index__$1.cljs$core$IFn$_invoke$arity$1(y__$1) : index__$1.call(null,y__$1));\nvar index__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(index__$1,y__$1,i__$1);\nvar vals__$2 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(vals__$1,i__$1,(vals__$1.cljs$core$IFn$_invoke$arity$1 ? vals__$1.cljs$core$IFn$_invoke$arity$1(j) : vals__$1.call(null,j)));\nvar temp__5806__auto____$1 = ys__$2;\nif((temp__5806__auto____$1 == null)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(r,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(index__$2,x,j),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(vals__$2,j,v)], 0));\n} else {\nvar vec__31144 = temp__5806__auto____$1;\nvar seq__31145 = cljs.core.seq(vec__31144);\nvar first__31146 = cljs.core.first(seq__31145);\nvar seq__31145__$1 = cljs.core.next(seq__31145);\nvar y__$2 = first__31146;\nvar ys__$3 = seq__31145__$1;\nvar G__31273 = index__$2;\nvar G__31274 = vals__$2;\nvar G__31275 = j;\nvar G__31276 = y__$2;\nvar G__31277 = ys__$3;\nindex__$1 = G__31273;\nvals__$1 = G__31274;\ni__$1 = G__31275;\ny__$1 = G__31276;\nys__$2 = G__31277;\ncontinue;\n}\nbreak;\n}\n}\n});\nhyperfiddle.electric.impl.for$.apply_change = (function hyperfiddle$electric$impl$for$apply_change(p__31151,k,v){\nvar map__31152 = p__31151;\nvar map__31152__$1 = cljs.core.__destructure_map(map__31152);\nvar r = map__31152__$1;\nvar vals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31152__$1,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733));\nvar index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31152__$1,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915));\nvar failed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31152__$1,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762));\nvar temp__5806__auto__ = (index.cljs$core$IFn$_invoke$arity$1 ? index.cljs$core$IFn$_invoke$arity$1(k) : index.call(null,k));\nif((temp__5806__auto__ == null)){\nreturn r;\n} else {\nvar i = temp__5806__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(r,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(vals,i,v),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),(function (){var fexpr__31155 = (((v instanceof hyperfiddle.electric.Failure))?cljs.core.conj:cljs.core.disj);\nreturn (fexpr__31155.cljs$core$IFn$_invoke$arity$2 ? fexpr__31155.cljs$core$IFn$_invoke$arity$2(failed,k) : fexpr__31155.call(null,failed,k));\n})()], 0));\n}\n});\nhyperfiddle.electric.impl.for$.values = (function hyperfiddle$electric$impl$for$values(p__31163){\nvar map__31164 = p__31163;\nvar map__31164__$1 = cljs.core.__destructure_map(map__31164);\nvar vals = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31164__$1,new cljs.core.Keyword(null,\"vals\",\"vals\",768058733));\nvar index = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31164__$1,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915));\nvar failed = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31164__$1,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762));\nvar temp__5806__auto__ = cljs.core.seq(cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(index,failed)));\nif((temp__5806__auto__ == null)){\nreturn vals;\n} else {\nvar vec__31167 = temp__5806__auto__;\nvar i = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31167,(0),null);\nreturn (vals.cljs$core$IFn$_invoke$arity$1 ? vals.cljs$core$IFn$_invoke$arity$1(i) : vals.call(null,i));\n}\n});\nhyperfiddle.electric.impl.for$.seq_patch = (function hyperfiddle$electric$impl$for$seq_patch(var_args){\nvar G__31171 = arguments.length;\nswitch (G__31171) {\ncase 0:\nreturn hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$0 = (function (){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"vals\",\"vals\",768058733),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"index\",\"index\",-1531685915),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"failed\",\"failed\",-1397425762),cljs.core.PersistentHashSet.EMPTY], null);\n}));\n\n(hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$1 = (function (r){\nreturn r;\n}));\n\n(hyperfiddle.electric.impl.for$.seq_patch.cljs$core$IFn$_invoke$arity$2 = (function (r,diff){\nreturn cljs.core.reduce_kv(hyperfiddle.electric.impl.for$.apply_change,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.for$.apply_cycle,r,cljs.core.get.cljs$core$IFn$_invoke$arity$2(diff,null)),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(diff,null));\n}));\n\n(hyperfiddle.electric.impl.for$.seq_patch.cljs$lang$maxFixedArity = 2);\n\n/**\n * \n * Given a function and a continuous flow of collections, returns a continuous flow of vectors of the same size as input\n * collection, where values are produced by the continuous flow returned by the function when called with the continuous\n * flow of values matching the identity provided by key function, defaulting to identity.\n */\nhyperfiddle.electric.impl.for$.map_by = (function hyperfiddle$electric$impl$for$map_by(var_args){\nvar G__31178 = arguments.length;\nswitch (G__31178) {\ncase 3:\nreturn hyperfiddle.electric.impl.for$.map_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn hyperfiddle.electric.impl.for$.map_by.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.impl.for$.map_by.cljs$core$IFn$_invoke$arity$3 = (function (tier,f,_GT_xs){\nreturn hyperfiddle.electric.impl.for$.map_by.cljs$core$IFn$_invoke$arity$4(tier,cljs.core.identity,f,_GT_xs);\n}));\n\n(hyperfiddle.electric.impl.for$.map_by.cljs$core$IFn$_invoke$arity$4 = (function (tier,k,f,_GT_xs){\nreturn missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic(hyperfiddle.electric.impl.for$.values,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([missionary.core.reductions.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.for$.seq_patch,hyperfiddle.electric.impl.gather.gather(cljs.core.merge,missionary.core.sample((function (p__31181){\nvar vec__31182 = p__31181;\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31182,(0),null);\nvar _GT_x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31182,(1),null);\nvar G__31185 = id;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__31185)){\nreturn missionary.core.sample(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,id),missionary.core.relieve(cljs.core.into,missionary.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.val),hyperfiddle.electric.impl.for$.insert_before(tier),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.vector),_GT_x], 0))));\n} else {\nreturn missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,id),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([hyperfiddle.electric.impl.runtime.with$(tier,(function (){var G__31187 = missionary.core.relieve(cljs.core.PersistentArrayMap.EMPTY,missionary.core.eduction.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.val),_GT_x));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31187) : f.call(null,G__31187));\n})())], 0));\n\n}\n}),missionary.core.group_by(cljs.core.key,missionary.core.eduction.cljs$core$IFn$_invoke$arity$variadic(hyperfiddle.electric.impl.for$.seq_diff(k),cljs.core.map.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.for$.entry),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_GT_xs], 0))))))], 0));\n}));\n\n(hyperfiddle.electric.impl.for$.map_by.cljs$lang$maxFixedArity = 4);\n\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","hyperfiddle/electric/impl/for.cljc","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",34],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.math","~$cljs.math","~$clojure.core","~$cljs.core"],"~:use-macros",["^ ","~$tests","~$hyperfiddle.rcf"],"~:excludes",["~#set",[]],"~:name","~$hyperfiddle.electric.impl.for","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",["^ ","~$Cancelled","~$missionary.Cancelled","~$Failure","~$hyperfiddle.electric.Failure"],"~:requires",["^ ","^Q","^R","~$missionary.core","^V","~$hyperfiddle.electric.impl.eventually","^W","~$r","~$hyperfiddle.electric.impl.runtime","^S","^T","^E","^E","~$goog","^Y","~$m","^V","^H","^H","^X","^X","~$hyperfiddle.electric.impl.gather","^Z","~$str","~$clojure.string","^10","^10"],"~:seen",["^J",["~:require"]],"~:uses",["^ ","~$gather","^Z","~$eventually","^W","^G","^H"],"~:require-macros",["^ ","^E","^E","^V","^V","~$m","^V","^H","^H","^Z","^Z"],"~:form",["~#list",["~$ns","^L",["^18",["^12",["^Z","~:refer",["^14"]],["^W","^1:",["^15"]],["^X","~:as","~$r"],["^V","^1;","~$m"],["^H","^1:",["^G"]],["^10","^1;","^["]]],["^18",["~:import","^R","^T"]]]],"~:flags",["^ ","^12",["^J",[]]],"~:js-deps",["^ "],"~:deps",["^Y","^E","^Z","^W","^X","^V","^H","^10","^R","^T"]],"^O","^L","~:resource-id",["~:shadow.build.classpath/resource","hyperfiddle/electric/impl/for.cljc"],"~:compiled-at",1693922840372,"^M",["^ ","^Q","^R","^V","^V","^W","^W","~$r","^X","^S","^T","^E","^E","^Y","^Y","~$m","^V","^H","^H","^X","^X","^Z","^Z","^[","^10","^10","^10"],"~:resource-name","hyperfiddle/electric/impl/for.cljc","~:warnings",[],"~:source","(ns hyperfiddle.electric.impl.for\n  (:require [hyperfiddle.electric.impl.gather :refer [gather]]\n            [hyperfiddle.electric.impl.eventually :refer [eventually]]\n            [hyperfiddle.electric.impl.runtime :as r]\n            [missionary.core :as m]\n            [hyperfiddle.rcf :refer [tests]]\n            [clojure.string :as str])\n  (:import missionary.Cancelled\n           hyperfiddle.electric.Failure\n           #?(:clj (clojure.lang MapEntry))))\n\n(defn seq-diff [kf]\n  (fn [rf]\n    (let [state (object-array 4) ; 4 slots: [previous index, previous list, next index, next list]\n          append (fn [^objects o k] ; add to a circular doubly linked list + update index.\n                   (let [next-index (aget state (int 2))]\n                     ;; add item to current index\n                     (aset state (int 2) ; set next index\n                       (assoc next-index k (conj (get next-index k []) o))) ; next-index new looks like {k [?o], ...}. Must map to a vector in case of keyfn collision\n                     ;; append item to current list\n                     (if-some [^objects next-head (aget state (int 3))] ; list is not empty\n                       (let [^objects next-tail (aget next-head (int 0))]\n                         (aset o (int 0) next-tail)\n                         (aset o (int 1) next-head)\n                         (aset next-head (int 0) o)\n                         (aset next-tail (int 1) o))\n                       (do (aset o (int 0) o) ; list is empty\n                         (aset o (int 1) o)\n                         (aset state (int 3) o)))))\n          scan (fn [r x]\n                 (let [k (kf x)\n                       prev-index (aget state (int 0))\n                       prev-head (aget state (int 1))]\n                   (if-some [[o & os] (get prev-index k)]\n                     (let [prev (aget o (int 0)) ; element already exists\n                           next (when-not (identical? o prev) ; list is of size 1\n                                  (aset prev (int 1) ; next <- prev and prev <- next\n                                    (doto (aget o (int 1))\n                                      (aset (int 0) prev))))\n                           ;; emit change if needed\n                           r (if (= x (aget o (int 2)))\n                               r (rf r o (aset o (int 2) x))) ; value changed, emit a change operation\n                           r (if (identical? o prev-head) ; item didn't move\n                               (do (aset state (int 1) next) r) ; if item was head, move head forward\n                               (rf r nil [o prev-head]))]  ; item moved, emit a move operation\n                       ;; remove from previous index\n                       (aset state (int 0) (assoc prev-index k os))\n                       (append o k) r)\n                     (let [o (object-array 3)] ; new item -> allocate 3 slots: [previous item, next item, value]\n                       (append o k)\n                       (-> r\n                         (rf o (aset o (int 2) x)) ; emit change operation\n                         (rf nil [o prev-head]) ; emit move operation\n                         )))))]\n      (fn\n        ([] (rf))\n        ([r] (rf r))\n        ([r xs]\n         (if (instance? Failure xs)\n           (if-some [prev-head (aget state (int 1))]\n             (loop [o prev-head, r r] ; iterate tail to head\n               (let [o (aget o (int 0))\n                     r (rf r o (aset o (int 2) xs))] ; set branch value to failure instance, then emit change operation.\n                 (if (identical? o prev-head)\n                   r (recur o r)))) r)\n           (let [r (reduce scan r xs) ; after scan we have a new list and new index\n                 r (if-some [prev-head (aget state (int 1))] ; remaining items in prev list are removals\n                     (loop [o prev-head, r r] ; iterate tail to head\n                       (let [o (aget o (int 0))\n                             r (rf r nil [o o])] ; emit removal operation\n                         (if (identical? o prev-head) ; are we at the end of the list?\n                           r (recur o r)))) r)]\n             (aset state (int 0) (aget state (int 2)))\n             (aset state (int 1) (aget state (int 3)))\n             (aset state (int 2) nil)\n             (aset state (int 3) nil)\n             r)))))))\n\n(defn entry [k v]\n  #?(:clj (MapEntry. k v)\n     :cljs (->MapEntry k v nil)))\n\n(tests\n  (let [alice-caramail {:id \"alice\" :email \"alice@caramail.com\"}\n        alice-gmail    {:id \"alice\" :email \"alice@gmail.com\"}\n        bob            {:id \"bob\" :email \"bob@yahoo.com\"}\n        alice-msn      {:id \"alice\" :email \"alice@msn.com\"}]\n    (sequence (comp (seq-diff :id) (map entry))\n      [[alice-caramail]\n       [alice-gmail bob]\n       [alice-gmail alice-msn bob]\n       [alice-gmail bob alice-msn]\n       [bob alice-msn]\n       []]) :=\n    [                    ; first change (initial)\n     [?a alice-caramail] ; set value of ?a to be {:id \"alice\", :email \"...\"}\n     [nil [?a nil]]      ; if first element is nil -> movement, if it's an object -> event on an item\n                         ; second element is a pair:\n                         ;  - first element is an identifier for the object we are moving\n                         ;  - second element is the target where to move it, nil means append at the end\n                         ; second change\n     [?a alice-gmail]    ; set value of ?a again (email changed)\n     [?b bob]            ; set value of ?b to bob\n     [nil [?b nil]]      ; a new object appears at the end of the list\n                         ; third change\n     [?c alice-msn]      ; set ?c to alice-msn\n     [nil [?c ?b]]       ; insert new object ?c before ?b\n                         ; fourth change\n     [nil [?b ?c]]       ; insert ?b before ?c (bob before 2nd alice)\n                         ; Fifth change\n     [nil [?b ?a]]       ; insert ?b before ?a\n     [?a alice-msn]      ; set ?a to be alice-msn\n     [nil [?c ?c]]       ; remove ?c\n                         ; Last change\n     [nil [?a ?a]]       ; drop ?a\n     [nil [?b ?b]]       ; drop ?b\n     ]))\n\n(defn insert-before [tier]\n  (fn [rf]\n    (let [state (doto (object-array 2)\n                  (aset (int 0) {})                         ;; key -> pos\n                  (aset (int 1) []))]                       ;; pos -> key\n      (fn\n        ([] (rf))\n        ([r] (rf r))\n        ([r [target anchor]]\n         (let [r (let [k->p (aget state (int 0))]\n                   (if (contains? k->p target)\n                     r (do (aset state (int 0) (assoc k->p target (count k->p)))\n                           (aset state (int 1) (conj (aget state (int 1)) target))\n                           (rf r [target]))))\n               k->p (aget state (int 0))\n               start-position (k->p target)                 ; get start position from identifier\n               anchor-position (if (= anchor target)        ; means removal\n                                 (count k->p)               ; end of the vector\n                                 (case anchor\n                                   nil (count k->p)         ; means target is moved to the end of the vector\n                                   (k->p anchor)))\n               final-position (if (< start-position anchor-position)\n                                (dec anchor-position) anchor-position)\n               step (compare final-position start-position) ; 1, 0, or -1. In which way are we rotating? Do we iterate LTR or RTL?\n               r (case step\n                   0 r                                      ; if we move a before b in [a b c], a is already just before b, nothing to do.\n                   (loop [ks [target], i start-position]    ; start in start-position, end in final-position\n                     (let [j (+ i step)                     ; move one step to the left or right\n                           k (nth (aget state (int 1)) j)\n                           ks (conj ks k)]\n                       (aset state (int 0) (assoc (aget state (int 0)) k i))\n                       (aset state (int 1) (assoc (aget state (int 1)) i k))\n                       (if (== j final-position)\n                         (do (aset state (int 0) (assoc (aget state (int 0)) target j))\n                             (aset state (int 1) (assoc (aget state (int 1)) j target))\n                             (rf r ks)) (recur ks j)))))]\n           (if (= anchor target)\n             (do (aset state (int 0) (dissoc (aget state (int 0)) target))\n                 (aset state (int 1) (pop (aget state (int 1))))\n                 (r/move tier start-position start-position)\n                 (rf r [target]))\n             (do (when-not (== start-position final-position)\n                   (r/move tier start-position final-position)) r))))))))\n\n;; TODO fix the test, requires to mock a tier :/\n(comment\n  (sequence insert-before [[:a nil]]) :=\n  [[:a]]\n\n  (sequence insert-before [[:a nil] [:b nil] [:c :a]]) :=\n  [[:a] [:b] [:c] [:c :b :a]]\n\n  (sequence insert-before [[:a nil] [:b nil] [:c nil] [:a :a]]) :=\n  [[:a] [:b] [:c] [:a :b :c] [:a]]\n\n  (sequence insert-before [[:b nil] [:c nil] [:a :b]]) :=\n  [[:b] [:c] [:a] [:a :c :b]])\n\n(defn apply-cycle [{:keys [vals index failed] :as r} [x & ys]]\n  (if-some [[y & ys] ys]\n    (let [i (index x)\n          v (vals i)]\n      (loop [index index\n             vals vals\n             i i\n             y y\n             ys ys]\n        (let [j (index y)\n              index (assoc index y i)\n              vals (assoc vals i (vals j))]\n          (if-some [[y & ys] ys]\n            (recur index vals j y ys)\n            (assoc r\n              :index (assoc index x j)\n              :vals (assoc vals j v))))))\n    (if-some [i (index x)]\n      (do (assert (== (inc i) (count index)))\n          (assoc r\n            :failed (disj failed x)\n            :index (dissoc index x)\n            :vals (pop vals)))\n      (assoc r\n        :index (assoc index x (count index))\n        :vals (conj vals nil)))))\n\n(defn apply-change [{:keys [vals index failed] :as r} k v]\n  (if-some [i (index k)] ; look up branch id (?a, ?b, ...) in [id -> position] index map\n    (assoc r\n      :vals (assoc vals i v)\n      :failed ((if (instance? Failure v) ; if v is a Failure, store its corresponding branch position in :failed set\n                 conj disj) failed k)) r))\n\n(defn values [{:keys [vals index failed]}] ; Either Failure | [value]\n  (if-some [[i] (seq (sort (mapv index failed)))]    ; Sorted because we want to report the first error in the same order as the input collection.\n    (vals i)               ; error value produced by branch k. An instance of Failure.\n    vals))\n\n(defn seq-patch\n  ([] {:vals [] ; vector of each branch result (result of the for)\n       :index {} ; map of [branch id -> position in vector]\n       :failed #{}}) ; Set of positions of branches in an error state.\n  ([r] r)\n  ([r diff]\n   (reduce-kv apply-change\n     (reduce apply-cycle r (get diff nil))\n     (dissoc diff nil))))\n\n(tests\n  (reduce seq-patch (seq-patch)\n    [{nil [[:a]]\n      :a  {:id \"alice\", :email \"alice@caramail.com\"}}\n     {nil [[:b]]\n      :a  {:id \"alice\", :email \"alice@gmail.com\"}\n      :b  {:id \"bob\", :name \"bob@yahoo.com\"}}\n     {nil [[:c]]\n      :c  {:id \"alice\", :email \"alice@msn.com\"}}\n     {nil [[:c]]}])\n  :=\n  {:vals  [{:id \"alice\", :email \"alice@gmail.com\"}\n           {:id \"bob\", :name \"bob@yahoo.com\"}]\n   :index {:a 0 :b 1}\n   :failed #{}})\n\n(defn map-by \"\nGiven a function and a continuous flow of collections, returns a continuous flow of vectors of the same size as input\ncollection, where values are produced by the continuous flow returned by the function when called with the continuous\nflow of values matching the identity provided by key function, defaulting to identity.\"\n  ([tier f >xs] (map-by tier identity f >xs))\n  ([tier k f >xs]\n   (->> >xs\n     (m/eduction (seq-diff k) (map entry))\n     (m/group-by key)\n     (m/sample (fn [[id >x]]\n                 (case id\n                   nil (->> >x\n                         (m/eduction\n                           (map val)\n                           (insert-before tier)\n                           (map vector))\n                         (m/relieve into)\n                         (m/sample (partial hash-map id)))\n                   (->> >x\n                     (m/eduction (map val))\n                     (m/relieve {})\n                     (f)\n                     (r/with tier)\n                     (m/latest (partial hash-map id))))))\n     (gather merge)\n     (m/reductions seq-patch)\n     (m/latest values))))\n","~:reader-features",["^J",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["hyperfiddle.electric.impl.for/seq-diff","kf","rf","state","cljs.core.object_array","append","o","k","next-index","cljs.core.assoc","cljs.core.conj","cljs.core.get","temp__5806__auto__","next-head","next-tail","scan","r","x","prev-index","prev-head","vec__31025","seq__31026","cljs.core/seq","first__31027","cljs.core/first","cljs.core/next","os","prev","next","G__31032","cljs.core._EQ_","G__31033","G__31034","G__31035","G__31036","G__31037","G__31038","G__31021","G__31022","G__31023","G__31018","G__31019","G__31020","xs","js/hyperfiddle.electric.Failure","G__31041","G__31042","G__31043","cljs.core.reduce","G__31048","G__31049","G__31050","hyperfiddle.electric.impl.for/entry","v","cljs.core/->MapEntry","hyperfiddle.electric.impl.for/insert-before","tier","G__31065","p__31068","vec__31071","cljs.core.nth","target","anchor","k->p","cljs.core/contains?","cljs.core/count","G__31075","G__31076","start-position","anchor-position","G__31079","final-position","step","cljs.core/compare","G__31088","ks","i","j","cljs.core.dissoc","cljs.core/pop","hyperfiddle.electric.impl.runtime/move","G__31099","G__31100","p__31108","p__31109","map__31111","cljs.core/--destructure-map","vec__31112","seq__31113","first__31114","hyperfiddle.electric.impl.for/apply-cycle","vals","index","failed","ys","vec__31119","seq__31120","first__31121","y","vec__31144","seq__31145","first__31146","js/Error","cljs.core.disj","p__31151","map__31152","hyperfiddle.electric.impl.for/apply-change","fexpr__31155","cljs.core/conj","cljs.core/disj","p__31163","map__31164","hyperfiddle.electric.impl.for/values","vec__31167","cljs.core.sort","cljs.core.mapv","var_args","G__31171","hyperfiddle.electric.impl.for/seq-patch","diff","cljs.core/reduce-kv","G__31178","hyperfiddle.electric.impl.for/map-by","f",">xs","hyperfiddle.electric.impl.for$.map_by","cljs.core/identity","missionary.core.eduction","cljs.core.map","missionary.core/group-by","cljs.core/key","missionary.core/sample","p__31181","vec__31182","id",">x","G__31185","cljs.core/val","cljs.core/vector","missionary.core/relieve","cljs.core/into","cljs.core.partial","cljs.core/hash-map","G__31187","hyperfiddle.electric.impl.runtime/with","missionary.core.latest","hyperfiddle.electric.impl.gather/gather","cljs.core/merge","missionary.core.reductions"]],"~:used-vars",["^J",["~$cljs.core/--destructure-map","~$hyperfiddle.electric.impl.runtime/with","~$hyperfiddle.electric.impl.for/values","~$missionary.core/reductions","~$hyperfiddle.electric.impl.for/insert-before","~$cljs.core/=","~$hyperfiddle.electric.impl.runtime/move","~$cljs.core/partial","~$cljs.core/count","~$cljs.core/hash-map","~$cljs.core/reduce","~$cljs.core/seq","~$cljs.core/identity","~$cljs.core/object-array","~$cljs.core/mapv","~$cljs.core/dissoc","~$cljs.core/pop","~$cljs.core/contains?","~$cljs.core/into","~$cljs.core/conj","~$cljs.core/sort","~$cljs.core/map","~$hyperfiddle.electric.impl.for/seq-diff","~$missionary.core/sample","~$missionary.core/latest","~$hyperfiddle.electric.impl.for/map-by","~$cljs.core/get","~$hyperfiddle.electric.impl.for/seq-patch","~$missionary.core/relieve","~$hyperfiddle.electric.impl.for/apply-change","~$missionary.core/eduction","~$js/hyperfiddle.electric.Failure","~$cljs.core/->MapEntry","~$hyperfiddle.electric.impl.for/entry","~$hyperfiddle.electric.impl.gather/gather","~$cljs.core/nth","~$cljs.core/key","~$cljs.core/next","~$cljs.core/compare","~$cljs.core/disj","~$cljs.core/assoc","~$hyperfiddle.electric.impl.for/apply-cycle","~$cljs.core/reduce-kv","~$cljs.core/first","~$cljs.core/merge","~$cljs.core/val","~$js/Error","~$missionary.core/group-by","~$cljs.core/vector"]]],"~:cache-keys",["~#cmap",[["^1A","hyperfiddle/electric/impl/array_fields.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^J",[]],"~:deps-syms",["^Y","^E","^H"]]],["^1A","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.dom.HtmlElement"]]],["^1A","missionary/Cancelled.js"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^10","~$goog.string"]]],["^1A","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","hyperfiddle/electric/impl/for.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^Z","^W","^X","^V","^H","^10","^R","^T"]]],["^1A","cljs/env.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1A","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^31"]]],["^1A","cljs/analyzer/impl/namespaces.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/impl/Semaphore.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32"]]],["^1A","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","missionary/impl/Reactor.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","hyperfiddle/electric/impl/eventually.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/core.cljc"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cloroutine.core","~$missionary.impl.Reduce","~$missionary.impl.Reductions","~$missionary.impl.GroupBy","~$missionary.impl.Relieve","~$missionary.impl.Latest","~$missionary.impl.Sample","~$missionary.impl.Reactor","~$missionary.impl.Fiber","~$missionary.impl.Sequential","~$missionary.impl.Ambiguous","~$missionary.impl.Continuous","~$missionary.impl.Watch","~$missionary.impl.Observe","~$missionary.impl.Buffer","~$missionary.impl.Rendezvous","~$missionary.impl.Dataflow","~$missionary.impl.Mailbox","~$missionary.impl.Semaphore","~$missionary.impl.RaceJoin","~$missionary.impl.Sleep","~$missionary.impl.Never","~$missionary.impl.Seed","~$missionary.impl.Eduction","~$missionary.impl.Zip"]]],["^1A","hyperfiddle/electric/impl/runtime.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$hyperfiddle.electric.impl.yield2","~$hyperfiddle.electric.impl.failer","~$hyperfiddle.electric.impl.local","~$hyperfiddle.electric.impl.ir","~$hyperfiddle.electric.debug","^V","^H","^10","~$contrib.data","^R","^T","~$hyperfiddle.electric.Pending","~$hyperfiddle.electric.Remote"]]],["^1A","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^2Y","~$goog.string.StringBuffer"]]],["^1A","missionary/impl/Seed.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","hyperfiddle/rcf.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.test","^10","~$hyperfiddle.rcf.reporters","~$hyperfiddle.rcf.queue","~$hyperfiddle.rcf.time","~$hyperfiddle.rcf.unify"]]],["^1A","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","hyperfiddle/electric/Pending.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^10","^2Y","^43"]]],["^1A","missionary/impl/RaceJoin.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3[","^40","^41","^3Z","^2Z","^2Y","^43"]]],["^1A","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cloroutine/core.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cloroutine.impl"]]],["^1A","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32"]]],"~:SHADOW-TIMESTAMP",[1677656185000,1677656185000,1674331854000],["^1A","missionary/impl/Sequential.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3A","^R"]]],["^1A","missionary/impl/Ambiguous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3A","^R"]]],["^1A","missionary/impl/Watch.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","~$goog.reflect"]]],["^1A","missionary/impl/Eduction.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","~$goog.fs.blob","^33","~$goog.html.SafeScript","~$goog.html.trustedtypes","^35","^36","^37","^38"]]],["^1A","missionary/impl/Latest.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$missionary.impl.Heap"]]],["^1A","missionary/impl/Sample.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","cljs/analyzer/passes/and_or.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.analyzer.passes"]]],["^1A","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","missionary/impl/Relieve.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/impl/GroupBy.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","hyperfiddle/electric/Remote.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","missionary/impl/Zip.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^37","~$goog.html.SafeUrl","^38","^32","^31"]]],["^1A","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4=","~$goog.html.SafeStyle","^4A","^34","~$goog.html.uncheckedconversions","^37","^31"]]],["^1A","contrib/data.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^C","~$clojure.datafy","^H"]]],["^1A","missionary/impl/Buffer.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","cljs/analyzer/passes.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^37","^35","^36","^4=","^4E","~$goog.html.SafeStyleSheet","^4A","~$goog.dom.TagName","^34","^38","^32","~$goog.labs.userAgent.browser","^2Z","^2[","^31","~$goog.dom.tags","^4>"]]],["^1A","cljs/math.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^2["]]],["^1A","hyperfiddle/electric/impl/ir.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/impl/Continuous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3A","^R"]]],["^1A","missionary/impl/Reduce.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","hyperfiddle/electric/impl/gather.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3S"]]],["^1A","hyperfiddle/rcf/time.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^2[","^42","~$cljs.tools.reader.edn","^43"]]],["^1A","missionary/impl/Dataflow.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","missionary/impl/Mailbox.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1A","hyperfiddle/electric/impl/yield2.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R","^H","~$hyperfiddle.electric.impl.array-fields","^V"]]],["^1A","cljs/tagged_literals.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.reader"]]],["^1A","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^2Z","^32","~$goog.collections.maps","^2Y","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1A","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cloroutine/impl.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.analyzer","~$cljs.env"]]],["^1A","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","missionary/impl/Observe.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","clojure/core/protocols.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",[]]],["^1A","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^2Z","^2["]]],["^1A","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3[","^10","~$cljs.tools.reader.impl.inspect"]]],["^1A","missionary/impl/Rendezvous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^2Y","^43"]]],["^1A","missionary/impl/Reductions.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.dom.safe","^4F","^37","^31"]]],["^1A","missionary/impl/Sleep.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","hyperfiddle/rcf/queue.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^47"]]],["^1A","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.labs.userAgent","^31"]]],["^1A","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^40","^2Y","^43"]]],["^1A","missionary/impl/Heap.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","hyperfiddle/electric/impl/failer.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/impl/Fiber.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","^4D","^4=","^4E","^4H","^4A","^34","^37","^31","^35"]]],["^1A","hyperfiddle/rcf/unify.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$clojure.walk","~$clojure.set"]]],["^1A","hyperfiddle/electric/debug.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^10","^3W","^H","^T","^3X","^R","~$hyperfiddle.electric.FailureInfo"]]],["^1A","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^3Z","^3[","^40"]]],["^1A","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","~$goog.math.Long","~$goog.math.Integer","^2Y","^2[","^2Z","~$goog.Uri","^43"]]],["^1A","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^37","^38","^4>","^32"]]],["^1A","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^37","^4E","^38","^2[","^32","^31"]]],["^1A","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^4;"]]],["^1A","hyperfiddle/electric/Failure.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]],["^1A","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","^2Y"]]],["^1A","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^32","^38"]]],["^1A","cljs/analyzer.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$cljs.analyzer.impl","~$cljs.analyzer.impl.namespaces","~$cljs.analyzer.passes.and-or","^4W","^4P","~$cljs.tagged-literals","^42","^3[","^50","^10","^2Y"]]],["^1A","clojure/datafy.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","~$clojure.core.protocols"]]],["^1A","hyperfiddle/rcf/reporters.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^44"]]],["^1A","cljs/test.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^10","^?"]]],["^1A","hyperfiddle/electric/impl/local.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","cljs/analyzer/impl.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E"]]],["^1A","missionary/impl/Never.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y","^E","^R"]]],["^1A","hyperfiddle/electric/FailureInfo.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^2T",["^ ","^2U",null,"^2V",["^J",[]],"^2W",["^Y"]]]]],"~:clj-info",["^ ","jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/local.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/gather.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/template.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/api.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/impl.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/test.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/unify.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/time.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/test.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/missionary/missionary/b.28/missionary-b.28.jar!/missionary/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/analyzer.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/impl.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/yield2.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/ast.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/array_fields.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/stacktrace.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/failer.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/reflect.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/queue.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/env.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/data.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm.clj",1691052514000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",1,"^8",5,"^9",1,"^:",34],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"^F",["^ ","^G","^H"],"^I",["^J",[]],"^K","^L","^M",["^ "],"^P",["^ ","^Q","^R","^S","^T"],"^U",["^ ","^Q","^R","^V","^V","^W","^W","~$r","^X","^S","^T","^E","^E","^Y","^Y","~$m","^V","^H","^H","^X","^X","^Z","^Z","^[","^10","^10","^10"],"^11",["^J",["^12"]],"~:shadow/js-access-global",["^J",["Error"]],"^13",["^ ","^14","^Z","^15","^W","^G","^H"],"~:defs",["^ ","~$seq-diff",["^ ","~:protocol-inline",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",12,"^8",7,"^9",12,"^:",15,"~:arglists",["^18",["~$quote",["^18",[["~$kf"]]]]]],"^K","^27","^6","hyperfiddle/electric/impl/for.cljc","^:",15,"~:method-params",["^18",[["^6Y"]]],"~:protocol-impl",null,"~:arglists-meta",["^18",[null,null]],"^8",1,"~:variadic?",false,"^7",12,"~:ret-tag","~$function","^9",12,"~:max-fixed-arity",1,"~:fn-var",true,"^6W",["^18",["^6X",["^18",[["^6Y"]]]]]],"~$entry",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",79,"^8",7,"^9",79,"^:",12,"^6W",["^18",["^6X",["^18",[["~$k","~$v"]]]]]],"^K","^2B","^6","hyperfiddle/electric/impl/for.cljc","^:",12,"^6Z",["^18",[["~$k","~$v"]]],"^6[",null,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7",79,"^72","~$cljs.core/MapEntry","^9",79,"^74",2,"^75",true,"^6W",["^18",["^6X",["^18",[["~$k","~$v"]]]]]],"~$insert-before",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",119,"^8",7,"^9",119,"^:",20,"^6W",["^18",["^6X",["^18",[["~$tier"]]]]]],"^K","^1Q","^6","hyperfiddle/electric/impl/for.cljc","^:",20,"^6Z",["^18",[["^79"]]],"^6[",null,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7",119,"^72","^73","^9",119,"^74",1,"^75",true,"^6W",["^18",["^6X",["^18",[["^79"]]]]]],"~$apply-cycle",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",177,"^8",7,"^9",177,"^:",18,"^6W",["^18",["^6X",["^18",[[["^ ","~:keys",["~$vals","~$index","~$failed"],"^1;","~$r"],["~$x","~$&","~$ys"]]]]]]],"^K","^2J","^6","hyperfiddle/electric/impl/for.cljc","^:",18,"^6Z",["^18",[["~$p__31108","~$p__31109"]]],"^6[",null,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7",177,"^72",["^J",["~$clj","~$any"]],"^9",177,"^74",2,"^75",true,"^6W",["^18",["^6X",["^18",[[["^ ","^7;",["^7<","^7=","^7>"],"^1;","~$r"],["~$x","~$&","^7?"]]]]]]],"~$apply-change",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",204,"^8",7,"^9",204,"^:",19,"^6W",["^18",["^6X",["^18",[[["^ ","^7;",["^7<","^7=","^7>"],"^1;","~$r"],"~$k","~$v"]]]]]],"^K","^2>","^6","hyperfiddle/electric/impl/for.cljc","^:",19,"^6Z",["^18",[["~$p__31151","~$k","~$v"]]],"^6[",null,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7",204,"^72",["^J",[null,"^7B","^7C","~$clj-nil"]],"^9",204,"^74",3,"^75",true,"^6W",["^18",["^6X",["^18",[[["^ ","^7;",["^7<","^7=","^7>"],"^1;","~$r"],"~$k","~$v"]]]]]],"~$values",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",211,"^8",7,"^9",211,"^:",13,"^6W",["^18",["^6X",["^18",[[["^ ","^7;",["^7<","^7=","^7>"]]]]]]]],"^K","^1O","^6","hyperfiddle/electric/impl/for.cljc","^:",13,"^6Z",["^18",[["~$p__31163"]]],"^6[",null,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7",211,"^72",["^J",["^7C","^7F"]],"^9",211,"^74",1,"^75",true,"^6W",["^18",["^6X",["^18",[[["^ ","^7;",["^7<","^7=","^7>"]]]]]]]],"~$seq-patch",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",216,"^8",7,"^9",216,"^:",16,"^6W",["^18",["^6X",["^18",[[],["~$r"],["~$r","~$diff"]]]]],"~:top-fn",["^ ","^71",false,"~:fixed-arity",2,"^74",2,"^6Z",[[],["~$r"],["~$r","^7J"]],"^6W",["^18",[[],["~$r"],["~$r","^7J"]]],"^70",["^18",[null,null,null]]]],"^K","^2<","^6","hyperfiddle/electric/impl/for.cljc","^:",16,"^7K",["^ ","^71",false,"^7L",2,"^74",2,"^6Z",[[],["~$r"],["~$r","^7J"]],"^6W",["^18",[[],["~$r"],["~$r","^7J"]]],"^70",["^18",[null,null,null]]],"^6Z",[[],["~$r"],["~$r","^7J"]],"^6[",null,"^7L",2,"^70",["^18",[null,null,null]],"^8",1,"^71",false,"~:methods",[["^ ","^7L",0,"^71",false,"~:tag","~$cljs.core/IMap"],["^ ","^7L",1,"^71",false],["^ ","^7L",2,"^71",false,"^7N",["^J",[null,"^7C"]]]],"^7",216,"^9",216,"^74",2,"^75",true,"^6W",["^18",[[],["~$r"],["~$r","^7J"]]]],"~$map-by",["^ ","^6V",null,"^5",["^ ","^6","hyperfiddle/electric/impl/for.cljc","^7",242,"^8",7,"^9",242,"^:",13,"^6W",["^18",["^6X",["^18",[["^79","~$f","~$>xs"],["^79","~$k","~$f","^7Q"]]]]],"~:doc","\nGiven a function and a continuous flow of collections, returns a continuous flow of vectors of the same size as input\ncollection, where values are produced by the continuous flow returned by the function when called with the continuous\nflow of values matching the identity provided by key function, defaulting to identity.","^7K",["^ ","^71",false,"^7L",4,"^74",4,"^6Z",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]],"^6W",["^18",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]]],"^70",["^18",[null,null]]]],"^K","^2:","^6","hyperfiddle/electric/impl/for.cljc","^:",13,"^7K",["^ ","^71",false,"^7L",4,"^74",4,"^6Z",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]],"^6W",["^18",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]]],"^70",["^18",[null,null]]],"^6Z",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]],"^6[",null,"^7L",4,"^70",["^18",[null,null]],"^8",1,"^71",false,"^7M",[["^ ","^7L",3,"^71",false,"^7N","^7C"],["^ ","^7L",4,"^71",false,"^7N","^73"]],"^7",242,"^9",242,"^74",4,"^75",true,"^6W",["^18",[["^79","~$f","^7Q"],["^79","~$k","~$f","^7Q"]]],"^7R","\nGiven a function and a continuous flow of collections, returns a continuous flow of vectors of the same size as input\ncollection, where values are produced by the continuous flow returned by the function when called with the continuous\nflow of values matching the identity provided by key function, defaulting to identity."]],"^16",["^ ","^E","^E","^V","^V","~$m","^V","^H","^H","^Z","^Z"],"~:cljs.analyzer/constants",["^ ","^11",["^J",["~:index","~:else","~:vals","~:failed"]],"~:order",["^7U","^7V","^7T","^7W"]],"^1=",["^ ","^12",["^J",[]]],"^1>",["^ "],"^1?",["^Y","^E","^Z","^W","^X","^V","^H","^10","^R","^T"]],"^O","^L","~:ns-specs",["^ "],"~:ns-spec-vars",["^J",[]],"~:compiler-options",["^2S",[["^7[","~:static-fns"],true,["^7[","~:shadow-tweaks"],null,["^7[","~:source-map-inline"],null,["^7[","~:elide-asserts"],false,["^7[","~:optimize-constants"],null,["^7[","^1D"],null,["^7[","~:external-config"],null,["^7[","~:tooling-config"],null,["^7[","~:emit-constants"],null,["^7[","~:load-tests"],null,["^7[","~:form-size-threshold"],null,["^7[","~:global-goog-object&array"],null,["^7[","~:data-readers"],null,["^7[","~:infer-externs"],"~:auto",["^7[","^1F"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7[","~:fn-invoke-direct"],null,["^7[","~:source-map"],"/dev/null"]]]