["^ ","~:output",["^ ","~:js","goog.provide('hyperfiddle.electric.impl.runtime');\nhyperfiddle.electric.impl.runtime.fail = (function hyperfiddle$electric$impl$runtime$fail(x){\nthrow x;\n});\nhyperfiddle.electric.impl.runtime.failure = cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1((function (p1__30596_SHARP_){\nif((p1__30596_SHARP_ instanceof hyperfiddle.electric.Failure)){\nreturn p1__30596_SHARP_;\n} else {\nreturn null;\n}\n}));\nhyperfiddle.electric.impl.runtime.pending = (new hyperfiddle.electric.Failure((new hyperfiddle.electric.Pending())));\nhyperfiddle.electric.impl.runtime.error = (function hyperfiddle$electric$impl$runtime$error(msg){\nreturn (new Error(msg));\n});\nhyperfiddle.electric.impl.runtime.pst = (function hyperfiddle$electric$impl$runtime$pst(e){\nreturn console.error(e);\n});\nhyperfiddle.electric.impl.runtime.select_debug_info = (function hyperfiddle$electric$impl$runtime$select_debug_info(debug_info){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.select_keys(debug_info,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"op\",\"hyperfiddle.electric.impl.ir/op\",1320467425)], null)),contrib.data.select_ns(new cljs.core.Keyword(null,\"hyperfiddle.electric.debug\",\"hyperfiddle.electric.debug\",-987645572),debug_info)], 0));\n});\nhyperfiddle.electric.impl.runtime.check_failure = (function hyperfiddle$electric$impl$runtime$check_failure(debug_info,_LT_x){\nreturn missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic((function (x){\nif((x instanceof hyperfiddle.electric.Failure)){\nreturn hyperfiddle.electric.debug.error(hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),x);\n} else {\nreturn x;\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_LT_x], 0));\n});\nhyperfiddle.electric.impl.runtime.latest_apply = (function hyperfiddle$electric$impl$runtime$latest_apply(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31008 = arguments.length;\nvar i__5770__auto___31009 = (0);\nwhile(true){\nif((i__5770__auto___31009 < len__5769__auto___31008)){\nargs__5775__auto__.push((arguments[i__5770__auto___31009]));\n\nvar G__31010 = (i__5770__auto___31009 + (1));\ni__5770__auto___31009 = G__31010;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.latest_apply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.latest_apply.cljs$core$IFn$_invoke$arity$variadic = (function (debug_info,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(missionary.core.latest,(function() { \nvar G__31011__delegate = function (f,args__$1){\nvar temp__5802__auto__ = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.failure,f,args__$1);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar err = temp__5802__auto__;\nreturn hyperfiddle.electric.debug.error(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"args\",\"hyperfiddle.electric.debug/args\",-1101355176),args__$1),err);\n} else {\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args__$1);\n}catch (e30621){var e = e30621;\nreturn hyperfiddle.electric.debug.error(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"args\",\"hyperfiddle.electric.debug/args\",-1101355176),args__$1),(new hyperfiddle.electric.Failure(e)));\n}}\n};\nvar G__31011 = function (f,var_args){\nvar args__$1 = null;\nif (arguments.length > 1) {\nvar G__31012__i = 0, G__31012__a = new Array(arguments.length -  1);\nwhile (G__31012__i < G__31012__a.length) {G__31012__a[G__31012__i] = arguments[G__31012__i + 1]; ++G__31012__i;}\n  args__$1 = new cljs.core.IndexedSeq(G__31012__a,0,null);\n} \nreturn G__31011__delegate.call(this,f,args__$1);};\nG__31011.cljs$lang$maxFixedArity = 1;\nG__31011.cljs$lang$applyTo = (function (arglist__31013){\nvar f = cljs.core.first(arglist__31013);\nvar args__$1 = cljs.core.rest(arglist__31013);\nreturn G__31011__delegate(f,args__$1);\n});\nG__31011.cljs$core$IFn$_invoke$arity$variadic = G__31011__delegate;\nreturn G__31011;\n})()\n,args);\n}));\n\n(hyperfiddle.electric.impl.runtime.latest_apply.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.latest_apply.cljs$lang$applyTo = (function (seq30612){\nvar G__30613 = cljs.core.first(seq30612);\nvar seq30612__$1 = cljs.core.next(seq30612);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30613,seq30612__$1);\n}));\n\nhyperfiddle.electric.impl.runtime.latest_first = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(missionary.core.latest,(function (x,y){\nif((y instanceof hyperfiddle.electric.Failure)){\nreturn y;\n} else {\nreturn x;\n}\n}));\nhyperfiddle.electric.impl.runtime.pure = (function hyperfiddle$electric$impl$runtime$pure(x){\nreturn missionary.core.cp_STAR_((function (){var cr30630_block_0 = (function hyperfiddle$electric$impl$runtime$pure_$_cr30630_block_0(cr30630_state){\ntry{var cr30630_place_0 = x;\n(cr30630_state[(0)] = null);\n\nreturn cr30630_place_0;\n}catch (e30636){var cr30630_exception = e30636;\n(cr30630_state[(0)] = null);\n\nthrow cr30630_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__30642 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((1));\n(G__30642[(0)] = cr30630_block_0);\n\nreturn G__30642;\n})());\n})());\n});\nhyperfiddle.electric.impl.runtime.empty_event = new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\"acks\",\"acks\",707064729),(0),new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028),cljs.core.PersistentVector.EMPTY,new cljs.core.Keyword(null,\"change\",\"change\",-1163046502),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"freeze\",\"freeze\",2043466309),cljs.core.PersistentHashSet.EMPTY], null);\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IDeref}\n*/\nhyperfiddle.electric.impl.runtime.It = (function (state,cancel,transfer){\nthis.state = state;\nthis.cancel = cancel;\nthis.transfer = transfer;\nthis.cljs$lang$protocol_mask$partition0$ = 32769;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(hyperfiddle.electric.impl.runtime.It.prototype.call = (function (unused__14959__auto__){\nvar self__ = this;\nvar self__ = this;\nvar G__30650 = (arguments.length - (1));\nswitch (G__30650) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join('')));\n\n}\n}));\n\n(hyperfiddle.electric.impl.runtime.It.prototype.apply = (function (self__,args30649){\nvar self__ = this;\nvar self____$1 = this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30649)));\n}));\n\n(hyperfiddle.electric.impl.runtime.It.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){\nvar self__ = this;\nvar _ = this;\nreturn (self__.cancel.cljs$core$IFn$_invoke$arity$1 ? self__.cancel.cljs$core$IFn$_invoke$arity$1(self__.state) : self__.cancel.call(null,self__.state));\n}));\n\n(hyperfiddle.electric.impl.runtime.It.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn (self__.transfer.cljs$core$IFn$_invoke$arity$1 ? self__.transfer.cljs$core$IFn$_invoke$arity$1(self__.state) : self__.transfer.call(null,self__.state));\n}));\n\n(hyperfiddle.electric.impl.runtime.It.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"state\",\"state\",-348086572,null),new cljs.core.Symbol(null,\"cancel\",\"cancel\",-323556833,null),new cljs.core.Symbol(null,\"transfer\",\"transfer\",1967954927,null)], null);\n}));\n\n(hyperfiddle.electric.impl.runtime.It.cljs$lang$type = true);\n\n(hyperfiddle.electric.impl.runtime.It.cljs$lang$ctorStr = \"hyperfiddle.electric.impl.runtime/It\");\n\n(hyperfiddle.electric.impl.runtime.It.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"hyperfiddle.electric.impl.runtime/It\");\n}));\n\n/**\n * Positional factory function for hyperfiddle.electric.impl.runtime/It.\n */\nhyperfiddle.electric.impl.runtime.__GT_It = (function hyperfiddle$electric$impl$runtime$__GT_It(state,cancel,transfer){\nreturn (new hyperfiddle.electric.impl.runtime.It(state,cancel,transfer));\n});\n\nhyperfiddle.electric.impl.runtime.lift_cancelled = cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.comp,(function (it){\nif((typeof hyperfiddle !== 'undefined') && (typeof hyperfiddle.electric !== 'undefined') && (typeof hyperfiddle.electric.impl !== 'undefined') && (typeof hyperfiddle.electric.impl.runtime !== 'undefined') && (typeof hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669 !== 'undefined')){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\nhyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669 = (function (it,meta30670){\nthis.it = it;\nthis.meta30670 = meta30670;\nthis.cljs$lang$protocol_mask$partition0$ = 425985;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_30671,meta30670__$1){\nvar self__ = this;\nvar _30671__$1 = this;\nreturn (new hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669(self__.it,meta30670__$1));\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_30671){\nvar self__ = this;\nvar _30671__$1 = this;\nreturn self__.meta30670;\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.call = (function (unused__14959__auto__){\nvar self__ = this;\nvar self__ = this;\nvar G__30678 = (arguments.length - (1));\nswitch (G__30678) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join('')));\n\n}\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.apply = (function (self__,args30674){\nvar self__ = this;\nvar self____$1 = this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30674)));\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){\nvar self__ = this;\nvar _ = this;\nreturn (self__.it.cljs$core$IFn$_invoke$arity$0 ? self__.it.cljs$core$IFn$_invoke$arity$0() : self__.it.call(null));\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\ntry{return cljs.core.deref(self__.it);\n}catch (e30690){if((e30690 instanceof missionary.Cancelled)){\nvar e = e30690;\nreturn (new hyperfiddle.electric.Failure(e));\n} else {\nthrow e30690;\n\n}\n}}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"it\",\"it\",-1630841225,null),new cljs.core.Symbol(null,\"meta30670\",\"meta30670\",871783994,null)], null);\n}));\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.cljs$lang$type = true);\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.cljs$lang$ctorStr = \"hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669\");\n\n(hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669\");\n}));\n\n/**\n * Positional factory function for hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669.\n */\nhyperfiddle.electric.impl.runtime.__GT_t_hyperfiddle$electric$impl$runtime30669 = (function hyperfiddle$electric$impl$runtime$__GT_t_hyperfiddle$electric$impl$runtime30669(it__$1,meta30670){\nreturn (new hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669(it__$1,meta30670));\n});\n\n}\n\nreturn (new hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669(it,cljs.core.PersistentArrayMap.EMPTY));\n}));\nhyperfiddle.electric.impl.runtime.signal = (function hyperfiddle$electric$impl$runtime$signal(_LT_x){\nreturn missionary.core.signal_BANG_(hyperfiddle.electric.impl.runtime.lift_cancelled(_LT_x));\n});\nhyperfiddle.electric.impl.runtime.this$ = cljs.core.volatile_BANG_(null);\nhyperfiddle.electric.impl.runtime.context_slot_root = ((0) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_local_id = ((1) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_remote_id = ((2) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_pending_rpos = ((3) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_pending_wpos = ((4) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_pending_buffer = ((5) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_frame_store = ((6) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_event = ((7) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_check = ((8) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_notifier = ((9) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_terminator = ((10) | (0));\nhyperfiddle.electric.impl.runtime.context_slot_incoming = ((11) | (0));\nhyperfiddle.electric.impl.runtime.context_slots = ((12) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_parent = ((0) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_position = ((1) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_buffer = ((2) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_size = ((3) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_foreigns = ((4) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_hooks = ((5) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_vars = ((6) | (0));\nhyperfiddle.electric.impl.runtime.tier_slot_remote = ((7) | (0));\nhyperfiddle.electric.impl.runtime.tier_slots = ((8) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_context = ((0) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_parent = ((1) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_id = ((2) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_position = ((3) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_foreign = ((4) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_static = ((5) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_dynamic = ((6) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_variables = ((7) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_sources = ((8) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_targets = ((9) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_inputs = ((10) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_tiers = ((11) | (0));\nhyperfiddle.electric.impl.runtime.frame_slot_constants = ((12) | (0));\nhyperfiddle.electric.impl.runtime.frame_slots = ((13) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_frame = ((0) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_notifier = ((1) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_terminator = ((2) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_current = ((3) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_dirty = ((4) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_check = ((5) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_pending = ((6) | (0));\nhyperfiddle.electric.impl.runtime.input_slot_cancel = ((7) | (0));\nhyperfiddle.electric.impl.runtime.input_slots = ((8) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_input = ((0) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_id = ((1) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_iterator = ((2) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_current = ((3) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_dirty = ((4) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_done = ((5) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_prev = ((6) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_next = ((7) | (0));\nhyperfiddle.electric.impl.runtime.output_slot_time = ((8) | (0));\nhyperfiddle.electric.impl.runtime.output_slots = ((9) | (0));\nhyperfiddle.electric.impl.runtime.aswap = (function hyperfiddle$electric$impl$runtime$aswap(var_args){\nvar G__30749 = arguments.length;\nswitch (G__30749) {\ncase 3:\nreturn hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ = [];\nvar len__5769__auto___31028 = arguments.length;\nvar i__5770__auto___31029 = (0);\nwhile(true){\nif((i__5770__auto___31029 < len__5769__auto___31028)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___31029]));\n\nvar G__31030 = (i__5770__auto___31029 + (1));\ni__5770__auto___31029 = G__31030;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ = (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((6)),(0),null));\nreturn hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__5795__auto__);\n\n}\n});\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3 = (function (arr,slot,f){\nreturn (arr[slot] = (function (){var G__30759 = (arr[slot]);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30759) : f.call(null,G__30759));\n})());\n}));\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$4 = (function (arr,slot,f,a){\nreturn (arr[slot] = (function (){var G__30764 = (arr[slot]);\nvar G__30765 = a;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30764,G__30765) : f.call(null,G__30764,G__30765));\n})());\n}));\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$5 = (function (arr,slot,f,a,b){\nreturn (arr[slot] = (function (){var G__30767 = (arr[slot]);\nvar G__30768 = a;\nvar G__30769 = b;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30767,G__30768,G__30769) : f.call(null,G__30767,G__30768,G__30769));\n})());\n}));\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$6 = (function (arr,slot,f,a,b,c){\nreturn (arr[slot] = (function (){var G__30770 = (arr[slot]);\nvar G__30771 = a;\nvar G__30772 = b;\nvar G__30773 = c;\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30770,G__30771,G__30772,G__30773) : f.call(null,G__30770,G__30771,G__30772,G__30773));\n})());\n}));\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$variadic = (function (arr,slot,f,a,b,c,ds){\nreturn (arr[slot] = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,(arr[slot]),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([ds], 0)));\n}));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.aswap.cljs$lang$applyTo = (function (seq30740){\nvar G__30741 = cljs.core.first(seq30740);\nvar seq30740__$1 = cljs.core.next(seq30740);\nvar G__30742 = cljs.core.first(seq30740__$1);\nvar seq30740__$2 = cljs.core.next(seq30740__$1);\nvar G__30743 = cljs.core.first(seq30740__$2);\nvar seq30740__$3 = cljs.core.next(seq30740__$2);\nvar G__30744 = cljs.core.first(seq30740__$3);\nvar seq30740__$4 = cljs.core.next(seq30740__$3);\nvar G__30745 = cljs.core.first(seq30740__$4);\nvar seq30740__$5 = cljs.core.next(seq30740__$4);\nvar G__30746 = cljs.core.first(seq30740__$5);\nvar seq30740__$6 = cljs.core.next(seq30740__$5);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30741,G__30742,G__30743,G__30744,G__30745,G__30746,seq30740__$6);\n}));\n\n(hyperfiddle.electric.impl.runtime.aswap.cljs$lang$maxFixedArity = (6));\n\nhyperfiddle.electric.impl.runtime.doto_aset = (function hyperfiddle$electric$impl$runtime$doto_aset(arr,k,v){\nvar G__30781 = arr;\n(G__30781[(k | (0))] = v);\n\nreturn G__30781;\n});\nhyperfiddle.electric.impl.runtime.make_context = (function hyperfiddle$electric$impl$runtime$make_context(){\nvar G__30785 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.context_slots);\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_local_id] = cljs.core.identity((0)));\n\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_remote_id] = cljs.core.identity((0)));\n\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_pending_rpos] = cljs.core.identity((0)));\n\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos] = cljs.core.identity((0)));\n\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_pending_buffer] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((2)));\n\n(G__30785[hyperfiddle.electric.impl.runtime.context_slot_frame_store] = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY));\n\nreturn G__30785;\n});\nhyperfiddle.electric.impl.runtime.make_tier = (function hyperfiddle$electric$impl$runtime$make_tier(parent,position){\nreturn ((parent[hyperfiddle.electric.impl.runtime.frame_slot_tiers])[(position | (0))] = (function (){var G__30791 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.tier_slots);\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_parent] = parent);\n\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_position] = position);\n\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_buffer] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((8)));\n\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_size] = cljs.core.identity(((0) | (0))));\n\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_foreigns] = cljs.core.PersistentArrayMap.EMPTY);\n\n(G__30791[hyperfiddle.electric.impl.runtime.tier_slot_hooks] = cljs.core.PersistentArrayMap.EMPTY);\n\nreturn G__30791;\n})());\n});\nhyperfiddle.electric.impl.runtime.make_frame = (function hyperfiddle$electric$impl$runtime$make_frame(context,parent,id,position,foreign,static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,buffer,vars,boot){\nvar tier_count = (variable_count + source_count);\nvar frame = (function (){var G__30797 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.frame_slots);\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_context] = context);\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_parent] = parent);\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_id] = id);\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_position] = position);\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_foreign] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cljs.core.count(foreign)));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_static] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cljs.core.count(static$)));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_dynamic] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cljs.core.count(dynamic)));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_variables] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(variable_count));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_sources] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(source_count));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_targets] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(target_count));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_inputs] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(input_count));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_tiers] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(tier_count));\n\n(G__30797[hyperfiddle.electric.impl.runtime.frame_slot_constants] = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(constant_count));\n\nreturn G__30797;\n})();\nvar n__5636__auto___31052 = tier_count;\nvar i_31053 = (0);\nwhile(true){\nif((i_31053 < n__5636__auto___31052)){\nhyperfiddle.electric.impl.runtime.make_tier(frame,i_31053);\n\nvar G__31054 = (i_31053 + (1));\ni_31053 = G__31054;\ncontinue;\n} else {\n}\nbreak;\n}\n\n(buffer[(position | (0))] = frame);\n\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$5(context,hyperfiddle.electric.impl.runtime.context_slot_frame_store,cljs.core.assoc_BANG_,id,frame);\n\nvar prevs = cljs.core.reduce_kv((function (m,v,_LT_x){\nvar prev = (vars[(v | (0))]);\nvar proc = hyperfiddle.electric.impl.runtime.signal(_LT_x);\n((frame[hyperfiddle.electric.impl.runtime.frame_slot_foreign])[cljs.core.count(m)] = proc);\n\n(vars[(v | (0))] = proc);\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,v,prev);\n}),cljs.core.PersistentArrayMap.EMPTY,foreign);\ncljs.core.reduce_kv((function (arr,i,_LT_x){\n(arr[(i | (0))] = hyperfiddle.electric.impl.runtime.signal(_LT_x));\n\nreturn arr;\n}),(frame[hyperfiddle.electric.impl.runtime.frame_slot_static]),static$);\n\ncljs.core.reduce_kv((function (arr,i,v){\n(arr[(i | (0))] = hyperfiddle.electric.impl.runtime.signal((vars[(v | (0))])));\n\nreturn arr;\n}),(frame[hyperfiddle.electric.impl.runtime.frame_slot_dynamic]),dynamic);\n\nvar result = (boot.cljs$core$IFn$_invoke$arity$2 ? boot.cljs$core$IFn$_invoke$arity$2(frame,vars) : boot.call(null,frame,vars));\ncljs.core.reduce_kv(hyperfiddle.electric.impl.runtime.doto_aset,vars,prevs);\n\nreturn result;\n});\nhyperfiddle.electric.impl.runtime.input_ready = (function hyperfiddle$electric$impl$runtime$input_ready(input){\nif(((input[hyperfiddle.electric.impl.runtime.input_slot_cancel]) == null)){\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = false);\n\nvar fexpr__30803 = (input[hyperfiddle.electric.impl.runtime.input_slot_notifier]);\nreturn (fexpr__30803.cljs$core$IFn$_invoke$arity$0 ? fexpr__30803.cljs$core$IFn$_invoke$arity$0() : fexpr__30803.call(null));\n} else {\nreturn null;\n}\n});\nhyperfiddle.electric.impl.runtime.output_dirty = (function hyperfiddle$electric$impl$runtime$output_dirty(output){\nvar input = (output[hyperfiddle.electric.impl.runtime.output_slot_input]);\nvar dirty = (input[hyperfiddle.electric.impl.runtime.input_slot_dirty]);\n(output[hyperfiddle.electric.impl.runtime.output_slot_dirty] = dirty);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_dirty] = output);\n\nif((dirty == null)){\nif((input === (input[hyperfiddle.electric.impl.runtime.input_slot_check]))){\nvar frame_31058 = (input[hyperfiddle.electric.impl.runtime.input_slot_frame]);\nvar context_31059 = (frame_31058[hyperfiddle.electric.impl.runtime.frame_slot_context]);\nvar check_31061 = (context_31059[hyperfiddle.electric.impl.runtime.context_slot_check]);\n(context_31059[hyperfiddle.electric.impl.runtime.context_slot_check] = input);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_check] = check_31061);\n\nif(((context_31059[hyperfiddle.electric.impl.runtime.context_slot_event]) == null)){\n(context_31059[hyperfiddle.electric.impl.runtime.context_slot_event] = hyperfiddle.electric.impl.runtime.empty_event);\n\nvar fexpr__30804_31062 = (context_31059[hyperfiddle.electric.impl.runtime.context_slot_notifier]);\n(fexpr__30804_31062.cljs$core$IFn$_invoke$arity$0 ? fexpr__30804_31062.cljs$core$IFn$_invoke$arity$0() : fexpr__30804_31062.call(null));\n} else {\n}\n} else {\n}\n} else {\n}\n\nreturn hyperfiddle.electric.impl.runtime.input_ready(input);\n});\nhyperfiddle.electric.impl.runtime.output_spawn = (function hyperfiddle$electric$impl$runtime$output_spawn(input,output){\nif((output == null)){\n} else {\n(output[hyperfiddle.electric.impl.runtime.output_slot_input] = input);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_iterator] = (function (){var G__30806 = (function (){\nreturn hyperfiddle.electric.impl.runtime.output_dirty(output);\n});\nvar G__30807 = (function (){\n(output[hyperfiddle.electric.impl.runtime.output_slot_done] = true);\n\nreturn hyperfiddle.electric.impl.runtime.output_dirty(output);\n});\nvar fexpr__30805 = (output[hyperfiddle.electric.impl.runtime.output_slot_iterator]);\nreturn (fexpr__30805.cljs$core$IFn$_invoke$arity$2 ? fexpr__30805.cljs$core$IFn$_invoke$arity$2(G__30806,G__30807) : fexpr__30805.call(null,G__30806,G__30807));\n})());\n}\n\nreturn input;\n});\nhyperfiddle.electric.impl.runtime.make_output = (function hyperfiddle$electric$impl$runtime$make_output(id,_LT_x){\nvar output = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.output_slots);\n(output[hyperfiddle.electric.impl.runtime.output_slot_id] = id);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_done] = false);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_prev] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_next] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_dirty] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_current] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_iterator] = _LT_x);\n\nreturn output;\n});\nhyperfiddle.electric.impl.runtime.input_cancel = (function hyperfiddle$electric$impl$runtime$input_cancel(input){\nvar c = (input[hyperfiddle.electric.impl.runtime.input_slot_cancel]);\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = true);\n\nif((c == null)){\nvar fexpr__30816 = (input[hyperfiddle.electric.impl.runtime.input_slot_notifier]);\nreturn (fexpr__30816.cljs$core$IFn$_invoke$arity$0 ? fexpr__30816.cljs$core$IFn$_invoke$arity$0() : fexpr__30816.call(null));\n} else {\nreturn null;\n}\n});\nhyperfiddle.electric.impl.runtime.input_change = (function hyperfiddle$electric$impl$runtime$input_change(input,x){\n(input[hyperfiddle.electric.impl.runtime.input_slot_current] = x);\n\nreturn hyperfiddle.electric.impl.runtime.input_ready(input);\n});\nhyperfiddle.electric.impl.runtime.input_freeze = (function hyperfiddle$electric$impl$runtime$input_freeze(input){\n(input[hyperfiddle.electric.impl.runtime.input_slot_pending] = (-1));\n\nif(((input[hyperfiddle.electric.impl.runtime.input_slot_cancel]) == null)){\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = false);\n\nvar fexpr__30818 = (input[hyperfiddle.electric.impl.runtime.input_slot_terminator]);\nreturn (fexpr__30818.cljs$core$IFn$_invoke$arity$0 ? fexpr__30818.cljs$core$IFn$_invoke$arity$0() : fexpr__30818.call(null));\n} else {\nreturn null;\n}\n});\nhyperfiddle.electric.impl.runtime.update_event = (function hyperfiddle$electric$impl$runtime$update_event(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31066 = arguments.length;\nvar i__5770__auto___31067 = (0);\nwhile(true){\nif((i__5770__auto___31067 < len__5769__auto___31066)){\nargs__5775__auto__.push((arguments[i__5770__auto___31067]));\n\nvar G__31069 = (i__5770__auto___31067 + (1));\ni__5770__auto___31067 = G__31069;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic = (function (context,k,f,args){\nvar temp__5806__auto__ = (context[hyperfiddle.electric.impl.runtime.context_slot_event]);\nif((temp__5806__auto__ == null)){\n(context[hyperfiddle.electric.impl.runtime.context_slot_event] = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update,hyperfiddle.electric.impl.runtime.empty_event,k,f,args));\n\nvar fexpr__30826 = (context[hyperfiddle.electric.impl.runtime.context_slot_notifier]);\nreturn (fexpr__30826.cljs$core$IFn$_invoke$arity$0 ? fexpr__30826.cljs$core$IFn$_invoke$arity$0() : fexpr__30826.call(null));\n} else {\nvar event = temp__5806__auto__;\nreturn (context[hyperfiddle.electric.impl.runtime.context_slot_event] = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update,event,k,f,args));\n}\n}));\n\n(hyperfiddle.electric.impl.runtime.update_event.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.update_event.cljs$lang$applyTo = (function (seq30819){\nvar G__30820 = cljs.core.first(seq30819);\nvar seq30819__$1 = cljs.core.next(seq30819);\nvar G__30821 = cljs.core.first(seq30819__$1);\nvar seq30819__$2 = cljs.core.next(seq30819__$1);\nvar G__30822 = cljs.core.first(seq30819__$2);\nvar seq30819__$3 = cljs.core.next(seq30819__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30820,G__30821,G__30822,seq30819__$3);\n}));\n\nhyperfiddle.electric.impl.runtime.input_check = (function hyperfiddle$electric$impl$runtime$input_check(input){\nvar frame = (input[hyperfiddle.electric.impl.runtime.input_slot_frame]);\nvar context = (frame[hyperfiddle.electric.impl.runtime.frame_slot_context]);\nwhile(true){\nvar temp__5806__auto__ = (input[hyperfiddle.electric.impl.runtime.input_slot_dirty]);\nif((temp__5806__auto__ == null)){\nreturn null;\n} else {\nvar output = temp__5806__auto__;\nvar path = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(- (frame[hyperfiddle.electric.impl.runtime.frame_slot_id])),(output[hyperfiddle.electric.impl.runtime.output_slot_id])], null);\n(input[hyperfiddle.electric.impl.runtime.input_slot_dirty] = (output[hyperfiddle.electric.impl.runtime.output_slot_dirty]));\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_dirty] = output);\n\nif(cljs.core.truth_((output[hyperfiddle.electric.impl.runtime.output_slot_done]))){\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\"freeze\",\"freeze\",2043466309),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n} else {\nvar x_31080 = cljs.core.deref((output[hyperfiddle.electric.impl.runtime.output_slot_iterator]));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((output[hyperfiddle.electric.impl.runtime.output_slot_current]),(output[hyperfiddle.electric.impl.runtime.output_slot_current] = x_31080))){\n} else {\nvar buffer_31082 = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_buffer]);\nvar wpos_31083 = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos]);\nvar temp__5806__auto___31084__$1 = (output[hyperfiddle.electric.impl.runtime.output_slot_time]);\nif((temp__5806__auto___31084__$1 == null)){\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3(input,hyperfiddle.electric.impl.runtime.input_slot_pending,cljs.core.inc);\n} else {\nvar t_31085 = temp__5806__auto___31084__$1;\nvar p_31086 = (output[hyperfiddle.electric.impl.runtime.output_slot_prev]);\nvar n_31087 = (output[hyperfiddle.electric.impl.runtime.output_slot_next]);\n(buffer_31082[t_31085] = (((p_31086 === output))?null:(function (){\n(p_31086[hyperfiddle.electric.impl.runtime.output_slot_next] = n_31087);\n\nreturn (n_31087[hyperfiddle.electric.impl.runtime.output_slot_prev] = p_31086);\n})()\n));\n}\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_time] = wpos_31083);\n\nvar temp__5806__auto___31089__$1 = (buffer_31082[wpos_31083]);\nif((temp__5806__auto___31089__$1 == null)){\n(buffer_31082[wpos_31083] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_prev] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_next] = output);\n} else {\nvar p_31091 = temp__5806__auto___31089__$1;\nvar n_31092 = (p_31091[hyperfiddle.electric.impl.runtime.output_slot_next]);\n(p_31091[hyperfiddle.electric.impl.runtime.output_slot_next] = output);\n\n(n_31092[hyperfiddle.electric.impl.runtime.output_slot_prev] = output);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_prev] = p_31091);\n\n(output[hyperfiddle.electric.impl.runtime.output_slot_next] = n_31092);\n}\n\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\"change\",\"change\",-1163046502),cljs.core.assoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path,x_31080], 0));\n}\n}\n\ncontinue;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.input_transfer = (function hyperfiddle$electric$impl$runtime$input_transfer(input){\nhyperfiddle.electric.impl.runtime.input_check(input);\n\nif(cljs.core.truth_((input[hyperfiddle.electric.impl.runtime.input_slot_cancel]))){\nvar fexpr__30828_31094 = (input[hyperfiddle.electric.impl.runtime.input_slot_terminator]);\n(fexpr__30828_31094.cljs$core$IFn$_invoke$arity$0 ? fexpr__30828_31094.cljs$core$IFn$_invoke$arity$0() : fexpr__30828_31094.call(null));\n\nthrow (new missionary.Cancelled());\n} else {\nvar G__30829 = (input[hyperfiddle.electric.impl.runtime.input_slot_pending]);\nswitch (G__30829) {\ncase (-1):\nvar fexpr__30830_31096 = (input[hyperfiddle.electric.impl.runtime.input_slot_terminator]);\n(fexpr__30830_31096.cljs$core$IFn$_invoke$arity$0 ? fexpr__30830_31096.cljs$core$IFn$_invoke$arity$0() : fexpr__30830_31096.call(null));\n\nreturn (input[hyperfiddle.electric.impl.runtime.input_slot_current]);\n\nbreak;\ncase (0):\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = null);\n\nreturn (input[hyperfiddle.electric.impl.runtime.input_slot_current]);\n\nbreak;\ndefault:\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = null);\n\nreturn hyperfiddle.electric.impl.runtime.pending;\n\n}\n}\n});\nhyperfiddle.electric.impl.runtime.make_input = (function hyperfiddle$electric$impl$runtime$make_input(frame,deps){\nvar input = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.input_slots);\n(input[hyperfiddle.electric.impl.runtime.input_slot_frame] = frame);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_pending] = (0));\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_current] = hyperfiddle.electric.impl.runtime.pending);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_cancel] = false);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_check] = input);\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.output_spawn,input,deps);\n});\nhyperfiddle.electric.impl.runtime.input_spawn = (function hyperfiddle$electric$impl$runtime$input_spawn(frame,slot,deps){\nreturn missionary.core.signal_BANG_((function (n,t){\nvar input = hyperfiddle.electric.impl.runtime.make_input(frame,deps);\n(input[hyperfiddle.electric.impl.runtime.input_slot_notifier] = n);\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_terminator] = t);\n\n((frame[hyperfiddle.electric.impl.runtime.frame_slot_inputs])[(slot | (0))] = input);\n\n(n.cljs$core$IFn$_invoke$arity$0 ? n.cljs$core$IFn$_invoke$arity$0() : n.call(null));\n\nreturn hyperfiddle.electric.impl.runtime.__GT_It(input,hyperfiddle.electric.impl.runtime.input_cancel,hyperfiddle.electric.impl.runtime.input_transfer);\n}));\n});\nhyperfiddle.electric.impl.runtime.check_unbound_var = (function hyperfiddle$electric$impl$runtime$check_unbound_var(debug_info,_LT_x){\nreturn missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic((function (x){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"unbound\",\"hyperfiddle.electric.impl.runtime/unbound\",63043117),x)){\nreturn (new hyperfiddle.electric.Failure(hyperfiddle.electric.impl.runtime.error([\"Unbound var `\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"name\",\"hyperfiddle.electric.debug/name\",-35961215).cljs$core$IFn$_invoke$arity$1(debug_info)),\"`\"].join(''))));\n} else {\nreturn x;\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_LT_x], 0));\n});\nhyperfiddle.electric.impl.runtime.static$ = (function hyperfiddle$electric$impl$runtime$static(frame,slot){\nreturn ((frame[hyperfiddle.electric.impl.runtime.frame_slot_static])[(slot | (0))]);\n});\nhyperfiddle.electric.impl.runtime.dynamic = (function hyperfiddle$electric$impl$runtime$dynamic(frame,slot,debug_info){\nreturn hyperfiddle.electric.impl.runtime.check_unbound_var(debug_info,((frame[hyperfiddle.electric.impl.runtime.frame_slot_dynamic])[(slot | (0))]));\n});\n/**\n * A snapshot of the tree below given frame, as nested vectors. Frame vectors start with their id.\n */\nhyperfiddle.electric.impl.runtime.tree = (function hyperfiddle$electric$impl$runtime$tree(f){\nvar tiers = (f[hyperfiddle.electric.impl.runtime.frame_slot_tiers]);\nvar v = cljs.core.PersistentVector.EMPTY;\nvar i = ((0) | (0));\nwhile(true){\nif((i === tiers.length)){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\"id\",\"id\",-1388402092),(f[hyperfiddle.electric.impl.runtime.frame_slot_id]),new cljs.core.Keyword(null,\"inputs\",\"inputs\",865803858),(f[hyperfiddle.electric.impl.runtime.frame_slot_inputs]).length,new cljs.core.Keyword(null,\"targets\",\"targets\",2014963406),(f[hyperfiddle.electric.impl.runtime.frame_slot_targets]).length,new cljs.core.Keyword(null,\"sources\",\"sources\",-321166424),(f[hyperfiddle.electric.impl.runtime.frame_slot_sources]).length,new cljs.core.Keyword(null,\"tiers\",\"tiers\",-46242789),v], null);\n} else {\nvar G__31101 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v,(function (){var tier = (tiers[i]);\nvar buf = (tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer]);\nvar v__$1 = cljs.core.PersistentVector.EMPTY;\nvar i__$1 = ((0) | (0));\nwhile(true){\nif((i__$1 === (tier[hyperfiddle.electric.impl.runtime.tier_slot_size]))){\nreturn v__$1;\n} else {\nvar G__31104 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(v__$1,(function (){var G__30834 = (buf[i__$1]);\nreturn (hyperfiddle.electric.impl.runtime.tree.cljs$core$IFn$_invoke$arity$1 ? hyperfiddle.electric.impl.runtime.tree.cljs$core$IFn$_invoke$arity$1(G__30834) : hyperfiddle.electric.impl.runtime.tree.call(null,G__30834));\n})());\nvar G__31105 = (i__$1 + (1));\nv__$1 = G__31104;\ni__$1 = G__31105;\ncontinue;\n}\nbreak;\n}\n})());\nvar G__31102 = (i + (1));\nv = G__31101;\ni = G__31102;\ncontinue;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.find_scope = (function hyperfiddle$electric$impl$runtime$find_scope(f){\nvar f__$1 = f;\nvar s = cljs.core.PersistentHashSet.EMPTY;\nwhile(true){\nvar temp__5806__auto__ = (f__$1[hyperfiddle.electric.impl.runtime.frame_slot_parent]);\nif((temp__5806__auto__ == null)){\nreturn s;\n} else {\nvar tier = temp__5806__auto__;\nvar G__31106 = (tier[hyperfiddle.electric.impl.runtime.tier_slot_parent]);\nvar G__31107 = cljs.core.into.cljs$core$IFn$_invoke$arity$2(s,cljs.core.keys((tier[hyperfiddle.electric.impl.runtime.tier_slot_hooks])));\nf__$1 = G__31106;\ns = G__31107;\ncontinue;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.frame_walk_tiers = (function hyperfiddle$electric$impl$runtime$frame_walk_tiers(frame,step,k,cb,start){\nvar tiers = (frame[hyperfiddle.electric.impl.runtime.frame_slot_tiers]);\nvar size = tiers.length;\nvar back = (((1) - step) >> (1));\nvar back_inc_size = (back * (size + (1)));\nvar stop = (size - back_inc_size);\nvar i = (((start == null))?(back_inc_size - (1)):start);\nwhile(true){\nvar i__$1 = (i + step);\nif((i__$1 === stop)){\nreturn null;\n} else {\nvar temp__5806__auto__ = (function (){var tier = (tiers[i__$1]);\nvar temp__5806__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2((tier[hyperfiddle.electric.impl.runtime.tier_slot_hooks]),k);\nif((temp__5806__auto__ == null)){\nreturn (hyperfiddle.electric.impl.runtime.tier_walk_frames.cljs$core$IFn$_invoke$arity$5 ? hyperfiddle.electric.impl.runtime.tier_walk_frames.cljs$core$IFn$_invoke$arity$5(tier,step,k,cb,null) : hyperfiddle.electric.impl.runtime.tier_walk_frames.call(null,tier,step,k,cb,null));\n} else {\nvar v = temp__5806__auto__;\nreturn (cb.cljs$core$IFn$_invoke$arity$1 ? cb.cljs$core$IFn$_invoke$arity$1(v) : cb.call(null,v));\n}\n})();\nif((temp__5806__auto__ == null)){\nvar G__31115 = i__$1;\ni = G__31115;\ncontinue;\n} else {\nvar x = temp__5806__auto__;\nreturn x;\n}\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.tier_walk_frames = (function hyperfiddle$electric$impl$runtime$tier_walk_frames(tier,step,k,cb,start){\nvar buf = (tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer]);\nvar size = (tier[hyperfiddle.electric.impl.runtime.tier_slot_size]);\nvar back = (((1) - step) >> (1));\nvar back_inc_size = (back * (size + (1)));\nvar stop = (size - back_inc_size);\nvar i = (((start == null))?(back_inc_size - (1)):start);\nwhile(true){\nvar i__$1 = (i + step);\nif((i__$1 === stop)){\nreturn null;\n} else {\nvar temp__5806__auto__ = hyperfiddle.electric.impl.runtime.frame_walk_tiers((buf[i__$1]),step,k,cb,null);\nif((temp__5806__auto__ == null)){\nvar G__31117 = i__$1;\ni = G__31117;\ncontinue;\n} else {\nvar x = temp__5806__auto__;\nreturn x;\n}\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.notify_rotate = (function hyperfiddle$electric$impl$runtime$notify_rotate(f,k){\nvar anchor = (function (){var f__$1 = f;\nwhile(true){\nvar tier = (f__$1[hyperfiddle.electric.impl.runtime.frame_slot_parent]);\nif(cljs.core.contains_QMARK_((tier[hyperfiddle.electric.impl.runtime.tier_slot_hooks]),k)){\nreturn null;\n} else {\nvar temp__5806__auto__ = hyperfiddle.electric.impl.runtime.tier_walk_frames(tier,(1),k,cljs.core.identity,(f__$1[hyperfiddle.electric.impl.runtime.frame_slot_position]));\nif((temp__5806__auto__ == null)){\nvar G__31118 = (tier[hyperfiddle.electric.impl.runtime.tier_slot_parent]);\nf__$1 = G__31118;\ncontinue;\n} else {\nvar a = temp__5806__auto__;\nreturn a;\n}\n}\nbreak;\n}\n})();\nhyperfiddle.electric.impl.runtime.frame_walk_tiers(f,(1),k,(function (target){\nreturn (k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(target,anchor) : k.call(null,target,anchor));\n}),null);\n\nreturn f;\n});\nhyperfiddle.electric.impl.runtime.array_call = (function hyperfiddle$electric$impl$runtime$array_call(arr){\nvar n__5636__auto__ = arr.length;\nvar i = (0);\nwhile(true){\nif((i < n__5636__auto__)){\nvar fexpr__30839_31122 = (arr[i]);\n(fexpr__30839_31122.cljs$core$IFn$_invoke$arity$0 ? fexpr__30839_31122.cljs$core$IFn$_invoke$arity$0() : fexpr__30839_31122.call(null));\n\nvar G__31124 = (i + (1));\ni = G__31124;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.frame_dispose = (function hyperfiddle$electric$impl$runtime$frame_dispose(f){\n(f[hyperfiddle.electric.impl.runtime.frame_slot_position] = null);\n\nhyperfiddle.electric.impl.runtime.array_call((f[hyperfiddle.electric.impl.runtime.frame_slot_static]));\n\nhyperfiddle.electric.impl.runtime.array_call((f[hyperfiddle.electric.impl.runtime.frame_slot_dynamic]));\n\nhyperfiddle.electric.impl.runtime.array_call((f[hyperfiddle.electric.impl.runtime.frame_slot_foreign]));\n\nhyperfiddle.electric.impl.runtime.array_call((f[hyperfiddle.electric.impl.runtime.frame_slot_variables]));\n\nreturn hyperfiddle.electric.impl.runtime.array_call((f[hyperfiddle.electric.impl.runtime.frame_slot_constants]));\n});\nhyperfiddle.electric.impl.runtime.frame_rotate = (function hyperfiddle$electric$impl$runtime$frame_rotate(f,to){\nvar from = (f[hyperfiddle.electric.impl.runtime.frame_slot_position]);\nvar step = cljs.core.compare(to,from);\nvar tier = (f[hyperfiddle.electric.impl.runtime.frame_slot_parent]);\nvar buf = (tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer]);\nif((to === from)){\nvar size = ((tier[hyperfiddle.electric.impl.runtime.tier_slot_size]) - (1));\nvar i_31125 = to;\nwhile(true){\nif((i_31125 === size)){\n} else {\nvar j_31128 = (i_31125 + (1));\nvar y_31129 = (buf[(j_31128 | (0))]);\n(y_31129[hyperfiddle.electric.impl.runtime.frame_slot_position] = i_31125);\n\n(buf[(i_31125 | (0))] = y_31129);\n\nvar G__31136 = j_31128;\ni_31125 = G__31136;\ncontinue;\n}\nbreak;\n}\n\n(tier[hyperfiddle.electric.impl.runtime.tier_slot_size] = size);\n\n(buf[(size | (0))] = null);\n\nreturn hyperfiddle.electric.impl.runtime.frame_dispose(f);\n} else {\nvar i_31137 = from;\nwhile(true){\nvar j_31140 = (i_31137 + step);\nvar y_31141 = (buf[(j_31140 | (0))]);\n(y_31141[hyperfiddle.electric.impl.runtime.frame_slot_position] = i_31137);\n\n(buf[(i_31137 | (0))] = y_31141);\n\nif((to === j_31140)){\n} else {\nvar G__31142 = j_31140;\ni_31137 = G__31142;\ncontinue;\n}\nbreak;\n}\n\n(f[hyperfiddle.electric.impl.runtime.frame_slot_position] = to);\n\n(buf[(to | (0))] = f);\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.notify_rotate,f,hyperfiddle.electric.impl.runtime.find_scope(f));\n}\n});\n/**\n * Move a frame. If origin position is equal to target position, frame is removed. Will search and call `hook`.\n */\nhyperfiddle.electric.impl.runtime.move = (function hyperfiddle$electric$impl$runtime$move(tier,from,to){\nvar f = ((tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer])[(from | (0))]);\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic((f[hyperfiddle.electric.impl.runtime.frame_slot_context]),new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"rotate\",\"rotate\",152705015),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),(- (f[hyperfiddle.electric.impl.runtime.frame_slot_id])),new cljs.core.Keyword(null,\"position\",\"position\",-2011731912),to], null)], 0));\n\nreturn hyperfiddle.electric.impl.runtime.frame_rotate(f,to);\n});\nhyperfiddle.electric.impl.runtime.frame_cancel = (function hyperfiddle$electric$impl$runtime$frame_cancel(f){\nvar temp__5808__auto__ = (f[hyperfiddle.electric.impl.runtime.frame_slot_position]);\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar pos = temp__5808__auto__;\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic((f[hyperfiddle.electric.impl.runtime.frame_slot_context]),new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"rotate\",\"rotate\",152705015),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),(- (f[hyperfiddle.electric.impl.runtime.frame_slot_id])),new cljs.core.Keyword(null,\"position\",\"position\",-2011731912),pos], null)], 0));\n\nreturn hyperfiddle.electric.impl.runtime.frame_rotate(f,pos);\n}\n});\nhyperfiddle.electric.impl.runtime.acopy = (function hyperfiddle$electric$impl$runtime$acopy(src,src_off,dest,dest_off,size){\nvar n__5636__auto___31148 = size;\nvar i_31149 = (0);\nwhile(true){\nif((i_31149 < n__5636__auto___31148)){\n(dest[(dest_off + i_31149)] = (src[(src_off + i_31149)]));\n\nvar G__31150 = (i_31149 + (1));\ni_31149 = G__31150;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn dest;\n});\nhyperfiddle.electric.impl.runtime.constructor$ = (function hyperfiddle$electric$impl$runtime$constructor(static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,boot){\nreturn (function (tier,id){\nvar par = (tier[hyperfiddle.electric.impl.runtime.tier_slot_parent]);\nvar buf = (tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer]);\nvar pos = (tier[hyperfiddle.electric.impl.runtime.tier_slot_size]);\nvar cap = buf.length;\nvar buf__$1 = (((pos < cap))?buf:(tier[hyperfiddle.electric.impl.runtime.tier_slot_buffer] = hyperfiddle.electric.impl.runtime.acopy(buf,(0),cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((cap << (1))),(0),cap)));\n(tier[hyperfiddle.electric.impl.runtime.tier_slot_size] = (pos + (1)));\n\nreturn hyperfiddle.electric.impl.runtime.make_frame((par[hyperfiddle.electric.impl.runtime.frame_slot_context]),tier,id,pos,(tier[hyperfiddle.electric.impl.runtime.tier_slot_foreigns]),static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,buf__$1,(tier[hyperfiddle.electric.impl.runtime.tier_slot_vars]),boot);\n});\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IDeref}\n*/\nhyperfiddle.electric.impl.runtime.FrameIterator = (function (f,it){\nthis.f = f;\nthis.it = it;\nthis.cljs$lang$protocol_mask$partition0$ = 32769;\nthis.cljs$lang$protocol_mask$partition1$ = 0;\n});\n(hyperfiddle.electric.impl.runtime.FrameIterator.prototype.call = (function (unused__14959__auto__){\nvar self__ = this;\nvar self__ = this;\nvar G__30841 = (arguments.length - (1));\nswitch (G__30841) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join('')));\n\n}\n}));\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.prototype.apply = (function (self__,args30840){\nvar self__ = this;\nvar self____$1 = this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30840)));\n}));\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){\nvar self__ = this;\nvar _ = this;\nreturn hyperfiddle.electric.impl.runtime.frame_cancel(self__.f);\n}));\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){\nvar self__ = this;\nvar ___$1 = this;\nreturn cljs.core.deref(self__.it);\n}));\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.getBasis = (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"f\",\"f\",43394975,null),new cljs.core.Symbol(null,\"it\",\"it\",-1630841225,null)], null);\n}));\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.cljs$lang$type = true);\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.cljs$lang$ctorStr = \"hyperfiddle.electric.impl.runtime/FrameIterator\");\n\n(hyperfiddle.electric.impl.runtime.FrameIterator.cljs$lang$ctorPrWriter = (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\"hyperfiddle.electric.impl.runtime/FrameIterator\");\n}));\n\n/**\n * Positional factory function for hyperfiddle.electric.impl.runtime/FrameIterator.\n */\nhyperfiddle.electric.impl.runtime.__GT_FrameIterator = (function hyperfiddle$electric$impl$runtime$__GT_FrameIterator(f,it){\nreturn (new hyperfiddle.electric.impl.runtime.FrameIterator(f,it));\n});\n\nhyperfiddle.electric.impl.runtime.constant = (function hyperfiddle$electric$impl$runtime$constant(frame,slot,ctor){\nvar consts = (frame[hyperfiddle.electric.impl.runtime.frame_slot_constants]);\nvar context = (frame[hyperfiddle.electric.impl.runtime.frame_slot_context]);\nreturn (consts[slot] = hyperfiddle.electric.impl.runtime.signal(missionary.core.watch(cljs.core.atom.cljs$core$IFn$_invoke$arity$1((function (n,t){\nvar temp__5806__auto__ = cljs.core.deref(hyperfiddle.electric.impl.runtime.this$);\nif((temp__5806__auto__ == null)){\nreturn hyperfiddle.electric.impl.failer.run(hyperfiddle.electric.impl.runtime.error(\"Unable to build frame - not an object.\"),n,t);\n} else {\nvar tier = temp__5806__auto__;\nvar parent = (tier[hyperfiddle.electric.impl.runtime.tier_slot_parent]);\nvar id = hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3(context,hyperfiddle.electric.impl.runtime.context_slot_local_id,cljs.core.inc);\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"create\",\"create\",-1301499256),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(- (frame[hyperfiddle.electric.impl.runtime.frame_slot_id])),slot], null),new cljs.core.Keyword(null,\"source\",\"source\",-433931539),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(- (parent[hyperfiddle.electric.impl.runtime.frame_slot_id])),(tier[hyperfiddle.electric.impl.runtime.tier_slot_remote])], null)], null)], 0));\n\nvar _LT_x = (ctor.cljs$core$IFn$_invoke$arity$2 ? ctor.cljs$core$IFn$_invoke$arity$2(tier,id) : ctor.call(null,tier,id));\nvar f = cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),id);\nreturn hyperfiddle.electric.impl.runtime.__GT_FrameIterator(f,(function (){var G__30842 = n;\nvar G__30843 = (function (){\nhyperfiddle.electric.impl.runtime.frame_cancel(f);\n\nhyperfiddle.electric.impl.runtime.update_event.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),new cljs.core.Keyword(null,\"remove\",\"remove\",-131428414),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588),(- id)], null)], 0));\n\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$4(context,hyperfiddle.electric.impl.runtime.context_slot_frame_store,cljs.core.dissoc_BANG_,(f[hyperfiddle.electric.impl.runtime.frame_slot_id]));\n\nreturn (t.cljs$core$IFn$_invoke$arity$0 ? t.cljs$core$IFn$_invoke$arity$0() : t.call(null));\n});\nreturn (_LT_x.cljs$core$IFn$_invoke$arity$2 ? _LT_x.cljs$core$IFn$_invoke$arity$2(G__30842,G__30843) : _LT_x.call(null,G__30842,G__30843));\n})());\n}\n})))));\n});\nhyperfiddle.electric.impl.runtime.inject = (function hyperfiddle$electric$impl$runtime$inject(v){\nreturn (function (_LT_x,_LT_y){\nreturn (function (n,t){\nvar temp__5806__auto__ = cljs.core.deref(hyperfiddle.electric.impl.runtime.this$);\nif((temp__5806__auto__ == null)){\nreturn hyperfiddle.electric.impl.failer.run(hyperfiddle.electric.impl.runtime.error(\"Unable to inject - not an object.\"),n,t);\n} else {\nvar tier = temp__5806__auto__;\nvar foreigns = (tier[hyperfiddle.electric.impl.runtime.tier_slot_foreigns]);\n(tier[hyperfiddle.electric.impl.runtime.tier_slot_foreigns] = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(foreigns,v,_LT_y));\n\ntry{return (_LT_x.cljs$core$IFn$_invoke$arity$2 ? _LT_x.cljs$core$IFn$_invoke$arity$2(n,t) : _LT_x.call(null,n,t));\n}finally {(tier[hyperfiddle.electric.impl.runtime.tier_slot_foreigns] = foreigns);\n}}\n});\n});\n});\nhyperfiddle.electric.impl.runtime.bind = (function hyperfiddle$electric$impl$runtime$bind(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31173 = arguments.length;\nvar i__5770__auto___31174 = (0);\nwhile(true){\nif((i__5770__auto___31174 < len__5769__auto___31173)){\nargs__5775__auto__.push((arguments[i__5770__auto___31174]));\n\nvar G__31175 = (i__5770__auto___31174 + (1));\ni__5770__auto___31174 = G__31175;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((1) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.bind.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.bind.cljs$core$IFn$_invoke$arity$variadic = (function (f,args){\nreturn (function (n,t){\nvar temp__5806__auto__ = cljs.core.deref(hyperfiddle.electric.impl.runtime.this$);\nif((temp__5806__auto__ == null)){\nreturn hyperfiddle.electric.impl.failer.run(hyperfiddle.electric.impl.runtime.error(\"Unable to bind - not an object.\"),n,t);\n} else {\nvar tier = temp__5806__auto__;\ntry{var fexpr__30847 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,tier,args);\nreturn (fexpr__30847.cljs$core$IFn$_invoke$arity$2 ? fexpr__30847.cljs$core$IFn$_invoke$arity$2(n,t) : fexpr__30847.call(null,n,t));\n}catch (e30846){var e = e30846;\nreturn hyperfiddle.electric.impl.failer.run(e,n,t);\n}}\n});\n}));\n\n(hyperfiddle.electric.impl.runtime.bind.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.bind.cljs$lang$applyTo = (function (seq30844){\nvar G__30845 = cljs.core.first(seq30844);\nvar seq30844__$1 = cljs.core.next(seq30844);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30845,seq30844__$1);\n}));\n\nhyperfiddle.electric.impl.runtime.with$ = (function hyperfiddle$electric$impl$runtime$with(tier,_LT_x){\nreturn (function (n,t){\nvar prev = cljs.core.deref(hyperfiddle.electric.impl.runtime.this$);\ncljs.core.vreset_BANG_(hyperfiddle.electric.impl.runtime.this$,tier);\n\ntry{return (_LT_x.cljs$core$IFn$_invoke$arity$2 ? _LT_x.cljs$core$IFn$_invoke$arity$2(n,t) : _LT_x.call(null,n,t));\n}finally {cljs.core.vreset_BANG_(hyperfiddle.electric.impl.runtime.this$,prev);\n}});\n});\nhyperfiddle.electric.impl.runtime.clause = (function hyperfiddle$electric$impl$runtime$clause(var_args){\nvar G__30849 = arguments.length;\nswitch (G__30849) {\ncase 1:\nreturn hyperfiddle.electric.impl.runtime.clause.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn hyperfiddle.electric.impl.runtime.clause.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.impl.runtime.clause.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn (function (e){\nvar G__30850 = hyperfiddle.electric.impl.runtime.pure(e);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30850) : f.call(null,G__30850));\n});\n}));\n\n(hyperfiddle.electric.impl.runtime.clause.cljs$core$IFn$_invoke$arity$2 = (function (f,c){\nreturn (function (e){\nif((hyperfiddle.electric.debug.unwrap(e) instanceof c)){\nvar G__30851 = hyperfiddle.electric.impl.runtime.pure(e);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30851) : f.call(null,G__30851));\n} else {\nreturn null;\n}\n});\n}));\n\n(hyperfiddle.electric.impl.runtime.clause.cljs$lang$maxFixedArity = 2);\n\nhyperfiddle.electric.impl.runtime.recover = (function hyperfiddle$electric$impl$runtime$recover(tier,catch$,_LT_x){\nreturn hyperfiddle.electric.impl.yield2.yield$((function (x){\nif((x instanceof hyperfiddle.electric.Failure)){\nvar temp__5808__auto__ = (function (){var G__30852 = x.error;\nreturn (catch$.cljs$core$IFn$_invoke$arity$1 ? catch$.cljs$core$IFn$_invoke$arity$1(G__30852) : catch$.call(null,G__30852));\n})();\nif((temp__5808__auto__ == null)){\nreturn null;\n} else {\nvar _LT_c = temp__5808__auto__;\nreturn hyperfiddle.electric.impl.runtime.with$(tier,_LT_c);\n}\n} else {\nreturn null;\n}\n}),_LT_x);\n});\nhyperfiddle.electric.impl.runtime.variable = (function hyperfiddle$electric$impl$runtime$variable(frame,vars,position,slot,_LT__LT_x){\nvar tier = ((frame[hyperfiddle.electric.impl.runtime.frame_slot_tiers])[(position | (0))]);\n(tier[hyperfiddle.electric.impl.runtime.tier_slot_remote] = slot);\n\n(tier[hyperfiddle.electric.impl.runtime.tier_slot_vars] = cljs.core.aclone(vars));\n\nreturn ((frame[hyperfiddle.electric.impl.runtime.frame_slot_variables])[(slot | (0))] = missionary.core.signal_BANG_(missionary.core.cp_STAR_((function (){var cr30853_block_2 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_2(cr30853_state){\ntry{var cr30853_place_3 = missionary.core.unpark();\nvar cr30853_place_4 = hyperfiddle.electric.impl.runtime.failure;\nvar cr30853_place_5 = cr30853_place_3;\nvar cr30853_place_6 = cr30853_place_4(cr30853_place_5);\nvar cr30853_place_7 = null;\nif(cljs.core.truth_(cr30853_place_6)){\n(cr30853_state[(0)] = cr30853_block_5);\n\n(cr30853_state[(4)] = cr30853_place_3);\n\n(cr30853_state[(3)] = cr30853_place_7);\n\nreturn cr30853_state;\n} else {\n(cr30853_state[(0)] = cr30853_block_3);\n\n(cr30853_state[(4)] = cr30853_place_3);\n\n(cr30853_state[(3)] = cr30853_place_7);\n\nreturn cr30853_state;\n}\n}catch (e30867){var cr30853_exception = e30867;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_0 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_0(cr30853_state){\ntry{var cr30853_place_0 = null;\nvar cr30853_place_1 = false;\n(cr30853_state[(0)] = cr30853_block_1);\n\n(cr30853_state[(2)] = cr30853_place_0);\n\n(cr30853_state[(1)] = cr30853_place_1);\n\nreturn cr30853_state;\n}catch (e30868){var cr30853_exception = e30868;\n(cr30853_state[(0)] = null);\n\nthrow cr30853_exception;\n}});\nvar cr30853_block_5 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_5(cr30853_state){\ntry{var cr30853_place_3 = (cr30853_state[(4)]);\nvar cr30853_place_13 = cr30853_place_3;\n(cr30853_state[(0)] = cr30853_block_6);\n\n(cr30853_state[(4)] = null);\n\n(cr30853_state[(3)] = cr30853_place_13);\n\nreturn cr30853_state;\n}catch (e30869){var cr30853_exception = e30869;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(3)] = null);\n\n(cr30853_state[(4)] = null);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_7 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_7(cr30853_state){\ntry{var cr30853_place_0 = (cr30853_state[(2)]);\nvar cr30853_place_14 = cr30853_place_0;\nvar cr30853_place_15 = cr30853_place_14;\nvar cr30853_place_16 = (new hyperfiddle.electric.Failure(cr30853_place_15));\n(cr30853_state[(0)] = cr30853_block_8);\n\n(cr30853_state[(2)] = cr30853_place_16);\n\nreturn cr30853_state;\n}catch (e30870){var cr30853_exception = e30870;\n(cr30853_state[(0)] = cr30853_block_8);\n\n(cr30853_state[(1)] = true);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_1 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_1(cr30853_state){\ntry{var cr30853_place_2 = _LT__LT_x;\n(cr30853_state[(0)] = cr30853_block_2);\n\nreturn missionary.core.switch$(cr30853_place_2);\n}catch (e30871){var cr30853_exception = e30871;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_4 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_4(cr30853_state){\ntry{var cr30853_place_12 = missionary.core.unpark();\n(cr30853_state[(0)] = cr30853_block_6);\n\n(cr30853_state[(3)] = cr30853_place_12);\n\nreturn cr30853_state;\n}catch (e30872){var cr30853_exception = e30872;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(3)] = null);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_3 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_3(cr30853_state){\ntry{var cr30853_place_3 = (cr30853_state[(4)]);\nvar cr30853_place_8 = hyperfiddle.electric.impl.runtime.with$;\nvar cr30853_place_9 = tier;\nvar cr30853_place_10 = cr30853_place_3;\nvar cr30853_place_11 = (function (){var G__30875 = cr30853_place_9;\nvar G__30876 = cr30853_place_10;\nvar fexpr__30874 = cr30853_place_8;\nreturn (fexpr__30874.cljs$core$IFn$_invoke$arity$2 ? fexpr__30874.cljs$core$IFn$_invoke$arity$2(G__30875,G__30876) : fexpr__30874.call(null,G__30875,G__30876));\n})();\n(cr30853_state[(0)] = cr30853_block_4);\n\n(cr30853_state[(4)] = null);\n\nreturn missionary.core.switch$(cr30853_place_11);\n}catch (e30873){var cr30853_exception = e30873;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(3)] = null);\n\n(cr30853_state[(4)] = null);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nvar cr30853_block_8 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_8(cr30853_state){\ntry{var cr30853_place_1 = (cr30853_state[(1)]);\nvar cr30853_place_0 = (cr30853_state[(2)]);\nvar cr30853_place_17 = (cljs.core.truth_(cr30853_place_1)?(function(){throw cr30853_place_0})():cr30853_place_0);\n(cr30853_state[(0)] = null);\n\n(cr30853_state[(1)] = null);\n\n(cr30853_state[(2)] = null);\n\nreturn cr30853_place_17;\n}catch (e30877){var cr30853_exception = e30877;\n(cr30853_state[(0)] = null);\n\n(cr30853_state[(1)] = null);\n\n(cr30853_state[(2)] = null);\n\nthrow cr30853_exception;\n}});\nvar cr30853_block_6 = (function hyperfiddle$electric$impl$runtime$variable_$_cr30853_block_6(cr30853_state){\ntry{var cr30853_place_7 = (cr30853_state[(3)]);\n(cr30853_state[(0)] = cr30853_block_8);\n\n(cr30853_state[(3)] = null);\n\n(cr30853_state[(2)] = cr30853_place_7);\n\nreturn cr30853_state;\n}catch (e30878){var cr30853_exception = e30878;\n(cr30853_state[(0)] = cr30853_block_7);\n\n(cr30853_state[(3)] = null);\n\n(cr30853_state[(2)] = cr30853_exception);\n\nreturn cr30853_state;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__30879 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((5));\n(G__30879[(0)] = cr30853_block_0);\n\nreturn G__30879;\n})());\n})())));\n});\nhyperfiddle.electric.impl.runtime.source = (function hyperfiddle$electric$impl$runtime$source(frame,vars,position,slot){\n((frame[hyperfiddle.electric.impl.runtime.frame_slot_sources])[(slot | (0))] = (function (){var G__30880 = ((frame[hyperfiddle.electric.impl.runtime.frame_slot_tiers])[(position | (0))]);\n(G__30880[hyperfiddle.electric.impl.runtime.tier_slot_vars] = cljs.core.aclone(vars));\n\nreturn G__30880;\n})());\n\nreturn null;\n});\nhyperfiddle.electric.impl.runtime.target = (function hyperfiddle$electric$impl$runtime$target(frame,slot,ctor){\n((frame[hyperfiddle.electric.impl.runtime.frame_slot_targets])[(slot | (0))] = ctor);\n\nreturn null;\n});\nhyperfiddle.electric.impl.runtime.hook = (function hyperfiddle$electric$impl$runtime$hook(k,v,_LT_x){\nif((!((v == null)))){\n} else {\nthrow (new Error([\"Assert failed: \",\"hook value must be non-nil.\",\"\\n\",\"(some? v)\"].join('')));\n}\n\nreturn (function (n,t){\nvar temp__5806__auto__ = cljs.core.deref(hyperfiddle.electric.impl.runtime.this$);\nif((temp__5806__auto__ == null)){\nreturn hyperfiddle.electric.impl.failer.run(hyperfiddle.electric.impl.runtime.error(\"Unable to hook - not an object.\"),n,t);\n} else {\nvar tier = temp__5806__auto__;\nvar tier_31191__$1 = tier;\nwhile(true){\nvar f_31192 = (tier_31191__$1[hyperfiddle.electric.impl.runtime.tier_slot_parent]);\nvar temp__5806__auto___31193__$1 = hyperfiddle.electric.impl.runtime.frame_walk_tiers(f_31192,(1),k,cljs.core.identity,(tier_31191__$1[hyperfiddle.electric.impl.runtime.tier_slot_position]));\nif((temp__5806__auto___31193__$1 == null)){\nvar temp__5808__auto___31197 = (f_31192[hyperfiddle.electric.impl.runtime.frame_slot_parent]);\nif((temp__5808__auto___31197 == null)){\n} else {\nvar tier_31198__$2 = temp__5808__auto___31197;\nvar temp__5806__auto___31199__$2 = hyperfiddle.electric.impl.runtime.tier_walk_frames(tier_31198__$2,(1),k,cljs.core.identity,(f_31192[hyperfiddle.electric.impl.runtime.frame_slot_position]));\nif((temp__5806__auto___31199__$2 == null)){\nif(cljs.core.contains_QMARK_((tier_31198__$2[hyperfiddle.electric.impl.runtime.tier_slot_hooks]),k)){\n(k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(v,null) : k.call(null,v,null));\n} else {\nvar G__31204 = tier_31198__$2;\ntier_31191__$1 = G__31204;\ncontinue;\n}\n} else {\nvar a_31205 = temp__5806__auto___31199__$2;\n(k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(v,a_31205) : k.call(null,v,a_31205));\n}\n}\n} else {\nvar a_31206 = temp__5806__auto___31193__$1;\n(k.cljs$core$IFn$_invoke$arity$2 ? k.cljs$core$IFn$_invoke$arity$2(v,a_31206) : k.call(null,v,a_31206));\n}\nbreak;\n}\n\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$5(tier,hyperfiddle.electric.impl.runtime.tier_slot_hooks,cljs.core.assoc,k,v);\n\nvar G__30881 = n;\nvar G__30882 = (function (){\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$4(tier,hyperfiddle.electric.impl.runtime.tier_slot_hooks,cljs.core.dissoc,k);\n\n(k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(v) : k.call(null,v));\n\nreturn (t.cljs$core$IFn$_invoke$arity$0 ? t.cljs$core$IFn$_invoke$arity$0() : t.call(null));\n});\nreturn (_LT_x.cljs$core$IFn$_invoke$arity$2 ? _LT_x.cljs$core$IFn$_invoke$arity$2(G__30881,G__30882) : _LT_x.call(null,G__30881,G__30882));\n}\n});\n});\nhyperfiddle.electric.impl.runtime.unbound = hyperfiddle.electric.impl.runtime.pure(new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"unbound\",\"hyperfiddle.electric.impl.runtime/unbound\",63043117));\nhyperfiddle.electric.impl.runtime.subject_at = (function hyperfiddle$electric$impl$runtime$subject_at(arr,slot){\nreturn (function (_BANG_){\n(arr[slot] = _BANG_);\n\nreturn (function (){\nreturn (arr[slot] = null);\n});\n});\n});\nhyperfiddle.electric.impl.runtime.context_ack = (function hyperfiddle$electric$impl$runtime$context_ack(context){\nvar rpos = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_rpos]);\nvar buffer = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_buffer]);\nvar output = (buffer[rpos]);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rpos,(context[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos]))){\nthrow hyperfiddle.electric.impl.runtime.error(\"Unexpected ack.\");\n} else {\n}\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_pending_rpos] = ((rpos + (1)) & (buffer.length - (1))));\n\n(buffer[rpos] = null);\n\nvar output__$1 = output;\nwhile(true){\nif((output__$1 == null)){\nreturn null;\n} else {\n((output__$1[hyperfiddle.electric.impl.runtime.output_slot_prev])[hyperfiddle.electric.impl.runtime.output_slot_next] = null);\n\n(output__$1[hyperfiddle.electric.impl.runtime.output_slot_prev] = null);\n\n(output__$1[hyperfiddle.electric.impl.runtime.output_slot_time] = null);\n\nvar input_31215 = (output__$1[hyperfiddle.electric.impl.runtime.output_slot_input]);\nif((hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3(input_31215,hyperfiddle.electric.impl.runtime.input_slot_pending,cljs.core.dec) === (0))){\nhyperfiddle.electric.impl.runtime.input_ready(input_31215);\n} else {\n}\n\nvar G__31217 = (output__$1[hyperfiddle.electric.impl.runtime.output_slot_next]);\noutput__$1 = G__31217;\ncontinue;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.context_cancel = (function hyperfiddle$electric$impl$runtime$context_cancel(context){\nreturn hyperfiddle.electric.impl.runtime.update_event(context,new cljs.core.Keyword(null,\"cancel\",\"cancel\",-1964088360),cljs.core.identity);\n});\nhyperfiddle.electric.impl.runtime.context_transfer = (function hyperfiddle$electric$impl$runtime$context_transfer(context){\nwhile(true){\nvar temp__5806__auto__ = (context[hyperfiddle.electric.impl.runtime.context_slot_check]);\nif((temp__5806__auto__ == null)){\nvar event = (context[hyperfiddle.electric.impl.runtime.context_slot_event]);\nif(cljs.core.contains_QMARK_(event,new cljs.core.Keyword(null,\"cancel\",\"cancel\",-1964088360))){\nvar fexpr__30883_31218 = (context[hyperfiddle.electric.impl.runtime.context_slot_terminator]);\n(fexpr__30883_31218.cljs$core$IFn$_invoke$arity$0 ? fexpr__30883_31218.cljs$core$IFn$_invoke$arity$0() : fexpr__30883_31218.call(null));\n\nthrow (new missionary.Cancelled());\n} else {\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"change\",\"change\",-1163046502).cljs$core$IFn$_invoke$arity$1(event))){\n} else {\nvar buffer_31219 = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_buffer]);\nvar size_31220 = buffer_31219.length;\nvar rpos_31221 = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_rpos]);\nvar wpos_31222 = (context[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos]);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rpos_31221,(context[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos] = ((wpos_31222 + (1)) & (size_31220 - (1)))))){\nvar larger_31225 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((size_31220 << (1)));\nvar split_31226 = (size_31220 - rpos_31221);\nhyperfiddle.electric.impl.runtime.acopy(buffer_31219,rpos_31221,larger_31225,(0),split_31226);\n\nhyperfiddle.electric.impl.runtime.acopy(buffer_31219,(0),larger_31225,split_31226,rpos_31221);\n\nvar n__5636__auto___31229 = size_31220;\nvar t_31230 = (0);\nwhile(true){\nif((t_31230 < n__5636__auto___31229)){\nvar temp__5808__auto___31231 = (larger_31225[t_31230]);\nif((temp__5808__auto___31231 == null)){\n} else {\nvar output_31232 = temp__5808__auto___31231;\nvar o_31233 = output_31232;\nwhile(true){\n(o_31233[hyperfiddle.electric.impl.runtime.output_slot_time] = t_31230);\n\nvar n_31236 = (o_31233[hyperfiddle.electric.impl.runtime.output_slot_next]);\nif((n_31236 === output_31232)){\n} else {\nvar G__31237 = n_31236;\no_31233 = G__31237;\ncontinue;\n}\nbreak;\n}\n}\n\nvar G__31238 = (t_31230 + (1));\nt_31230 = G__31238;\ncontinue;\n} else {\n}\nbreak;\n}\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_pending_buffer] = larger_31225);\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_pending_wpos] = size_31220);\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_pending_rpos] = (0));\n} else {\n}\n}\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_event] = null);\n\nreturn event;\n} else {\nvar input = temp__5806__auto__;\n(context[hyperfiddle.electric.impl.runtime.context_slot_check] = (input[hyperfiddle.electric.impl.runtime.input_slot_check]));\n\n(input[hyperfiddle.electric.impl.runtime.input_slot_check] = input);\n\nhyperfiddle.electric.impl.runtime.input_check(input);\n\ncontinue;\n}\nbreak;\n}\n});\nhyperfiddle.electric.impl.runtime.eval_tree_inst = (function hyperfiddle$electric$impl$runtime$eval_tree_inst(context,inst){\nvar G__30884_31242 = new cljs.core.Keyword(null,\"op\",\"op\",-1882987955).cljs$core$IFn$_invoke$arity$1(inst);\nvar G__30884_31243__$1 = (((G__30884_31242 instanceof cljs.core.Keyword))?G__30884_31242.fqn:null);\nswitch (G__30884_31243__$1) {\ncase \"create\":\nvar map__30885_31245 = inst;\nvar map__30885_31246__$1 = cljs.core.__destructure_map(map__30885_31245);\nvar vec__30886_31247 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30885_31246__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar target_frame_31248 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30886_31247,(0),null);\nvar target_slot_31249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30886_31247,(1),null);\nvar vec__30889_31250 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30885_31246__$1,new cljs.core.Keyword(null,\"source\",\"source\",-433931539));\nvar source_frame_31251 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30889_31250,(0),null);\nvar source_slot_31252 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30889_31250,(1),null);\nvar G__30893_31256 = ((cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),source_frame_31251)[hyperfiddle.electric.impl.runtime.frame_slot_sources])[source_slot_31252]);\nvar G__30894_31257 = hyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$3(context,hyperfiddle.electric.impl.runtime.context_slot_remote_id,cljs.core.dec);\nvar fexpr__30892_31258 = ((cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),target_frame_31248)[hyperfiddle.electric.impl.runtime.frame_slot_targets])[target_slot_31249]);\n(fexpr__30892_31258.cljs$core$IFn$_invoke$arity$2 ? fexpr__30892_31258.cljs$core$IFn$_invoke$arity$2(G__30893_31256,G__30894_31257) : fexpr__30892_31258.call(null,G__30893_31256,G__30894_31257));\n\nbreak;\ncase \"rotate\":\nhyperfiddle.electric.impl.runtime.frame_rotate(cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588).cljs$core$IFn$_invoke$arity$1(inst)),new cljs.core.Keyword(null,\"position\",\"position\",-2011731912).cljs$core$IFn$_invoke$arity$1(inst));\n\nbreak;\ncase \"remove\":\nhyperfiddle.electric.impl.runtime.aswap.cljs$core$IFn$_invoke$arity$4(context,hyperfiddle.electric.impl.runtime.context_slot_frame_store,cljs.core.dissoc_BANG_,new cljs.core.Keyword(null,\"frame\",\"frame\",-1711082588).cljs$core$IFn$_invoke$arity$1(inst));\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__30884_31243__$1)].join('')));\n\n}\n\nreturn context;\n});\nhyperfiddle.electric.impl.runtime.eval_change_inst = (function hyperfiddle$electric$impl$runtime$eval_change_inst(context,p__30895,value){\nvar vec__30896 = p__30895;\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30896,(0),null);\nvar slot = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30896,(1),null);\nhyperfiddle.electric.impl.runtime.input_change(((cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),id)[hyperfiddle.electric.impl.runtime.frame_slot_inputs])[slot]),value);\n\nreturn context;\n});\nhyperfiddle.electric.impl.runtime.eval_freeze_inst = (function hyperfiddle$electric$impl$runtime$eval_freeze_inst(context,p__30899){\nvar vec__30900 = p__30899;\nvar id = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30900,(0),null);\nvar slot = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30900,(1),null);\nhyperfiddle.electric.impl.runtime.input_freeze(((cljs.core.get.cljs$core$IFn$_invoke$arity$2((context[hyperfiddle.electric.impl.runtime.context_slot_frame_store]),id)[hyperfiddle.electric.impl.runtime.frame_slot_inputs])[slot]));\n\nreturn context;\n});\nhyperfiddle.electric.impl.runtime.parse_event = (function hyperfiddle$electric$impl$runtime$parse_event(context,p__30903){\nvar map__30904 = p__30903;\nvar map__30904__$1 = cljs.core.__destructure_map(map__30904);\nvar acks = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30904__$1,new cljs.core.Keyword(null,\"acks\",\"acks\",707064729));\nvar tree = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30904__$1,new cljs.core.Keyword(null,\"tree\",\"tree\",-196312028));\nvar change = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30904__$1,new cljs.core.Keyword(null,\"change\",\"change\",-1163046502));\nvar freeze = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30904__$1,new cljs.core.Keyword(null,\"freeze\",\"freeze\",2043466309));\nvar n__5636__auto___31263 = acks;\nvar __31264 = (0);\nwhile(true){\nif((__31264 < n__5636__auto___31263)){\nhyperfiddle.electric.impl.runtime.context_ack(context);\n\nvar G__31265 = (__31264 + (1));\n__31264 = G__31265;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.eval_tree_inst,context,tree);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,change)){\n} else {\nhyperfiddle.electric.impl.runtime.update_event(context,new cljs.core.Keyword(null,\"acks\",\"acks\",707064729),cljs.core.inc);\n\ncljs.core.reduce_kv(hyperfiddle.electric.impl.runtime.eval_change_inst,context,change);\n}\n\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.eval_freeze_inst,context,freeze);\n});\nhyperfiddle.electric.impl.runtime.process_incoming_events = (function hyperfiddle$electric$impl$runtime$process_incoming_events(context,_GT_incoming){\nreturn missionary.core.sample(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(cljs.core.reduce,hyperfiddle.electric.impl.runtime.parse_event,context),_GT_incoming);\n});\nhyperfiddle.electric.impl.runtime.write_outgoing_events = (function hyperfiddle$electric$impl$runtime$write_outgoing_events(write,_GT_events){\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((function (){var cr30905_block_0 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_0(cr30905_state){\ntry{var cr30905_place_0 = (1);\nvar cr30905_place_1 = _GT_events;\n(cr30905_state[(0)] = cr30905_block_1);\n\nreturn missionary.core.fork(cr30905_place_0,cr30905_place_1);\n}catch (e30917){var cr30905_exception = e30917;\n(cr30905_state[(0)] = null);\n\nthrow cr30905_exception;\n}});\nvar cr30905_block_1 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_1(cr30905_state){\ntry{var cr30905_place_2 = missionary.core.unpark();\nvar cr30905_place_3 = cljs.core._EQ_;\nvar cr30905_place_4 = cr30905_place_2;\nvar cr30905_place_5 = hyperfiddle.electric.impl.runtime.empty_event;\nvar cr30905_place_6 = (function (){var G__30920 = cr30905_place_4;\nvar G__30921 = cr30905_place_5;\nvar fexpr__30919 = cr30905_place_3;\nreturn (fexpr__30919.cljs$core$IFn$_invoke$arity$2 ? fexpr__30919.cljs$core$IFn$_invoke$arity$2(G__30920,G__30921) : fexpr__30919.call(null,G__30920,G__30921));\n})();\nvar cr30905_place_7 = null;\nif(cljs.core.truth_(cr30905_place_6)){\n(cr30905_state[(0)] = cr30905_block_4);\n\n(cr30905_state[(1)] = cr30905_place_7);\n\nreturn cr30905_state;\n} else {\n(cr30905_state[(0)] = cr30905_block_2);\n\n(cr30905_state[(2)] = cr30905_place_2);\n\n(cr30905_state[(1)] = cr30905_place_7);\n\nreturn cr30905_state;\n}\n}catch (e30918){var cr30905_exception = e30918;\n(cr30905_state[(0)] = null);\n\nthrow cr30905_exception;\n}});\nvar cr30905_block_2 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_2(cr30905_state){\ntry{var cr30905_place_2 = (cr30905_state[(2)]);\nvar cr30905_place_8 = write;\nvar cr30905_place_9 = cr30905_place_2;\nvar cr30905_place_10 = (function (){var G__30924 = cr30905_place_9;\nvar fexpr__30923 = cr30905_place_8;\nreturn (fexpr__30923.cljs$core$IFn$_invoke$arity$1 ? fexpr__30923.cljs$core$IFn$_invoke$arity$1(G__30924) : fexpr__30923.call(null,G__30924));\n})();\n(cr30905_state[(0)] = cr30905_block_3);\n\n(cr30905_state[(2)] = null);\n\nreturn missionary.core.park(cr30905_place_10);\n}catch (e30922){var cr30905_exception = e30922;\n(cr30905_state[(0)] = null);\n\n(cr30905_state[(1)] = null);\n\n(cr30905_state[(2)] = null);\n\nthrow cr30905_exception;\n}});\nvar cr30905_block_3 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_3(cr30905_state){\ntry{var cr30905_place_11 = missionary.core.unpark();\n(cr30905_state[(0)] = cr30905_block_5);\n\n(cr30905_state[(1)] = cr30905_place_11);\n\nreturn cr30905_state;\n}catch (e30925){var cr30905_exception = e30925;\n(cr30905_state[(0)] = null);\n\n(cr30905_state[(1)] = null);\n\nthrow cr30905_exception;\n}});\nvar cr30905_block_4 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_4(cr30905_state){\ntry{var cr30905_place_12 = null;\n(cr30905_state[(0)] = cr30905_block_5);\n\n(cr30905_state[(1)] = cr30905_place_12);\n\nreturn cr30905_state;\n}catch (e30926){var cr30905_exception = e30926;\n(cr30905_state[(0)] = null);\n\n(cr30905_state[(1)] = null);\n\nthrow cr30905_exception;\n}});\nvar cr30905_block_5 = (function hyperfiddle$electric$impl$runtime$write_outgoing_events_$_cr30905_block_5(cr30905_state){\ntry{var cr30905_place_7 = (cr30905_state[(1)]);\n(cr30905_state[(0)] = null);\n\n(cr30905_state[(1)] = null);\n\nreturn cr30905_place_7;\n}catch (e30927){var cr30905_exception = e30927;\n(cr30905_state[(0)] = null);\n\n(cr30905_state[(1)] = null);\n\nthrow cr30905_exception;\n}});\nreturn cloroutine.impl.coroutine((function (){var G__30928 = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((3));\n(G__30928[(0)] = cr30905_block_0);\n\nreturn G__30928;\n})());\n})(),missionary.core.ap_run);\n});\nhyperfiddle.electric.impl.runtime.peer = (function hyperfiddle$electric$impl$runtime$peer(var_count,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,ctor){\nreturn (function() {\nvar hyperfiddle$electric$impl$runtime$peer_$_rec = null;\nvar hyperfiddle$electric$impl$runtime$peer_$_rec__2 = (function (write,_QMARK_read){\nreturn hyperfiddle$electric$impl$runtime$peer_$_rec.cljs$core$IFn$_invoke$arity$3(write,_QMARK_read,hyperfiddle.electric.impl.runtime.pst);\n});\nvar hyperfiddle$electric$impl$runtime$peer_$_rec__3 = (function (write,_QMARK_read,on_error){\nreturn missionary.core.reactor_call((function (){\nvar context = hyperfiddle.electric.impl.runtime.make_context();\nmissionary.core.stream_BANG_(hyperfiddle.electric.impl.runtime.write_outgoing_events(write,missionary.core.stream_BANG_((function (n,t){\n(context[hyperfiddle.electric.impl.runtime.context_slot_notifier] = n);\n\n(context[hyperfiddle.electric.impl.runtime.context_slot_terminator] = t);\n\nvar temp__5808__auto___31279 = hyperfiddle.electric.impl.runtime.make_frame(context,null,(0),(0),cljs.core.PersistentArrayMap.EMPTY,cljs.core.PersistentVector.EMPTY,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,context,cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(var_count,hyperfiddle.electric.impl.runtime.unbound)),ctor);\nif((temp__5808__auto___31279 == null)){\n} else {\nvar _LT_main_31280 = temp__5808__auto___31279;\nmissionary.core.stream_BANG_(missionary.core.latest.cljs$core$IFn$_invoke$arity$variadic((function (x){\nif((x instanceof hyperfiddle.electric.Failure)){\nvar G__30929 = x.error;\nreturn (on_error.cljs$core$IFn$_invoke$arity$1 ? on_error.cljs$core$IFn$_invoke$arity$1(G__30929) : on_error.call(null,G__30929));\n} else {\nreturn null;\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([_LT_main_31280], 0)));\n}\n\nreturn hyperfiddle.electric.impl.runtime.__GT_It(context,hyperfiddle.electric.impl.runtime.context_cancel,hyperfiddle.electric.impl.runtime.context_transfer);\n}))));\n\nreturn missionary.core.stream_BANG_(hyperfiddle.electric.impl.runtime.process_incoming_events(context,missionary.core.stream_BANG_(missionary.core.relieve(cljs.core.into,missionary.core.sample(cljs.core.vector,missionary.core.observe(_QMARK_read))))));\n}));\n});\nhyperfiddle$electric$impl$runtime$peer_$_rec = function(write,_QMARK_read,on_error){\nswitch(arguments.length){\ncase 2:\nreturn hyperfiddle$electric$impl$runtime$peer_$_rec__2.call(this,write,_QMARK_read);\ncase 3:\nreturn hyperfiddle$electric$impl$runtime$peer_$_rec__3.call(this,write,_QMARK_read,on_error);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nhyperfiddle$electric$impl$runtime$peer_$_rec.cljs$core$IFn$_invoke$arity$2 = hyperfiddle$electric$impl$runtime$peer_$_rec__2;\nhyperfiddle$electric$impl$runtime$peer_$_rec.cljs$core$IFn$_invoke$arity$3 = hyperfiddle$electric$impl$runtime$peer_$_rec__3;\nreturn hyperfiddle$electric$impl$runtime$peer_$_rec;\n})()\n});\nhyperfiddle.electric.impl.runtime.collapse = (function hyperfiddle$electric$impl$runtime$collapse(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31282 = arguments.length;\nvar i__5770__auto___31283 = (0);\nwhile(true){\nif((i__5770__auto___31283 < len__5769__auto___31282)){\nargs__5775__auto__.push((arguments[i__5770__auto___31283]));\n\nvar G__31285 = (i__5770__auto___31283 + (1));\ni__5770__auto___31283 = G__31285;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((3) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.collapse.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.collapse.cljs$core$IFn$_invoke$arity$variadic = (function (s,n,f,args){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.iterate(cljs.core.pop,s),n),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.peek),cljs.core.take.cljs$core$IFn$_invoke$arity$1(n)),cljs.core.conj,args,cljs.core.iterate(cljs.core.pop,s))));\n}));\n\n(hyperfiddle.electric.impl.runtime.collapse.cljs$lang$maxFixedArity = (3));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.collapse.cljs$lang$applyTo = (function (seq30930){\nvar G__30931 = cljs.core.first(seq30930);\nvar seq30930__$1 = cljs.core.next(seq30930);\nvar G__30932 = cljs.core.first(seq30930__$1);\nvar seq30930__$2 = cljs.core.next(seq30930__$1);\nvar G__30933 = cljs.core.first(seq30930__$2);\nvar seq30930__$3 = cljs.core.next(seq30930__$2);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30931,G__30932,G__30933,seq30930__$3);\n}));\n\nhyperfiddle.electric.impl.runtime.snapshot = (function hyperfiddle$electric$impl$runtime$snapshot(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31287 = arguments.length;\nvar i__5770__auto___31288 = (0);\nwhile(true){\nif((i__5770__auto___31288 < len__5769__auto___31287)){\nargs__5775__auto__.push((arguments[i__5770__auto___31288]));\n\nvar G__31290 = (i__5770__auto___31288 + (1));\ni__5770__auto___31288 = G__31290;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((2) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.snapshot.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.snapshot.cljs$core$IFn$_invoke$arity$variadic = (function (env,f,args){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,env,args));\n}));\n\n(hyperfiddle.electric.impl.runtime.snapshot.cljs$lang$maxFixedArity = (2));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.snapshot.cljs$lang$applyTo = (function (seq30934){\nvar G__30935 = cljs.core.first(seq30934);\nvar seq30934__$1 = cljs.core.next(seq30934);\nvar G__30936 = cljs.core.first(seq30934__$1);\nvar seq30934__$2 = cljs.core.next(seq30934__$1);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30935,G__30936,seq30934__$2);\n}));\n\nhyperfiddle.electric.impl.runtime.reverse_index = (function hyperfiddle$electric$impl$runtime$reverse_index(m){\nreturn cljs.core.reduce_kv((function (v,x,i){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,x);\n}),cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(m),null)),m);\n});\nhyperfiddle.electric.impl.runtime.empty_frame = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),(0),new cljs.core.Keyword(null,\"source\",\"source\",-433931539),(0),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303),(0),new cljs.core.Keyword(null,\"target\",\"target\",253001721),(0),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043),(0),new cljs.core.Keyword(null,\"input\",\"input\",556931961),(0),new cljs.core.Keyword(null,\"static\",\"static\",1214358571),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),cljs.core.PersistentArrayMap.EMPTY], null);\nhyperfiddle.electric.impl.runtime.compile = (function hyperfiddle$electric$impl$runtime$compile(inst,p__30937){\nvar map__30938 = p__30937;\nvar map__30938__$1 = cljs.core.__destructure_map(map__30938);\nvar fns = map__30938__$1;\nvar input = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"input\",\"input\",556931961));\nvar target = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"target\",\"target\",253001721));\nvar main = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"main\",\"main\",-2117802661));\nvar pub = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"pub\",\"pub\",-1189143908));\nvar bind = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"bind\",\"bind\",-113428417));\nvar lift = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"lift\",\"lift\",903632035));\nvar variable = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492));\nvar do$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"do\",\"do\",46310725));\nvar sub = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"sub\",\"sub\",-2093760025));\nvar global__$1 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"global\",\"global\",93595047));\nvar constant = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303));\nvar static$ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"static\",\"static\",1214358571));\nvar source = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"source\",\"source\",-433931539));\nvar output = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"output\",\"output\",-1105869043));\nvar nop = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"nop\",\"nop\",-1754075182));\nvar inject = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"inject\",\"inject\",-1882635533));\nvar dynamic = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571));\nvar literal = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"literal\",\"literal\",1664775605));\nvar invoke = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159));\nvar vget = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__30938__$1,new cljs.core.Keyword(null,\"vget\",\"vget\",1720343287));\nreturn cljs.core.peek(hyperfiddle.electric.impl.runtime.collapse(new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930).cljs$core$IFn$_invoke$arity$1(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot((function hyperfiddle$electric$impl$runtime$compile_$_walk(env,off,idx,dyn,inst__$1){\nvar G__30939 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"op\",\"hyperfiddle.electric.impl.ir/op\",1320467425).cljs$core$IFn$_invoke$arity$1(inst__$1);\nvar G__30939__$1 = (((G__30939 instanceof cljs.core.Keyword))?G__30939.fqn:null);\nswitch (G__30939__$1) {\ncase \"hyperfiddle.electric.impl.ir/nop\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,nop);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/sub\":\nvar p = (idx - new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"index\",\"hyperfiddle.electric.impl.ir/index\",1690646129).cljs$core$IFn$_invoke$arity$1(inst__$1));\nif((p < off)){\nvar f = new cljs.core.Keyword(null,\"static\",\"static\",1214358571).cljs$core$IFn$_invoke$arity$1(env);\nvar i = (function (){var G__30940 = p;\nvar G__30941 = cljs.core.count(f);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30940,G__30941) : f.call(null,G__30940,G__30941));\n})();\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env,new cljs.core.Keyword(null,\"static\",\"static\",1214358571),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f,p,i)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(static$.cljs$core$IFn$_invoke$arity$1 ? static$.cljs$core$IFn$_invoke$arity$1(i) : static$.call(null,i)));\n} else {\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(sub.cljs$core$IFn$_invoke$arity$1 ? sub.cljs$core$IFn$_invoke$arity$1(p) : sub.call(null,p)));\n}\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/pub\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$6(hyperfiddle$electric$impl$runtime$compile_$_walk(hyperfiddle$electric$impl$runtime$compile_$_walk(env,off,idx,dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"init\",\"hyperfiddle.electric.impl.ir/init\",-819637966).cljs$core$IFn$_invoke$arity$1(inst__$1)),off,(idx + (1)),dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"inst\",\"hyperfiddle.electric.impl.ir/inst\",-420394775).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(2),pub,idx);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/do\":\nvar deps = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"deps\",\"hyperfiddle.electric.impl.ir/deps\",-1313673773).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(hyperfiddle$electric$impl$runtime$compile_$_walk(cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (env__$1,arg){\nreturn hyperfiddle$electric$impl$runtime$compile_$_walk(env__$1,off,idx,dyn,arg);\n}),env,deps),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,cljs.core.count(deps),cljs.core.vector),off,idx,dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"inst\",\"hyperfiddle.electric.impl.ir/inst\",-420394775).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(2),do$);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/def\":\nvar v = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"slot\",\"hyperfiddle.electric.impl.ir/slot\",1432523351).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),cljs.core.max,v),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(inject.cljs$core$IFn$_invoke$arity$1 ? inject.cljs$core$IFn$_invoke$arity$1(v) : inject.call(null,v)));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/lift\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(hyperfiddle$electric$impl$runtime$compile_$_walk(env,off,idx,dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"init\",\"hyperfiddle.electric.impl.ir/init\",-819637966).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(1),lift);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/eval\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(function (){var G__30943 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"form\",\"hyperfiddle.electric.impl.ir/form\",-534651915).cljs$core$IFn$_invoke$arity$1(inst__$1);\nvar G__30944 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"ns\",\"hyperfiddle.electric.impl.ir/ns\",1363348916).cljs$core$IFn$_invoke$arity$1(inst__$1);\nvar fexpr__30942 = new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905).cljs$core$IFn$_invoke$arity$1(fns);\nreturn (fexpr__30942.cljs$core$IFn$_invoke$arity$2 ? fexpr__30942.cljs$core$IFn$_invoke$arity$2(G__30943,G__30944) : fexpr__30942.call(null,G__30943,G__30944));\n})());\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/node\":\nvar v = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"slot\",\"hyperfiddle.electric.impl.ir/slot\",1432523351).cljs$core$IFn$_invoke$arity$1(inst__$1);\nvar env__$1 = cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),cljs.core.max,v);\nif(cljs.core.truth_((dyn.cljs$core$IFn$_invoke$arity$1 ? dyn.cljs$core$IFn$_invoke$arity$1(v) : dyn.call(null,v)))){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env__$1,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(vget.cljs$core$IFn$_invoke$arity$1 ? vget.cljs$core$IFn$_invoke$arity$1(v) : vget.call(null,v)));\n} else {\nvar d = new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571).cljs$core$IFn$_invoke$arity$1(env__$1);\nvar i = (function (){var G__30945 = v;\nvar G__30946 = cljs.core.count(d);\nreturn (d.cljs$core$IFn$_invoke$arity$2 ? d.cljs$core$IFn$_invoke$arity$2(G__30945,G__30946) : d.call(null,G__30945,G__30946));\n})();\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(env__$1,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(d,v,i)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(dynamic.cljs$core$IFn$_invoke$arity$2 ? dynamic.cljs$core$IFn$_invoke$arity$2(i,inst__$1) : dynamic.call(null,i,inst__$1)));\n}\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/bind\":\nvar v = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"slot\",\"hyperfiddle.electric.impl.ir/slot\",1432523351).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(hyperfiddle$electric$impl$runtime$compile_$_walk(cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),cljs.core.max,v),off,idx,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(dyn,v),new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"inst\",\"hyperfiddle.electric.impl.ir/inst\",-420394775).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(1),bind,v,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(idx - new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"index\",\"hyperfiddle.electric.impl.ir/index\",1690646129).cljs$core$IFn$_invoke$arity$1(inst__$1))], 0));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/apply\":\nvar f = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"fn\",\"hyperfiddle.electric.impl.ir/fn\",1996468864).cljs$core$IFn$_invoke$arity$1(inst__$1);\nvar args = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"args\",\"hyperfiddle.electric.impl.ir/args\",291275628).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (env__$1,inst__$2){\nreturn hyperfiddle$electric$impl$runtime$compile_$_walk(env__$1,off,idx,dyn,inst__$2);\n}),env,cljs.core.cons(f,args)),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(cljs.core.count(args) + (1)),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(invoke,(function (){var f__$1 = f;\nwhile(true){\nvar G__30947 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"op\",\"hyperfiddle.electric.impl.ir/op\",1320467425).cljs$core$IFn$_invoke$arity$1(f__$1);\nvar G__30947__$1 = (((G__30947 instanceof cljs.core.Keyword))?G__30947.fqn:null);\nswitch (G__30947__$1) {\ncase \"hyperfiddle.electric.impl.ir/global\":\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(f__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"apply\",\"apply\",1320385493),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"name\",\"hyperfiddle.electric.debug/name\",-35961215),cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"name\",\"hyperfiddle.electric.impl.ir/name\",655661733).cljs$core$IFn$_invoke$arity$1(f__$1))], 0));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/node\":\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"apply\",\"apply\",1320385493));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/literal\":\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"apply\",\"apply\",1320385493),new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"name\",\"hyperfiddle.electric.debug/name\",-35961215),new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"value\",\"hyperfiddle.electric.impl.ir/value\",-750005275).cljs$core$IFn$_invoke$arity$1(f__$1)], null);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/eval\":\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/sub\":\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"apply\",\"apply\",1320385493));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/input\":\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f__$1,new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"apply\",\"apply\",1320385493));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/apply\":\nvar G__31322 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"fn\",\"hyperfiddle.electric.impl.ir/fn\",1996468864).cljs$core$IFn$_invoke$arity$1(f__$1);\nf__$1 = G__31322;\ncontinue;\n\nbreak;\ndefault:\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(\"hyperfiddle.electric.debug\",\"type\",\"hyperfiddle.electric.debug/type\",-166806812),new cljs.core.Keyword(null,\"unknown-apply\",\"unknown-apply\",-1407042085),new cljs.core.Keyword(null,\"op\",\"op\",-1882987955),f__$1], null);\n\n}\nbreak;\n}\n})()));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/input\":\nvar deps = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"deps\",\"hyperfiddle.electric.impl.ir/deps\",-1313673773).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (env__$1,arg){\nreturn hyperfiddle$electric$impl$runtime$compile_$_walk(env__$1,off,idx,dyn,arg);\n}),env,deps),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,cljs.core.count(deps),cljs.core.vector),new cljs.core.Keyword(null,\"input\",\"input\",556931961)),new cljs.core.Keyword(null,\"input\",\"input\",556931961),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(2),input);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/output\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle$electric$impl$runtime$compile_$_walk(env,off,idx,dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"init\",\"hyperfiddle.electric.impl.ir/init\",-819637966).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043)),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(2),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(output,inst__$1));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/global\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(function (){var G__30948 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"name\",\"hyperfiddle.electric.impl.ir/name\",655661733).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn (global__$1.cljs$core$IFn$_invoke$arity$1 ? global__$1.cljs$core$IFn$_invoke$arity$1(G__30948) : global__$1.call(null,G__30948));\n})());\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/literal\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(env,new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),cljs.core.conj,(function (){var G__30949 = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"value\",\"hyperfiddle.electric.impl.ir/value\",-750005275).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn (literal.cljs$core$IFn$_invoke$arity$1 ? literal.cljs$core$IFn$_invoke$arity$1(G__30949) : literal.call(null,G__30949));\n})());\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/variable\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle$electric$impl$runtime$compile_$_walk(env,off,idx,dyn,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"init\",\"hyperfiddle.electric.impl.ir/init\",-819637966).cljs$core$IFn$_invoke$arity$1(inst__$1)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492)),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(3),variable);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/source\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(env,new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(2),source);\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/constant\":\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle$electric$impl$runtime$compile_$_walk(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([env,hyperfiddle.electric.impl.runtime.empty_frame], 0)),idx,idx,cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"init\",\"hyperfiddle.electric.impl.ir/init\",-819637966).cljs$core$IFn$_invoke$arity$1(inst__$1)),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.reverse_index,new cljs.core.Keyword(null,\"static\",\"static\",1214358571))),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.reverse_index,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571))),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303)),new cljs.core.Keyword(null,\"target\",\"target\",253001721)),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043)),new cljs.core.Keyword(null,\"input\",\"input\",556931961)),cljs.core.select_keys(env,cljs.core.keys(hyperfiddle.electric.impl.runtime.empty_frame))], 0)),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303)),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(10),cljs.core.partial.cljs$core$IFn$_invoke$arity$2(constant,inst__$1));\n\nbreak;\ncase \"hyperfiddle.electric.impl.ir/target\":\nvar deps = new cljs.core.Keyword(\"hyperfiddle.electric.impl.ir\",\"deps\",\"hyperfiddle.electric.impl.ir/deps\",-1313673773).cljs$core$IFn$_invoke$arity$1(inst__$1);\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.update.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.snapshot(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(hyperfiddle.electric.impl.runtime.snapshot(cljs.core.update.cljs$core$IFn$_invoke$arity$5(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (env__$1,inst__$2){\nreturn hyperfiddle$electric$impl$runtime$compile_$_walk(env__$1,idx,idx,cljs.core.PersistentHashSet.EMPTY,inst__$2);\n}),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([env,hyperfiddle.electric.impl.runtime.empty_frame], 0)),deps),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,cljs.core.count(deps),cljs.core.vector),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.reverse_index,new cljs.core.Keyword(null,\"static\",\"static\",1214358571))),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.reverse_index,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571))),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303)),new cljs.core.Keyword(null,\"target\",\"target\",253001721)),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043)),new cljs.core.Keyword(null,\"input\",\"input\",556931961)),cljs.core.select_keys(env,cljs.core.keys(hyperfiddle.electric.impl.runtime.empty_frame))], 0)),new cljs.core.Keyword(null,\"target\",\"target\",253001721)),new cljs.core.Keyword(null,\"target\",\"target\",253001721),cljs.core.inc),new cljs.core.Keyword(null,\"stack\",\"stack\",-793405930),hyperfiddle.electric.impl.runtime.collapse,(10),target);\n\nbreak;\ndefault:\nthrow (new Error([\"No matching clause: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__30939__$1)].join('')));\n\n}\n})(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.empty_frame,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217),(-1)),(0),(0),cljs.core.PersistentHashSet.EMPTY,inst),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.inc,new cljs.core.Keyword(null,\"vars\",\"vars\",-2046957217))),cljs.core.comp.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.reverse_index,new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571))),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492)),new cljs.core.Keyword(null,\"source\",\"source\",-433931539)),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303)),new cljs.core.Keyword(null,\"target\",\"target\",253001721)),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043)),new cljs.core.Keyword(null,\"input\",\"input\",556931961))),(9),main));\n});\nhyperfiddle.electric.impl.runtime.sym = (function hyperfiddle$electric$impl$runtime$sym(var_args){\nvar args__5775__auto__ = [];\nvar len__5769__auto___31329 = arguments.length;\nvar i__5770__auto___31330 = (0);\nwhile(true){\nif((i__5770__auto___31330 < len__5769__auto___31329)){\nargs__5775__auto__.push((arguments[i__5770__auto___31330]));\n\nvar G__31331 = (i__5770__auto___31330 + (1));\ni__5770__auto___31330 = G__31331;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ = ((((0) < args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic = (function (args){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.join.cljs$core$IFn$_invoke$arity$2(\"-\",args));\n}));\n\n(hyperfiddle.electric.impl.runtime.sym.cljs$lang$maxFixedArity = (0));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.sym.cljs$lang$applyTo = (function (seq30950){\nvar self__5755__auto__ = this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq30950));\n}));\n\nhyperfiddle.electric.impl.runtime.emit = (function hyperfiddle$electric$impl$runtime$emit(prefix,inst){\nreturn hyperfiddle.electric.impl.runtime.compile(inst,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"lift\",\"lift\",903632035),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"global\",\"global\",93595047),new cljs.core.Keyword(null,\"sub\",\"sub\",-2093760025),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303),new cljs.core.Keyword(null,\"static\",\"static\",1214358571),new cljs.core.Keyword(null,\"source\",\"source\",-433931539),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043),new cljs.core.Keyword(null,\"nop\",\"nop\",-1754075182),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"inject\",\"inject\",-1882635533),new cljs.core.Keyword(null,\"literal\",\"literal\",1664775605),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"vget\",\"vget\",1720343287),new cljs.core.Keyword(null,\"input\",\"input\",556931961),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"main\",\"main\",-2117802661),new cljs.core.Keyword(null,\"pub\",\"pub\",-1189143908),new cljs.core.Keyword(null,\"bind\",\"bind\",-113428417),new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905)],[(function (f){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"pure\",\"hyperfiddle.electric.impl.runtime/pure\",-470880532,null),null,(1),null)),(new cljs.core.List(null,f,null,(1),null)))));\n}),(function (form,remote,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"variable\",\"hyperfiddle.electric.impl.runtime/variable\",510769532,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),(new cljs.core.List(null,(remote + slot),null,(1),null)),(new cljs.core.List(null,slot,null,(1),null)),(new cljs.core.List(null,form,null,(1),null))], 0))));\n}),(function (deps,form){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(null,\"do\",\"do\",1686842252,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"make-input\",\"hyperfiddle.electric.impl.runtime/make-input\",566179856,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,deps,null,(1),null))], 0)))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0))));\n}),(function (x){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"pure\",\"hyperfiddle.electric.impl.runtime/pure\",-470880532,null),null,(1),null)),(new cljs.core.List(null,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(x),null,(1),null)))));\n}),(function (idx){\nreturn hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"pub\",\"pub\",451387619,null),idx], 0));\n}),(function (debug_info,form,static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"constant\",\"hyperfiddle.electric.impl.runtime/constant\",73011709,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,slot,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"constructor\",\"hyperfiddle.electric.impl.runtime/constructor\",-1501318103,null),null,(1),null)),(new cljs.core.List(null,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p){\nreturn hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"pub\",\"pub\",451387619,null),p], 0));\n}),static$),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,dynamic,null,(1),null)),(new cljs.core.List(null,variable_count,null,(1),null)),(new cljs.core.List(null,source_count,null,(1),null)),(new cljs.core.List(null,constant_count,null,(1),null)),(new cljs.core.List(null,target_count,null,(1),null)),(new cljs.core.List(null,output_count,null,(1),null)),(new cljs.core.List(null,input_count,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"check-failure\",\"hyperfiddle.electric.impl.runtime/check-failure\",-1123078405,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));\n}),(function (i){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"static\",\"hyperfiddle.electric.impl.runtime/static\",-547873025,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,i,null,(1),null))], 0))));\n}),(function (remote,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"source\",\"hyperfiddle.electric.impl.runtime/source\",-2004538047,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),(new cljs.core.List(null,(remote + slot),null,(1),null)),(new cljs.core.List(null,slot,null,(1),null))], 0))));\n}),(function (debug_info,form,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"make-output\",\"hyperfiddle.electric.impl.runtime/make-output\",1149148798,null),null,(1),null)),(new cljs.core.List(null,slot,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"check-failure\",\"hyperfiddle.electric.impl.runtime/check-failure\",-1123078405,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0)))),null,(1),null))], 0))));\n}),null,(function (i,debug_info){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"dynamic\",\"hyperfiddle.electric.impl.runtime/dynamic\",1076292141,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,i,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),null,(1),null))))),null,(1),null))], 0))));\n}),(function (v){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"pure\",\"hyperfiddle.electric.impl.runtime/pure\",-470880532,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"inject\",\"hyperfiddle.electric.impl.runtime/inject\",-834159193,null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null))))),null,(1),null)))));\n}),(function (x){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"pure\",\"hyperfiddle.electric.impl.runtime/pure\",-470880532,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,x,null,(1),null))))),null,(1),null)))));\n}),(function() { \nvar G__31349__delegate = function (debug_info,forms){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"latest-apply\",\"hyperfiddle.electric.impl.runtime/latest-apply\",694267757,null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(null,\"quote\",\"quote\",1377916282,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.select_debug_info(debug_info),null,(1),null))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([forms], 0))));\n};\nvar G__31349 = function (debug_info,var_args){\nvar forms = null;\nif (arguments.length > 1) {\nvar G__31350__i = 0, G__31350__a = new Array(arguments.length -  1);\nwhile (G__31350__i < G__31350__a.length) {G__31350__a[G__31350__i] = arguments[G__31350__i + 1]; ++G__31350__i;}\n  forms = new cljs.core.IndexedSeq(G__31350__a,0,null);\n} \nreturn G__31349__delegate.call(this,debug_info,forms);};\nG__31349.cljs$lang$maxFixedArity = 1;\nG__31349.cljs$lang$applyTo = (function (arglist__31351){\nvar debug_info = cljs.core.first(arglist__31351);\nvar forms = cljs.core.rest(arglist__31351);\nreturn G__31349__delegate(debug_info,forms);\n});\nG__31349.cljs$core$IFn$_invoke$arity$variadic = G__31349__delegate;\nreturn G__31349;\n})()\n,(function (v){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"aget\",\"cljs.core/aget\",6345791,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"int\",\"cljs.core/int\",20935062,null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null))))),null,(1),null))], 0))));\n}),(function (deps,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"input-spawn\",\"hyperfiddle.electric.impl.runtime/input-spawn\",1447350587,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,slot,null,(1),null)),(new cljs.core.List(null,deps,null,(1),null))], 0))));\n}),(function (deps,static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,slot){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"target\",\"hyperfiddle.electric.impl.runtime/target\",1172525771,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,slot,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"constructor\",\"hyperfiddle.electric.impl.runtime/constructor\",-1501318103,null),null,(1),null)),(new cljs.core.List(null,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (p){\nreturn hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"pub\",\"pub\",451387619,null),p], 0));\n}),static$),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,dynamic,null,(1),null)),(new cljs.core.List(null,variable_count,null,(1),null)),(new cljs.core.List(null,source_count,null,(1),null)),(new cljs.core.List(null,constant_count,null,(1),null)),(new cljs.core.List(null,target_count,null,(1),null)),(new cljs.core.List(null,output_count,null,(1),null)),(new cljs.core.List(null,input_count,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"make-input\",\"hyperfiddle.electric.impl.runtime/make-input\",566179856,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,deps,null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0)))),null,(1),null))], 0))));\n}),(function (form,var_count,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"peer\",\"hyperfiddle.electric.impl.runtime/peer\",1821280250,null),null,(1),null)),(new cljs.core.List(null,var_count,null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,dynamic,null,(1),null)),(new cljs.core.List(null,variable_count,null,(1),null)),(new cljs.core.List(null,source_count,null,(1),null)),(new cljs.core.List(null,constant_count,null,(1),null)),(new cljs.core.List(null,target_count,null,(1),null)),(new cljs.core.List(null,output_count,null,(1),null)),(new cljs.core.List(null,input_count,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"fn\",\"cljs.core/fn\",-1065745098,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"frame\",\"frame\",-70551061,null)], 0)),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,form,null,(1),null))], 0)))),null,(1),null))], 0))));\n}),(function (form,cont,idx){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"pub\",\"pub\",451387619,null),idx], 0)),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"signal\",\"hyperfiddle.electric.impl.runtime/signal\",340452693,null),null,(1),null)),(new cljs.core.List(null,form,null,(1),null))))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cont,null,(1),null))], 0))));\n}),(function (form,slot,idx){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"prev\",\"prev\",43462301,null)], 0)),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"aget\",\"cljs.core/aget\",6345791,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,slot,null,(1),null))], 0)))),null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"aset\",\"cljs.core/aset\",-898215545,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"int\",\"cljs.core/int\",20935062,null),null,(1),null)),(new cljs.core.List(null,slot,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"pub\",\"pub\",451387619,null),idx], 0)),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"let\",\"cljs.core/let\",-308701135,null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"res\",\"res\",245523648,null)], 0)),null,(1),null)),(new cljs.core.List(null,form,null,(1),null)))))),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"aset\",\"cljs.core/aset\",-898215545,null),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"vars\",\"vars\",-406425690,null)], 0)),null,(1),null)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"cljs.core\",\"int\",\"cljs.core/int\",20935062,null),null,(1),null)),(new cljs.core.List(null,slot,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"prev\",\"prev\",43462301,null)], 0)),null,(1),null))], 0)))),null,(1),null)),(new cljs.core.List(null,hyperfiddle.electric.impl.runtime.sym.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([prefix,new cljs.core.Symbol(null,\"res\",\"res\",245523648,null)], 0)),null,(1),null))], 0)))),null,(1),null))], 0))));\n}),(function (form,_ns){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2((new cljs.core.List(null,new cljs.core.Symbol(\"hyperfiddle.electric.impl.runtime\",\"pure\",\"hyperfiddle.electric.impl.runtime/pure\",-470880532,null),null,(1),null)),(new cljs.core.List(null,form,null,(1),null)))));\n})]));\n});\nhyperfiddle.electric.impl.runtime.juxt_with = (function hyperfiddle$electric$impl$runtime$juxt_with(var_args){\nvar G__30962 = arguments.length;\nswitch (G__30962) {\ncase 1:\nreturn hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ = [];\nvar len__5769__auto___31357 = arguments.length;\nvar i__5770__auto___31358 = (0);\nwhile(true){\nif((i__5770__auto___31358 < len__5769__auto___31357)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___31358]));\n\nvar G__31360 = (i__5770__auto___31358 + (1));\ni__5770__auto___31358 = G__31360;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ = (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$1 = (function (f){\nreturn (function() {\nvar G__31363 = null;\nvar G__31363__0 = (function (){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar G__31363__1 = (function (a){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar G__31363__2 = (function (a,b){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar G__31363__3 = (function (a,b,c){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar G__31363__4 = (function() { \nvar G__31366__delegate = function (a,b,c,ds){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n};\nvar G__31366 = function (a,b,c,var_args){\nvar ds = null;\nif (arguments.length > 3) {\nvar G__31367__i = 0, G__31367__a = new Array(arguments.length -  3);\nwhile (G__31367__i < G__31367__a.length) {G__31367__a[G__31367__i] = arguments[G__31367__i + 3]; ++G__31367__i;}\n  ds = new cljs.core.IndexedSeq(G__31367__a,0,null);\n} \nreturn G__31366__delegate.call(this,a,b,c,ds);};\nG__31366.cljs$lang$maxFixedArity = 3;\nG__31366.cljs$lang$applyTo = (function (arglist__31368){\nvar a = cljs.core.first(arglist__31368);\narglist__31368 = cljs.core.next(arglist__31368);\nvar b = cljs.core.first(arglist__31368);\narglist__31368 = cljs.core.next(arglist__31368);\nvar c = cljs.core.first(arglist__31368);\nvar ds = cljs.core.rest(arglist__31368);\nreturn G__31366__delegate(a,b,c,ds);\n});\nG__31366.cljs$core$IFn$_invoke$arity$variadic = G__31366__delegate;\nreturn G__31366;\n})()\n;\nG__31363 = function(a,b,c,var_args){\nvar ds = var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__31363__0.call(this);\ncase 1:\nreturn G__31363__1.call(this,a);\ncase 2:\nreturn G__31363__2.call(this,a,b);\ncase 3:\nreturn G__31363__3.call(this,a,b,c);\ndefault:\nvar G__31369 = null;\nif (arguments.length > 3) {\nvar G__31370__i = 0, G__31370__a = new Array(arguments.length -  3);\nwhile (G__31370__i < G__31370__a.length) {G__31370__a[G__31370__i] = arguments[G__31370__i + 3]; ++G__31370__i;}\nG__31369 = new cljs.core.IndexedSeq(G__31370__a,0,null);\n}\nreturn G__31363__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31369);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31363.cljs$lang$maxFixedArity = 3;\nG__31363.cljs$lang$applyTo = G__31363__4.cljs$lang$applyTo;\nG__31363.cljs$core$IFn$_invoke$arity$0 = G__31363__0;\nG__31363.cljs$core$IFn$_invoke$arity$1 = G__31363__1;\nG__31363.cljs$core$IFn$_invoke$arity$2 = G__31363__2;\nG__31363.cljs$core$IFn$_invoke$arity$3 = G__31363__3;\nG__31363.cljs$core$IFn$_invoke$arity$variadic = G__31363__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__31363;\n})()\n}));\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$2 = (function (f,g){\nreturn (function() {\nvar G__31371 = null;\nvar G__31371__0 = (function (){\nvar G__30963 = (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30963) : f.call(null,G__30963));\n});\nvar G__31371__1 = (function (a){\nvar G__30964 = (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(a) : g.call(null,a));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30964) : f.call(null,G__30964));\n});\nvar G__31371__2 = (function (a,b){\nvar G__30965 = (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(a,b) : g.call(null,a,b));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30965) : f.call(null,G__30965));\n});\nvar G__31371__3 = (function (a,b,c){\nvar G__30966 = (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(a,b,c) : g.call(null,a,b,c));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30966) : f.call(null,G__30966));\n});\nvar G__31371__4 = (function() { \nvar G__31373__delegate = function (a,b,c,ds){\nvar G__30967 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,a,b,c,ds);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30967) : f.call(null,G__30967));\n};\nvar G__31373 = function (a,b,c,var_args){\nvar ds = null;\nif (arguments.length > 3) {\nvar G__31374__i = 0, G__31374__a = new Array(arguments.length -  3);\nwhile (G__31374__i < G__31374__a.length) {G__31374__a[G__31374__i] = arguments[G__31374__i + 3]; ++G__31374__i;}\n  ds = new cljs.core.IndexedSeq(G__31374__a,0,null);\n} \nreturn G__31373__delegate.call(this,a,b,c,ds);};\nG__31373.cljs$lang$maxFixedArity = 3;\nG__31373.cljs$lang$applyTo = (function (arglist__31375){\nvar a = cljs.core.first(arglist__31375);\narglist__31375 = cljs.core.next(arglist__31375);\nvar b = cljs.core.first(arglist__31375);\narglist__31375 = cljs.core.next(arglist__31375);\nvar c = cljs.core.first(arglist__31375);\nvar ds = cljs.core.rest(arglist__31375);\nreturn G__31373__delegate(a,b,c,ds);\n});\nG__31373.cljs$core$IFn$_invoke$arity$variadic = G__31373__delegate;\nreturn G__31373;\n})()\n;\nG__31371 = function(a,b,c,var_args){\nvar ds = var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__31371__0.call(this);\ncase 1:\nreturn G__31371__1.call(this,a);\ncase 2:\nreturn G__31371__2.call(this,a,b);\ncase 3:\nreturn G__31371__3.call(this,a,b,c);\ndefault:\nvar G__31377 = null;\nif (arguments.length > 3) {\nvar G__31378__i = 0, G__31378__a = new Array(arguments.length -  3);\nwhile (G__31378__i < G__31378__a.length) {G__31378__a[G__31378__i] = arguments[G__31378__i + 3]; ++G__31378__i;}\nG__31377 = new cljs.core.IndexedSeq(G__31378__a,0,null);\n}\nreturn G__31371__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31377);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31371.cljs$lang$maxFixedArity = 3;\nG__31371.cljs$lang$applyTo = G__31371__4.cljs$lang$applyTo;\nG__31371.cljs$core$IFn$_invoke$arity$0 = G__31371__0;\nG__31371.cljs$core$IFn$_invoke$arity$1 = G__31371__1;\nG__31371.cljs$core$IFn$_invoke$arity$2 = G__31371__2;\nG__31371.cljs$core$IFn$_invoke$arity$3 = G__31371__3;\nG__31371.cljs$core$IFn$_invoke$arity$variadic = G__31371__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__31371;\n})()\n}));\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$3 = (function (f,g,h){\nreturn (function() {\nvar G__31379 = null;\nvar G__31379__0 = (function (){\nvar G__30968 = (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));\nvar G__30969 = (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30968,G__30969) : f.call(null,G__30968,G__30969));\n});\nvar G__31379__1 = (function (a){\nvar G__30970 = (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(a) : g.call(null,a));\nvar G__30971 = (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(a) : h.call(null,a));\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30970,G__30971) : f.call(null,G__30970,G__30971));\n});\nvar G__31379__2 = (function (a,b){\nvar G__30972 = (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(a,b) : g.call(null,a,b));\nvar G__30973 = (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(a,b) : h.call(null,a,b));\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30972,G__30973) : f.call(null,G__30972,G__30973));\n});\nvar G__31379__3 = (function (a,b,c){\nvar G__30974 = (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(a,b,c) : g.call(null,a,b,c));\nvar G__30975 = (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(a,b,c) : h.call(null,a,b,c));\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30974,G__30975) : f.call(null,G__30974,G__30975));\n});\nvar G__31379__4 = (function() { \nvar G__31381__delegate = function (a,b,c,ds){\nvar G__30976 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,a,b,c,ds);\nvar G__30977 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,a,b,c,ds);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30976,G__30977) : f.call(null,G__30976,G__30977));\n};\nvar G__31381 = function (a,b,c,var_args){\nvar ds = null;\nif (arguments.length > 3) {\nvar G__31382__i = 0, G__31382__a = new Array(arguments.length -  3);\nwhile (G__31382__i < G__31382__a.length) {G__31382__a[G__31382__i] = arguments[G__31382__i + 3]; ++G__31382__i;}\n  ds = new cljs.core.IndexedSeq(G__31382__a,0,null);\n} \nreturn G__31381__delegate.call(this,a,b,c,ds);};\nG__31381.cljs$lang$maxFixedArity = 3;\nG__31381.cljs$lang$applyTo = (function (arglist__31383){\nvar a = cljs.core.first(arglist__31383);\narglist__31383 = cljs.core.next(arglist__31383);\nvar b = cljs.core.first(arglist__31383);\narglist__31383 = cljs.core.next(arglist__31383);\nvar c = cljs.core.first(arglist__31383);\nvar ds = cljs.core.rest(arglist__31383);\nreturn G__31381__delegate(a,b,c,ds);\n});\nG__31381.cljs$core$IFn$_invoke$arity$variadic = G__31381__delegate;\nreturn G__31381;\n})()\n;\nG__31379 = function(a,b,c,var_args){\nvar ds = var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__31379__0.call(this);\ncase 1:\nreturn G__31379__1.call(this,a);\ncase 2:\nreturn G__31379__2.call(this,a,b);\ncase 3:\nreturn G__31379__3.call(this,a,b,c);\ndefault:\nvar G__31384 = null;\nif (arguments.length > 3) {\nvar G__31385__i = 0, G__31385__a = new Array(arguments.length -  3);\nwhile (G__31385__i < G__31385__a.length) {G__31385__a[G__31385__i] = arguments[G__31385__i + 3]; ++G__31385__i;}\nG__31384 = new cljs.core.IndexedSeq(G__31385__a,0,null);\n}\nreturn G__31379__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31384);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31379.cljs$lang$maxFixedArity = 3;\nG__31379.cljs$lang$applyTo = G__31379__4.cljs$lang$applyTo;\nG__31379.cljs$core$IFn$_invoke$arity$0 = G__31379__0;\nG__31379.cljs$core$IFn$_invoke$arity$1 = G__31379__1;\nG__31379.cljs$core$IFn$_invoke$arity$2 = G__31379__2;\nG__31379.cljs$core$IFn$_invoke$arity$3 = G__31379__3;\nG__31379.cljs$core$IFn$_invoke$arity$variadic = G__31379__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__31379;\n})()\n}));\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$4 = (function (f,g,h,i){\nreturn (function() {\nvar G__31386 = null;\nvar G__31386__0 = (function (){\nvar G__30978 = (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));\nvar G__30979 = (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));\nvar G__30980 = (i.cljs$core$IFn$_invoke$arity$0 ? i.cljs$core$IFn$_invoke$arity$0() : i.call(null));\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30978,G__30979,G__30980) : f.call(null,G__30978,G__30979,G__30980));\n});\nvar G__31386__1 = (function (a){\nvar G__30981 = (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(a) : g.call(null,a));\nvar G__30982 = (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(a) : h.call(null,a));\nvar G__30983 = (i.cljs$core$IFn$_invoke$arity$1 ? i.cljs$core$IFn$_invoke$arity$1(a) : i.call(null,a));\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30981,G__30982,G__30983) : f.call(null,G__30981,G__30982,G__30983));\n});\nvar G__31386__2 = (function (a,b){\nvar G__30984 = (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(a,b) : g.call(null,a,b));\nvar G__30985 = (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(a,b) : h.call(null,a,b));\nvar G__30986 = (i.cljs$core$IFn$_invoke$arity$2 ? i.cljs$core$IFn$_invoke$arity$2(a,b) : i.call(null,a,b));\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30984,G__30985,G__30986) : f.call(null,G__30984,G__30985,G__30986));\n});\nvar G__31386__3 = (function (a,b,c){\nvar G__30987 = (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(a,b,c) : g.call(null,a,b,c));\nvar G__30988 = (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(a,b,c) : h.call(null,a,b,c));\nvar G__30989 = (i.cljs$core$IFn$_invoke$arity$3 ? i.cljs$core$IFn$_invoke$arity$3(a,b,c) : i.call(null,a,b,c));\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30987,G__30988,G__30989) : f.call(null,G__30987,G__30988,G__30989));\n});\nvar G__31386__4 = (function() { \nvar G__31394__delegate = function (a,b,c,ds){\nvar G__30990 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,a,b,c,ds);\nvar G__30991 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,a,b,c,ds);\nvar G__30992 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(i,a,b,c,ds);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30990,G__30991,G__30992) : f.call(null,G__30990,G__30991,G__30992));\n};\nvar G__31394 = function (a,b,c,var_args){\nvar ds = null;\nif (arguments.length > 3) {\nvar G__31395__i = 0, G__31395__a = new Array(arguments.length -  3);\nwhile (G__31395__i < G__31395__a.length) {G__31395__a[G__31395__i] = arguments[G__31395__i + 3]; ++G__31395__i;}\n  ds = new cljs.core.IndexedSeq(G__31395__a,0,null);\n} \nreturn G__31394__delegate.call(this,a,b,c,ds);};\nG__31394.cljs$lang$maxFixedArity = 3;\nG__31394.cljs$lang$applyTo = (function (arglist__31397){\nvar a = cljs.core.first(arglist__31397);\narglist__31397 = cljs.core.next(arglist__31397);\nvar b = cljs.core.first(arglist__31397);\narglist__31397 = cljs.core.next(arglist__31397);\nvar c = cljs.core.first(arglist__31397);\nvar ds = cljs.core.rest(arglist__31397);\nreturn G__31394__delegate(a,b,c,ds);\n});\nG__31394.cljs$core$IFn$_invoke$arity$variadic = G__31394__delegate;\nreturn G__31394;\n})()\n;\nG__31386 = function(a,b,c,var_args){\nvar ds = var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__31386__0.call(this);\ncase 1:\nreturn G__31386__1.call(this,a);\ncase 2:\nreturn G__31386__2.call(this,a,b);\ncase 3:\nreturn G__31386__3.call(this,a,b,c);\ndefault:\nvar G__31398 = null;\nif (arguments.length > 3) {\nvar G__31399__i = 0, G__31399__a = new Array(arguments.length -  3);\nwhile (G__31399__i < G__31399__a.length) {G__31399__a[G__31399__i] = arguments[G__31399__i + 3]; ++G__31399__i;}\nG__31398 = new cljs.core.IndexedSeq(G__31399__a,0,null);\n}\nreturn G__31386__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31398);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31386.cljs$lang$maxFixedArity = 3;\nG__31386.cljs$lang$applyTo = G__31386__4.cljs$lang$applyTo;\nG__31386.cljs$core$IFn$_invoke$arity$0 = G__31386__0;\nG__31386.cljs$core$IFn$_invoke$arity$1 = G__31386__1;\nG__31386.cljs$core$IFn$_invoke$arity$2 = G__31386__2;\nG__31386.cljs$core$IFn$_invoke$arity$3 = G__31386__3;\nG__31386.cljs$core$IFn$_invoke$arity$variadic = G__31386__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__31386;\n})()\n}));\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$core$IFn$_invoke$arity$variadic = (function (f,g,h,i,js){\nreturn (function() {\nvar G__31400 = null;\nvar G__31400__0 = (function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)),(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)),(i.cljs$core$IFn$_invoke$arity$0 ? i.cljs$core$IFn$_invoke$arity$0() : i.call(null)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30951_SHARP_){\nreturn (p1__30951_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p1__30951_SHARP_.cljs$core$IFn$_invoke$arity$0() : p1__30951_SHARP_.call(null));\n}),js));\n});\nvar G__31400__1 = (function (a){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(a) : g.call(null,a)),(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(a) : h.call(null,a)),(i.cljs$core$IFn$_invoke$arity$1 ? i.cljs$core$IFn$_invoke$arity$1(a) : i.call(null,a)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30952_SHARP_){\nreturn (p1__30952_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__30952_SHARP_.cljs$core$IFn$_invoke$arity$1(a) : p1__30952_SHARP_.call(null,a));\n}),js));\n});\nvar G__31400__2 = (function (a,b){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(a,b) : g.call(null,a,b)),(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(a,b) : h.call(null,a,b)),(i.cljs$core$IFn$_invoke$arity$2 ? i.cljs$core$IFn$_invoke$arity$2(a,b) : i.call(null,a,b)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30953_SHARP_){\nreturn (p1__30953_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p1__30953_SHARP_.cljs$core$IFn$_invoke$arity$2(a,b) : p1__30953_SHARP_.call(null,a,b));\n}),js));\n});\nvar G__31400__3 = (function (a,b,c){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(a,b,c) : g.call(null,a,b,c)),(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(a,b,c) : h.call(null,a,b,c)),(i.cljs$core$IFn$_invoke$arity$3 ? i.cljs$core$IFn$_invoke$arity$3(a,b,c) : i.call(null,a,b,c)),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30954_SHARP_){\nreturn (p1__30954_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p1__30954_SHARP_.cljs$core$IFn$_invoke$arity$3(a,b,c) : p1__30954_SHARP_.call(null,a,b,c));\n}),js));\n});\nvar G__31400__4 = (function() { \nvar G__31403__delegate = function (a,b,c,ds){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,a,b,c,ds),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,a,b,c,ds),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(i,a,b,c,ds),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__30955_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p1__30955_SHARP_,a,b,c,ds);\n}),js));\n};\nvar G__31403 = function (a,b,c,var_args){\nvar ds = null;\nif (arguments.length > 3) {\nvar G__31404__i = 0, G__31404__a = new Array(arguments.length -  3);\nwhile (G__31404__i < G__31404__a.length) {G__31404__a[G__31404__i] = arguments[G__31404__i + 3]; ++G__31404__i;}\n  ds = new cljs.core.IndexedSeq(G__31404__a,0,null);\n} \nreturn G__31403__delegate.call(this,a,b,c,ds);};\nG__31403.cljs$lang$maxFixedArity = 3;\nG__31403.cljs$lang$applyTo = (function (arglist__31405){\nvar a = cljs.core.first(arglist__31405);\narglist__31405 = cljs.core.next(arglist__31405);\nvar b = cljs.core.first(arglist__31405);\narglist__31405 = cljs.core.next(arglist__31405);\nvar c = cljs.core.first(arglist__31405);\nvar ds = cljs.core.rest(arglist__31405);\nreturn G__31403__delegate(a,b,c,ds);\n});\nG__31403.cljs$core$IFn$_invoke$arity$variadic = G__31403__delegate;\nreturn G__31403;\n})()\n;\nG__31400 = function(a,b,c,var_args){\nvar ds = var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__31400__0.call(this);\ncase 1:\nreturn G__31400__1.call(this,a);\ncase 2:\nreturn G__31400__2.call(this,a,b);\ncase 3:\nreturn G__31400__3.call(this,a,b,c);\ndefault:\nvar G__31406 = null;\nif (arguments.length > 3) {\nvar G__31407__i = 0, G__31407__a = new Array(arguments.length -  3);\nwhile (G__31407__i < G__31407__a.length) {G__31407__a[G__31407__i] = arguments[G__31407__i + 3]; ++G__31407__i;}\nG__31406 = new cljs.core.IndexedSeq(G__31407__a,0,null);\n}\nreturn G__31400__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31406);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31400.cljs$lang$maxFixedArity = 3;\nG__31400.cljs$lang$applyTo = G__31400__4.cljs$lang$applyTo;\nG__31400.cljs$core$IFn$_invoke$arity$0 = G__31400__0;\nG__31400.cljs$core$IFn$_invoke$arity$1 = G__31400__1;\nG__31400.cljs$core$IFn$_invoke$arity$2 = G__31400__2;\nG__31400.cljs$core$IFn$_invoke$arity$3 = G__31400__3;\nG__31400.cljs$core$IFn$_invoke$arity$variadic = G__31400__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__31400;\n})()\n}));\n\n/** @this {Function} */\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$lang$applyTo = (function (seq30957){\nvar G__30958 = cljs.core.first(seq30957);\nvar seq30957__$1 = cljs.core.next(seq30957);\nvar G__30959 = cljs.core.first(seq30957__$1);\nvar seq30957__$2 = cljs.core.next(seq30957__$1);\nvar G__30960 = cljs.core.first(seq30957__$2);\nvar seq30957__$3 = cljs.core.next(seq30957__$2);\nvar G__30961 = cljs.core.first(seq30957__$3);\nvar seq30957__$4 = cljs.core.next(seq30957__$3);\nvar self__5754__auto__ = this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__30958,G__30959,G__30960,G__30961,seq30957__$4);\n}));\n\n(hyperfiddle.electric.impl.runtime.juxt_with.cljs$lang$maxFixedArity = (4));\n\nhyperfiddle.electric.impl.runtime.globals = (function hyperfiddle$electric$impl$runtime$globals(program){\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name),cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.vector_QMARK_),cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p__30993){\nvar vec__30994 = p__30993;\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30994,(0),null);\nvar _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30994,(1),null);\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\"global\",\"global\",93595047),a);\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.second),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.distinct.cljs$core$IFn$_invoke$arity$0()], 0)),cljs.core.tree_seq(cljs.core.coll_QMARK_,cljs.core.seq,program)], 0)));\n});\nhyperfiddle.electric.impl.runtime.missing_exports = (function hyperfiddle$electric$impl$runtime$missing_exports(resolvef,program){\nreturn cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(resolvef,new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"not-found\",\"hyperfiddle.electric.impl.runtime/not-found\",-1898753095)),cljs.core.identity)),cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (p1__30997_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"not-found\",\"hyperfiddle.electric.impl.runtime/not-found\",-1898753095),cljs.core.first(p1__30997_SHARP_));\n})),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.second),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol),hyperfiddle.electric.impl.runtime.globals(program)], 0));\n});\nhyperfiddle.electric.impl.runtime.dynamic_resolve = (function hyperfiddle$electric$impl$runtime$dynamic_resolve(nf,x){\nreturn nf;\n});\nhyperfiddle.electric.impl.runtime.eval = (function hyperfiddle$electric$impl$runtime$eval(var_args){\nvar G__30999 = arguments.length;\nswitch (G__30999) {\ncase 1:\nreturn hyperfiddle.electric.impl.runtime.eval.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn hyperfiddle.electric.impl.runtime.eval.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(hyperfiddle.electric.impl.runtime.eval.cljs$core$IFn$_invoke$arity$1 = (function (inst){\nreturn hyperfiddle.electric.impl.runtime.eval.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.dynamic_resolve,inst);\n}));\n\n(hyperfiddle.electric.impl.runtime.eval.cljs$core$IFn$_invoke$arity$2 = (function (resolvef,inst){\nreturn hyperfiddle.electric.impl.runtime.compile(inst,cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\"lift\",\"lift\",903632035),new cljs.core.Keyword(null,\"variable\",\"variable\",-281346492),new cljs.core.Keyword(null,\"do\",\"do\",46310725),new cljs.core.Keyword(null,\"global\",\"global\",93595047),new cljs.core.Keyword(null,\"sub\",\"sub\",-2093760025),new cljs.core.Keyword(null,\"constant\",\"constant\",-379609303),new cljs.core.Keyword(null,\"static\",\"static\",1214358571),new cljs.core.Keyword(null,\"source\",\"source\",-433931539),new cljs.core.Keyword(null,\"output\",\"output\",-1105869043),new cljs.core.Keyword(null,\"nop\",\"nop\",-1754075182),new cljs.core.Keyword(null,\"dynamic\",\"dynamic\",704819571),new cljs.core.Keyword(null,\"inject\",\"inject\",-1882635533),new cljs.core.Keyword(null,\"literal\",\"literal\",1664775605),new cljs.core.Keyword(null,\"invoke\",\"invoke\",1145927159),new cljs.core.Keyword(null,\"vget\",\"vget\",1720343287),new cljs.core.Keyword(null,\"input\",\"input\",556931961),new cljs.core.Keyword(null,\"target\",\"target\",253001721),new cljs.core.Keyword(null,\"main\",\"main\",-2117802661),new cljs.core.Keyword(null,\"pub\",\"pub\",-1189143908),new cljs.core.Keyword(null,\"bind\",\"bind\",-113428417),new cljs.core.Keyword(null,\"eval\",\"eval\",-1103567905)],[(function (form){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.pure((form.cljs$core$IFn$_invoke$arity$3 ? form.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : form.call(null,pubs,frame,vars)));\n});\n}),(function (form,remote,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.variable(frame,vars,(remote + slot),slot,(form.cljs$core$IFn$_invoke$arity$3 ? form.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : form.call(null,pubs,frame,vars)));\n});\n}),(function (deps,inst__$1){\nreturn (function (pubs,frame,vars){\nhyperfiddle.electric.impl.runtime.make_input(frame,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (inst__$2){\nreturn (inst__$2.cljs$core$IFn$_invoke$arity$3 ? inst__$2.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : inst__$2.call(null,pubs,frame,vars));\n}),deps));\n\nreturn (inst__$1.cljs$core$IFn$_invoke$arity$3 ? inst__$1.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : inst__$1.call(null,pubs,frame,vars));\n});\n}),(function (x){\nvar r = (resolvef.cljs$core$IFn$_invoke$arity$2 ? resolvef.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"not-found\",\"hyperfiddle.electric.impl.runtime/not-found\",-1898753095),x) : resolvef.call(null,new cljs.core.Keyword(\"hyperfiddle.electric.impl.runtime\",\"not-found\",\"hyperfiddle.electric.impl.runtime/not-found\",-1898753095),x));\nvar G__31000 = r;\nvar G__31000__$1 = (((G__31000 instanceof cljs.core.Keyword))?G__31000.fqn:null);\nswitch (G__31000__$1) {\ncase \"hyperfiddle.electric.impl.runtime/not-found\":\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\"Unable to resolve symbol: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(x))].join(''),cljs.core.PersistentArrayMap.EMPTY);\n\nbreak;\ndefault:\nreturn cljs.core.constantly(hyperfiddle.electric.impl.runtime.pure(r));\n\n}\n}),(function (idx){\nreturn (function (pubs,frame,vars){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pubs,idx);\n});\n}),(function (debug_info,form,static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.constant(frame,slot,hyperfiddle.electric.impl.runtime.constructor$(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(pubs,static$),dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,(function() { \nvar G__31416__delegate = function (args){\nreturn hyperfiddle.electric.impl.runtime.check_failure(debug_info,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(form,pubs,args));\n};\nvar G__31416 = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__31417__i = 0, G__31417__a = new Array(arguments.length -  0);\nwhile (G__31417__i < G__31417__a.length) {G__31417__a[G__31417__i] = arguments[G__31417__i + 0]; ++G__31417__i;}\n  args = new cljs.core.IndexedSeq(G__31417__a,0,null);\n} \nreturn G__31416__delegate.call(this,args);};\nG__31416.cljs$lang$maxFixedArity = 0;\nG__31416.cljs$lang$applyTo = (function (arglist__31418){\nvar args = cljs.core.seq(arglist__31418);\nreturn G__31416__delegate(args);\n});\nG__31416.cljs$core$IFn$_invoke$arity$variadic = G__31416__delegate;\nreturn G__31416;\n})()\n));\n});\n}),(function (slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.static$(frame,slot);\n});\n}),(function (remote,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.source(frame,vars,(remote + slot),slot);\n});\n}),(function (debug_info,form,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.make_output(slot,hyperfiddle.electric.impl.runtime.check_failure(debug_info,(form.cljs$core$IFn$_invoke$arity$3 ? form.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : form.call(null,pubs,frame,vars))));\n});\n}),cljs.core.constantly(null),(function (slot,debug_info){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.dynamic(frame,slot,debug_info);\n});\n}),(function (slot){\nreturn cljs.core.constantly(hyperfiddle.electric.impl.runtime.pure(hyperfiddle.electric.impl.runtime.inject(slot)));\n}),(function (x){\nreturn cljs.core.constantly(hyperfiddle.electric.impl.runtime.pure(x));\n}),(function() { \nvar G__31421__delegate = function (debug_info,forms){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(hyperfiddle.electric.impl.runtime.juxt_with,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(hyperfiddle.electric.impl.runtime.latest_apply,debug_info),forms);\n};\nvar G__31421 = function (debug_info,var_args){\nvar forms = null;\nif (arguments.length > 1) {\nvar G__31422__i = 0, G__31422__a = new Array(arguments.length -  1);\nwhile (G__31422__i < G__31422__a.length) {G__31422__a[G__31422__i] = arguments[G__31422__i + 1]; ++G__31422__i;}\n  forms = new cljs.core.IndexedSeq(G__31422__a,0,null);\n} \nreturn G__31421__delegate.call(this,debug_info,forms);};\nG__31421.cljs$lang$maxFixedArity = 1;\nG__31421.cljs$lang$applyTo = (function (arglist__31423){\nvar debug_info = cljs.core.first(arglist__31423);\nvar forms = cljs.core.rest(arglist__31423);\nreturn G__31421__delegate(debug_info,forms);\n});\nG__31421.cljs$core$IFn$_invoke$arity$variadic = G__31421__delegate;\nreturn G__31421;\n})()\n,(function (slot){\nreturn (function (pubs,frame,vars){\nreturn (vars[(slot | (0))]);\n});\n}),(function (deps,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.input_spawn(frame,slot,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (inst__$1){\nreturn (inst__$1.cljs$core$IFn$_invoke$arity$3 ? inst__$1.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : inst__$1.call(null,pubs,frame,vars));\n}),deps));\n});\n}),(function (deps,static$,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,slot){\nreturn (function (pubs,frame,vars){\nreturn hyperfiddle.electric.impl.runtime.target(frame,slot,hyperfiddle.electric.impl.runtime.constructor$(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(pubs,static$),dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,(function (frame__$1,vars__$1){\nreturn hyperfiddle.electric.impl.runtime.make_input(frame__$1,cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((function (inst__$1){\nreturn (inst__$1.cljs$core$IFn$_invoke$arity$3 ? inst__$1.cljs$core$IFn$_invoke$arity$3(pubs,frame__$1,vars__$1) : inst__$1.call(null,pubs,frame__$1,vars__$1));\n}),deps));\n})));\n});\n}),(function (form,var_count,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count){\nreturn hyperfiddle.electric.impl.runtime.peer(var_count,dynamic,variable_count,source_count,constant_count,target_count,output_count,input_count,cljs.core.partial.cljs$core$IFn$_invoke$arity$2(form,cljs.core.PersistentVector.EMPTY));\n}),(function (form,cont,_){\nreturn (function (pubs,frame,vars){\nvar G__31001 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(pubs,hyperfiddle.electric.impl.runtime.signal((form.cljs$core$IFn$_invoke$arity$3 ? form.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : form.call(null,pubs,frame,vars))));\nvar G__31002 = frame;\nvar G__31003 = vars;\nreturn (cont.cljs$core$IFn$_invoke$arity$3 ? cont.cljs$core$IFn$_invoke$arity$3(G__31001,G__31002,G__31003) : cont.call(null,G__31001,G__31002,G__31003));\n});\n}),(function (form,slot,s){\nreturn (function (pubs,frame,vars){\nvar prev = (vars[(slot | (0))]);\n(vars[(slot | (0))] = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pubs,s));\n\nvar res = (form.cljs$core$IFn$_invoke$arity$3 ? form.cljs$core$IFn$_invoke$arity$3(pubs,frame,vars) : form.call(null,pubs,frame,vars));\n(vars[(slot | (0))] = prev);\n\nreturn res;\n});\n}),(function (form,ns){\nvar temp__5806__auto__ = (function (){var G__31004 = ns;\nif((G__31004 == null)){\nreturn null;\n} else {\nreturn cljs.core.find_ns(G__31004);\n}\n})();\nif((temp__5806__auto__ == null)){\nreturn cljs.core.constantly(hyperfiddle.electric.impl.runtime.pure(cljs.core.eval(form)));\n} else {\nvar ns__$1 = temp__5806__auto__;\nreturn cljs.core.constantly(hyperfiddle.electric.impl.runtime.pure((function (){var _STAR_ns_STAR__orig_val__31005 = cljs.core._STAR_ns_STAR_;\nvar _STAR_ns_STAR__temp_val__31006 = ns__$1;\n(cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR__temp_val__31006);\n\ntry{return cljs.core.eval(form);\n}finally {(cljs.core._STAR_ns_STAR_ = _STAR_ns_STAR__orig_val__31005);\n}})()));\n}\n})]));\n}));\n\n(hyperfiddle.electric.impl.runtime.eval.cljs$lang$maxFixedArity = 2);\n\nhyperfiddle.electric.impl.runtime.queue = (function hyperfiddle$electric$impl$runtime$queue(){\nvar q = cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((0));\nreturn (function() {\nvar G__31430 = null;\nvar G__31430__0 = (function (){\nif((q.length === (0))){\nthrow (new Error(\"No such element.\"));\n} else {\n}\n\nreturn q.shift();\n});\nvar G__31430__1 = (function (x){\nq.push(x);\n\nreturn x;\n});\nG__31430 = function(x){\nswitch(arguments.length){\ncase 0:\nreturn G__31430__0.call(this);\ncase 1:\nreturn G__31430__1.call(this,x);\n}\nthrow(new Error('Invalid arity: ' + arguments.length));\n};\nG__31430.cljs$core$IFn$_invoke$arity$0 = G__31430__0;\nG__31430.cljs$core$IFn$_invoke$arity$1 = G__31430__1;\nreturn G__31430;\n})()\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","hyperfiddle/electric/impl/runtime.cljc","~:line",1,"~:column",14,"~:end-line",1,"~:end-column",47,"~:no-doc",true],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.math","~$cljs.math","~$clojure.core","~$cljs.core"],"~:use-macros",["^ ","~$tests","~$hyperfiddle.rcf"],"~:excludes",["~#set",["~$compile","~$eval"]],"~:name","~$hyperfiddle.electric.impl.runtime","~:reader-aliases",["^ "],"~:op","~:ns","~:imports",["^ ","~$Cancelled","~$missionary.Cancelled","~$Failure","~$hyperfiddle.electric.Failure","~$Pending","~$hyperfiddle.electric.Pending","~$Remote","~$hyperfiddle.electric.Remote"],"~:requires",["^ ","^T","^U","~$ir","~$hyperfiddle.electric.impl.ir","~$hyperfiddle.electric.debug","^13","^W","^W","^12","^12","~$data","~$contrib.data","~$missionary.core","^16","~$hyperfiddle.electric.impl.local","^17","~$dbg","^13","^V","^W","^F","^F","^X","^Y","~$goog","^19","~$hyperfiddle.electric.impl.yield2","^1:","~$m","^16","^I","^I","^[","^[","^15","^15","~$l","^17","~$hyperfiddle.electric.impl.failer","^1;","~$str","~$clojure.string","^Z","^[","^1=","^1=","^Y","^Y","~$failer","^1;"],"~:seen",["^K",["~:require"]],"~:uses",["^ ","~$yield","^1:","^H","^I"],"~:require-macros",["^ ","^14","^15","^16","^16","^17","^17","^F","^F","^1:","^1:","~$m","^16","^I","^I","^15","^15","~$l","^17"],"~:form",["~#list",["~$ns","^O",["^1E",["~:refer-clojure","~:exclude",["^M","^L"]]],["^1E",["^1@",["^1:","~:refer",["^1B"]],["^1;","~:as","^1>"],["^17","^1J","~$l"],["^12","^1J","^11"],["^13","^1J","^18"],["^16","^1J","~$m"],["^I","^1I",["^H"]],["^1=","^1J","^1<"],["^15","^1J","^14"]]],["^1E",["~:import","^U",["^1E",["~$hyperfiddle.electric","^V","^X","^Z"]]]]]],"~:flags",["^ ","^1@",["^K",[]]],"~:js-deps",["^ "],"~:deps",["^19","^F","^1:","^1;","^17","^12","^13","^16","^I","^1=","^15","^U","^W","^Y","^["]],"^R","^O","~:resource-id",["~:shadow.build.classpath/resource","hyperfiddle/electric/impl/runtime.cljc"],"~:compiled-at",1693922840449,"^P",["^ ","^T","^U","^11","^12","^13","^13","^W","^W","^12","^12","^14","^15","^16","^16","^17","^17","^18","^13","^V","^W","^F","^F","^X","^Y","^19","^19","^1:","^1:","~$m","^16","^I","^I","^[","^[","^15","^15","~$l","^17","^1;","^1;","^1<","^1=","^Z","^[","^1=","^1=","^Y","^Y","^1>","^1;"],"~:resource-name","hyperfiddle/electric/impl/runtime.cljc","~:warnings",[],"~:source","(ns ^:no-doc hyperfiddle.electric.impl.runtime\n  (:refer-clojure :exclude [eval compile])\n  (:require [hyperfiddle.electric.impl.yield2 :refer [yield]]\n            [hyperfiddle.electric.impl.failer :as failer]\n            [hyperfiddle.electric.impl.local :as l]\n            [hyperfiddle.electric.impl.ir :as ir]\n            [hyperfiddle.electric.debug :as dbg]\n            [missionary.core :as m]\n            [hyperfiddle.rcf :refer [tests]]\n            [clojure.string :as str]\n            [contrib.data :as data])\n  (:import missionary.Cancelled\n           (hyperfiddle.electric Failure Pending Remote)\n           #?(:clj (clojure.lang IFn IDeref Atom))))\n\n;; An Electric program is a tree, which structure is dynamically maintained.\n;; Two peers are synchronized (through a protocol) such that the tree structure is identicaly on both peers.\n;; Two type of nodes:\n;; [Frames] : A piece of DAG with a static structure. Won't be rearanged at runtime. (AKA Static Frame)\n;;            - A set of compiled s-expressions + a set of signals weaving these expressions + N inputs + N outputs\n;;            - A frame has 2 instances, one on client, one on server.\n;;            - Server's outputs are client's inputs and vice-versa.\n;;            - Frames are processes.\n;;            - Image: a stackframe but for a DAG. A stackframe is allocated to compute the result of a function.\n;;              It is volatile (disposable) in a stack-based program. Since Electric is reactive, the frame is not disposable.\n;;              «ReactiveFrame» «Distributed Reactive Frame»\n;; [Tiers] : For each `new` in a frame, a managed process is created. Tiers are child processes of frames. (AKA Dynamic Frame)\n;;             - Parent process of a tier is always a frame.\n;;             - Parent process of a frame is alawys a tier.\n;;             - Specificity: Frames have a fixed set of children, tiers have a dynamic set of children, they can spawn new frames anytime.\n;;                            Child frames of a tier are positioned (there is a well defined traversal order)\n;;                            Node order (positions) can change at runtime because tiers can spawn dynamically (e.g.: p/for).\n;;             - Some tiers don't have child frames : e.g. (new (m/watch .)), no child frames, no input, no output\n;;             - Some frames don't have child tiers : e.g. a frame without any `new`, no variability.\n;;             - (image: an ordered tree with different kind of nodes at each generation)\n\n;; Network protocol\n;; Each peer streams events to its remote peer via a bidirectional channel. An event is a clojure map with 4 entries :\n;; * :acks is a non-negative integer counting the number of non-empty changesets received by the peer sending the event\n;;   since the previous event was sent.\n;; * :tree is a vector of tree instructions. Order of instructions matters. A tree instruction describes an atomic mutation of the tree, it is a map\n;;   with a mandatory :op entry defining the instruction type and defining the rest of the keyset. Instructions are :\n;;   * :create appends a new frame at the end of a tier, owned by the peer sending the event. The frame constructor is\n;;     defined by the entry :target, the endpoint is defined by the entry :source. Both are ordered pairs of two\n;;     numbers, the frame id and the position of the target or the source in the frame.\n;;   * :rotate performs of cyclic permutation of frames in a tier, owned by the peer sending the event. The frame\n;;     identified by the :frame entry is moved to position defined by the :position entry. If the cycle is trivial (A -> A), the\n;;     frame is removed.\n;;   * :remove dissociates a frame from the index. legacy hack, should be removed.\n;; * :change is a map associating ports with values. A port is absolute for the system, inputs and output relative terms for a port (it only make sense from a single peer perspective).\n;;   A port is represented as an ordered pair of two numbers, a frame id\n;;   and the position of this port in the frame. The value is the new state of port. (:assign could be a synonym)\n;; * :freeze is a set of ports. Each port present in this set must be considered terminated (i.e. its state won't ever\n;;   change again).\n;; A frame id is negative if the frame is owned by the peer sending the event, positive if the frame is owned by the\n;; peer receiving the event, zero is the root frame.\n\n\n(defn fail [x] (throw x))\n\n(def failure (some-fn #(when (instance? Failure %) %)))\n\n(def pending (Failure. (Pending.)))\n\n(defn error [^String msg] ; Could be ex-info (ExceptionInfo inherits Error or js/Error)\n  (#?(:clj Error. :cljs js/Error.) msg))\n\n(defn pst [e]\n  #?(:clj (.printStackTrace ^Throwable e)\n     :cljs (js/console.error e)))\n\n(defn select-debug-info [debug-info]\n  (merge (select-keys debug-info [::ir/op]) (data/select-ns :hyperfiddle.electric.debug debug-info)))\n\n(defn check-failure [debug-info <x]\n  (m/latest (fn [x]\n              (if (instance? Failure x)\n                (dbg/error (select-debug-info debug-info) x)\n                x)) <x))\n\n(defn latest-apply [debug-info & args]\n  (apply m/latest\n    (fn [f & args]\n      (if-let [err (apply failure f args)]\n        (dbg/error (assoc (select-debug-info debug-info) ::dbg/args args) err)\n        (try (apply f args)\n             (catch #?(:clj Throwable :cljs :default) e\n               (dbg/error (assoc (select-debug-info debug-info) ::dbg/args args) (Failure. e))))))\n    args))\n\n(def latest-first\n  (partial m/latest\n    (fn [x y] (if (instance? Failure y) y x))))\n\n(defn pure [x] (m/cp x))\n\n(def empty-event\n  {:acks 0\n   :tree []\n   :change {}\n   :freeze #{}})\n\n(deftype It [state cancel transfer]\n  IFn\n  (#?(:clj invoke :cljs -invoke) [_]\n    (cancel state))\n  IDeref\n  (#?(:clj deref :cljs -deref) [_]\n    (transfer state)))\n\n(def lift-cancelled\n  (partial comp\n    (fn [it]\n      (reify\n        IFn\n        (#?(:clj invoke :cljs -invoke) [_] (it))\n        IDeref\n        (#?(:clj deref :cljs -deref) [_]\n          (try @it (catch Cancelled e (Failure. e))))))))\n\n(defn signal [<x]\n  (m/signal! (lift-cancelled <x)))\n\n(def this (l/local))\n\n(def context-slot-root            (int 0))   ;; Immutable. The root frame.\n(def context-slot-local-id        (int 1))   ;; The next local id (auto incremented).\n(def context-slot-remote-id       (int 2))   ;; The next remote id (auto decremented).\n(def context-slot-pending-rpos    (int 3))   ;; The reading position in the pending circular buffer.\n(def context-slot-pending-wpos    (int 4))   ;; The writing position in the pending circular buffer.\n(def context-slot-pending-buffer  (int 5))   ;; The pending circular buffer of outputs changed for each message sent.\n(def context-slot-frame-store     (int 6))   ;; A transient map associating frame ids to frame objects.\n(def context-slot-event           (int 7))   ;; The next event to transfer.\n(def context-slot-check           (int 8))   ;; The set of inputs that must be checked on next event transfer.\n(def context-slot-notifier        (int 9))   ;; The notifier callback\n(def context-slot-terminator      (int 10))  ;; The terminator callback\n(def context-slot-incoming        (int 11))  ;; The incoming callback\n(def context-slots                (int 12))\n\n(def tier-slot-parent   (int 0))    ;; Immutable. The parent frame.\n(def tier-slot-position (int 1))    ;; Immutable. The static position of the tier in the parent frame.\n(def tier-slot-buffer   (int 2))    ;; Buffer of array list of child frames.\n(def tier-slot-size     (int 3))    ;; Size of array list of child frames.\n(def tier-slot-foreigns (int 4))    ;; Foreign flow map\n(def tier-slot-hooks    (int 5))    ;; Hooks\n(def tier-slot-vars     (int 6))    ;; A snapshot of the dynamic environment.\n(def tier-slot-remote   (int 7))    ;; If local, the slot of the remote part.\n(def tier-slots         (int 8))\n\n(def frame-slot-context   (int 0))  ;; Immutable. The global context.\n(def frame-slot-parent    (int 1))  ;; Immutable. The parent tier, nil iff root frame.\n(def frame-slot-id        (int 2))  ;; Immutable. Zero if root frame, a strictly positive number if the frame was created by a variable, a strictly negative number if the frame was created by a source.\n(def frame-slot-position  (int 3))  ;; The index of the frame among its siblings.\n(def frame-slot-foreign   (int 4))  ;; Immutable\n(def frame-slot-static    (int 5))  ;; Immutable\n(def frame-slot-dynamic   (int 6))  ;; Immutable\n(def frame-slot-variables (int 7))  ;; Immutable\n(def frame-slot-sources   (int 8))  ;; Immutable\n(def frame-slot-targets   (int 9))  ;; Immutable\n(def frame-slot-inputs    (int 10)) ;; Immutable\n(def frame-slot-tiers     (int 11)) ;; Immutable\n(def frame-slot-constants (int 12)) ;; Immutable\n(def frame-slots          (int 13))\n\n(def input-slot-frame      (int 0))                         ;; parent frame\n(def input-slot-notifier   (int 1))                         ;; consumer notifier\n(def input-slot-terminator (int 2))                         ;; consumer terminator\n(def input-slot-current    (int 3))                         ;; current state\n(def input-slot-dirty      (int 4))                         ;; head of linked list of dirty outputs\n(def input-slot-check      (int 5))                         ;; next item in linked list of check inputs\n(def input-slot-pending    (int 6))                         ;; number of outputs waiting for ack\n(def input-slot-cancel     (int 7))                         ;; nil when no pending transfer, otherwise cancel status\n(def input-slots           (int 8))\n\n(def output-slot-input    (int 0))                          ;; parent input\n(def output-slot-id       (int 1))                          ;; output id, relative to parent frame\n(def output-slot-iterator (int 2))                          ;; producer iterator\n(def output-slot-current  (int 3))                          ;; current state\n(def output-slot-dirty    (int 4))                          ;; tail of linked list of dirty outputs\n(def output-slot-done     (int 5))                          ;; frozen\n(def output-slot-prev     (int 6))                          ;; previous item in doubly linked list of pending outputs\n(def output-slot-next     (int 7))                          ;; next item in doubly linked list of pending outputs\n(def output-slot-time     (int 8))                          ;; position of the doubly linked list of pending outputs in the circular buffer, nil if not pending\n(def output-slots         (int 9))\n\n(defn aswap\n  ([^objects arr slot f]\n   (aset arr slot (f (aget arr slot))))\n  ([^objects arr slot f a]\n   (aset arr slot (f (aget arr slot) a)))\n  ([^objects arr slot f a b]\n   (aset arr slot (f (aget arr slot) a b)))\n  ([^objects arr slot f a b c]\n   (aset arr slot (f (aget arr slot) a b c)))\n  ([^objects arr slot f a b c & ds]\n   (aset arr slot (apply f (aget arr slot) a b c ds))))\n\n(defn doto-aset [^objects arr k v]\n  (doto arr (aset (int k) v)))\n\n(defn make-context ^objects []\n  (doto (object-array context-slots)\n    (aset context-slot-local-id (identity 0))\n    (aset context-slot-remote-id (identity 0))\n    (aset context-slot-pending-rpos (identity 0))\n    (aset context-slot-pending-wpos (identity 0))\n    (aset context-slot-pending-buffer (object-array 2))\n    (aset context-slot-frame-store (transient {}))))\n\n(defn make-tier [^objects parent position]\n  (aset ^objects (aget parent frame-slot-tiers) (int position)\n    (doto (object-array tier-slots)\n      (aset tier-slot-parent parent)\n      (aset tier-slot-position position)\n      (aset tier-slot-buffer (object-array 8))\n      (aset tier-slot-size (identity (int 0)))\n      (aset tier-slot-foreigns {})\n      (aset tier-slot-hooks {}))))\n\n(defn make-frame [^objects context parent id position\n                  foreign static dynamic variable-count source-count\n                  constant-count target-count output-count input-count\n                  ^objects buffer ^objects vars boot]\n  (let [tier-count (+ variable-count source-count)\n        frame (doto (object-array frame-slots)\n                (aset frame-slot-context context)\n                (aset frame-slot-parent parent)\n                (aset frame-slot-id id)\n                (aset frame-slot-position position)\n                (aset frame-slot-foreign (object-array (count foreign)))\n                (aset frame-slot-static (object-array (count static)))\n                (aset frame-slot-dynamic (object-array (count dynamic)))\n                (aset frame-slot-variables (object-array variable-count))\n                (aset frame-slot-sources (object-array source-count))\n                (aset frame-slot-targets (object-array target-count))\n                (aset frame-slot-inputs (object-array input-count))\n                (aset frame-slot-tiers (object-array tier-count))\n                (aset frame-slot-constants (object-array constant-count)))]\n    (dotimes [i tier-count] (make-tier frame i))\n    (aset buffer (int position) frame)\n    (aswap context context-slot-frame-store assoc! id frame)\n    (let [prevs (reduce-kv\n                  (fn [m v <x]\n                    (let [prev (aget vars (int v))\n                          proc (signal <x)]\n                      (aset ^objects (aget frame frame-slot-foreign) (count m) proc)\n                      (aset vars (int v) proc)\n                      (assoc m v prev)))\n                  {} foreign)]\n      (reduce-kv (fn [^objects arr i <x]\n                   (aset arr (int i) (signal <x)) arr)\n        (aget frame frame-slot-static) static)\n      (reduce-kv (fn [^objects arr i v]\n                   (aset arr (int i) (signal (aget vars (int v)))) arr)\n        (aget frame frame-slot-dynamic) dynamic)\n      (let [result (boot frame vars)]\n        (reduce-kv doto-aset vars prevs)\n        result))))\n\n(defn input-ready [^objects input]\n  (when (nil? (aget input input-slot-cancel))\n    (aset input input-slot-cancel false)\n    ((aget input input-slot-notifier))))\n\n(defn output-dirty [^objects output]\n  (let [^objects input (aget output output-slot-input)\n        ^objects dirty (aget input input-slot-dirty)]\n    (aset output output-slot-dirty dirty)\n    (aset input input-slot-dirty output)\n    (when (nil? dirty)\n      (when (identical? input (aget input input-slot-check))\n        (let [^objects frame (aget input input-slot-frame)\n              ^objects context (aget frame frame-slot-context)\n              ^objects check (aget context context-slot-check)]\n          (aset context context-slot-check input)\n          (aset input input-slot-check check)\n          (when (nil? (aget context context-slot-event))\n            (aset context context-slot-event empty-event)\n            ((aget context context-slot-notifier))))))\n    (input-ready input)))\n\n(defn output-spawn [^objects input ^objects output]\n  (when-not (nil? output)\n    (aset output output-slot-input input)\n    (aset output output-slot-iterator\n      ((aget output output-slot-iterator)\n       (fn [] (output-dirty output))\n       (fn []\n         (aset output output-slot-done true)\n         (output-dirty output)))))\n  input)\n\n(defn make-output [id <x]\n  (let [output (object-array output-slots)]\n    (aset output output-slot-id id)\n    (aset output output-slot-done false)\n    (aset output output-slot-prev output)\n    (aset output output-slot-next output)\n    (aset output output-slot-dirty output)\n    (aset output output-slot-current output)\n    (aset output output-slot-iterator <x)\n    output))\n\n(defn input-cancel [^objects input]\n  (let [c (aget input input-slot-cancel)]\n    (aset input input-slot-cancel true)\n    (when (nil? c) ((aget input input-slot-notifier)))))\n\n(defn input-change [^objects input x]\n  (aset input input-slot-current x)\n  (input-ready input))\n\n(defn input-freeze [^objects input]\n  (aset input input-slot-pending -1)\n  (when (nil? (aget input input-slot-cancel))\n    (aset input input-slot-cancel false)\n    ((aget input input-slot-terminator))))\n\n(defn update-event [^objects context k f & args]\n  (if-some [event (aget context context-slot-event)]\n    (aset context context-slot-event (apply update event k f args))\n    (do (aset context context-slot-event (apply update empty-event k f args))\n        ((aget context context-slot-notifier)))))\n\n(defn input-check [^objects input]\n  (let [^objects frame (aget input input-slot-frame)\n        ^objects context (aget frame frame-slot-context)]\n    (loop []\n      (if-some [^objects output (aget input input-slot-dirty)]\n        (let [path [(- (aget frame frame-slot-id)) (aget output output-slot-id)]]\n          (aset input input-slot-dirty (aget output output-slot-dirty))\n          (aset output output-slot-dirty output)\n          (if (aget output output-slot-done)\n            (update-event context :freeze conj path)\n            (let [x @(aget output output-slot-iterator)]\n              (when-not (= (aget output output-slot-current) (aset output output-slot-current x))\n                (let [^objects buffer (aget context context-slot-pending-buffer)\n                      wpos (aget context context-slot-pending-wpos)]\n                  (if-some [t (aget output output-slot-time)]\n                    (let [^objects p (aget output output-slot-prev)\n                          ^objects n (aget output output-slot-next)]\n                      (aset buffer t\n                        (when-not (identical? p output)\n                          (aset p output-slot-next n)\n                          (aset n output-slot-prev p))))\n                    (aswap input input-slot-pending inc))\n                  (aset output output-slot-time wpos)\n                  (if-some [^objects p (aget buffer wpos)]\n                    (let [^objects n (aget p output-slot-next)]\n                      (aset p output-slot-next output)\n                      (aset n output-slot-prev output)\n                      (aset output output-slot-prev p)\n                      (aset output output-slot-next n))\n                    (do (aset buffer wpos output)\n                        (aset output output-slot-prev output)\n                        (aset output output-slot-next output)))\n                  (update-event context :change assoc path x)))))\n          (recur))))))\n\n(defn input-transfer [^objects input]\n  (input-check input)\n  (if (aget input input-slot-cancel)\n    (do ((aget input input-slot-terminator))\n        (throw (Cancelled.)))\n    (case (aget input input-slot-pending)\n      -1 (do ((aget input input-slot-terminator))\n             (aget input input-slot-current))\n      0 (do (aset input input-slot-cancel nil)\n            (aget input input-slot-current))\n      (do (aset input input-slot-cancel nil)\n          pending))))\n\n(defn make-input [^objects frame deps]\n  (let [input (object-array input-slots)]\n    (aset input input-slot-frame frame)\n    (aset input input-slot-pending 0)\n    (aset input input-slot-current pending)\n    (aset input input-slot-cancel false)\n    (aset input input-slot-check input)\n    (reduce output-spawn input deps)))\n\n(defn input-spawn [^objects frame slot deps]\n  (m/signal!                                                ;; inputs are cancelled when reactor is cancelled\n    (fn [n t]\n      (let [input (make-input frame deps)]\n        (aset input input-slot-notifier n)\n        (aset input input-slot-terminator t)\n        (aset ^objects (aget frame frame-slot-inputs) (int slot) input)\n        (n) (->It input input-cancel input-transfer)))))\n\n(defn check-unbound-var [debug-info <x]\n  (m/latest (fn [x]\n              (if (= ::unbound x)\n                (Failure. (error (str \"Unbound var `\" (::dbg/name debug-info) \"`\")))\n                x)) <x))\n\n(defn static [^objects frame slot]\n  (aget ^objects (aget frame frame-slot-static) (int slot)))\n\n(defn dynamic [^objects frame slot debug-info]\n  (check-unbound-var debug-info (aget ^objects (aget frame frame-slot-dynamic) (int slot))))\n\n(defn tree\n  \"A snapshot of the tree below given frame, as nested vectors. Frame vectors start with their id.\"\n  [^objects f]\n  (let [^objects tiers (aget f frame-slot-tiers)]\n    (loop [v []\n           i (int 0)]\n      (if (== i (alength tiers))\n        {:id (aget f frame-slot-id)\n         :inputs (alength ^objects (aget f frame-slot-inputs))\n         :targets (alength ^objects (aget f frame-slot-targets))\n         :sources (alength ^objects (aget f frame-slot-sources))\n         :tiers v}\n        (recur\n          (conj v\n            (let [^objects tier (aget tiers i)\n                  ^objects buf (aget tier tier-slot-buffer)]\n              (loop [v []\n                     i (int 0)]\n                (if (== i (aget tier tier-slot-size))\n                  v (recur (conj v (tree (aget buf i)))\n                      (inc i))))))\n          (inc i))))))\n\n(defn find-scope [f]\n  (loop [f f\n         s #{}]\n    (if-some [^objects tier (aget ^objects f frame-slot-parent)]\n      (recur (aget tier tier-slot-parent)\n        (into s (keys (aget tier tier-slot-hooks)))) s)))\n\n(declare tier-walk-frames)\n(defn frame-walk-tiers [^objects frame step k cb start]\n  (let [^objects tiers (aget frame frame-slot-tiers)\n        size (alength tiers)\n        back (bit-shift-right (- 1 step) 1)\n        back-inc-size (* back (inc size))\n        stop (- size back-inc-size)]\n    (loop [i (if (nil? start) (dec back-inc-size) start)]\n      (let [i (+ i step)]\n        (when-not (== i stop)\n          (if-some [x (let [^objects tier (aget tiers i)]\n                        (if-some [v (get (aget tier tier-slot-hooks) k)]\n                          (cb v) (tier-walk-frames tier step k cb nil)))]\n            x (recur i)))))))\n\n(defn tier-walk-frames [^objects tier step k cb start]\n  (let [^objects buf (aget tier tier-slot-buffer)\n        size (aget tier tier-slot-size)\n        back (bit-shift-right (- 1 step) 1)\n        back-inc-size (* back (inc size))\n        stop (- size back-inc-size)]\n    (loop [i (if (nil? start) (dec back-inc-size) start)]\n      (let [i (+ i step)]\n        (when-not (== i stop)\n          (if-some [x (frame-walk-tiers (aget buf i) step k cb nil)]\n            x (recur i)))))))\n\n(defn notify-rotate [f k]\n  (let [anchor (loop [^objects f f]\n                 (let [tier ^objects (aget f frame-slot-parent)]\n                   (when-not (contains? (aget tier tier-slot-hooks) k)\n                     (if-some [a (tier-walk-frames tier 1 k identity\n                                   (aget f frame-slot-position))]\n                       a (recur (aget tier tier-slot-parent))))))]\n    (frame-walk-tiers f 1 k (fn [target] (k target anchor)) nil) f))\n\n(defn array-call [^objects arr]\n  (dotimes [i (alength arr)]\n    ((aget arr i))))\n\n(defn frame-dispose [^objects f]\n  (aset f frame-slot-position nil)\n  (array-call (aget f frame-slot-static))\n  (array-call (aget f frame-slot-dynamic))\n  (array-call (aget f frame-slot-foreign))\n  (array-call (aget f frame-slot-variables))\n  (array-call (aget f frame-slot-constants)))\n\n(defn frame-rotate [^objects f to]\n  (let [from (aget f frame-slot-position)\n        step (compare to from)\n        ^objects tier (aget f frame-slot-parent)\n        ^objects buf (aget tier tier-slot-buffer)]\n    (if (== to from)\n      (let [size (dec (aget tier tier-slot-size))]\n        (loop [i to]\n          (when-not (== i size)\n            (let [j (inc i)\n                  y (aget buf (int j))]\n              (aset ^objects y frame-slot-position i)\n              (aset buf (int i) y)\n              (recur j))))\n        (aset tier tier-slot-size size)\n        (aset buf (int size) nil)\n        (frame-dispose f))\n      (do (loop [i from]\n            (let [j (+ i step)\n                  ^objects y (aget buf (int j))]\n              (aset y frame-slot-position i)\n              (aset buf (int i) y)\n              (when-not (== to j) (recur j))))\n          (aset f frame-slot-position to)\n          (aset buf (int to) f)\n          (reduce notify-rotate f\n            (find-scope f))))))\n\n(defn move\n  \"Move a frame. If origin position is equal to target position, frame is removed. Will search and call `hook`.\"\n  ([^objects tier from to]\n   (let [f (aget ^objects (aget tier tier-slot-buffer) (int from))]\n     (update-event (aget f frame-slot-context) :tree conj\n       {:op       :rotate\n        :frame    (- (aget f frame-slot-id))\n        :position to})\n     (frame-rotate f to))))\n\n(defn frame-cancel [^objects f]\n  (when-some [pos (aget f frame-slot-position)]\n    (update-event (aget f frame-slot-context) :tree conj\n      {:op       :rotate\n       :frame    (- (aget f frame-slot-id))\n       :position pos})\n    (frame-rotate f pos)))\n\n(defn acopy [src src-off dest dest-off size]\n  #?(:clj (System/arraycopy src src-off dest dest-off size))\n  #?(:cljs (dotimes [i size] (aset dest (+ dest-off i) (aget src (+ src-off i)))))\n  dest)\n\n(defn constructor [static dynamic variable-count source-count constant-count target-count output-count input-count boot]\n  (fn [^objects tier id]\n    (let [^objects par (aget tier tier-slot-parent)\n          ^objects buf (aget tier tier-slot-buffer)\n          pos (aget tier tier-slot-size)\n          cap (alength buf)\n          buf (if (< pos cap)\n                buf (aset tier tier-slot-buffer\n                      (acopy buf 0 (object-array (bit-shift-left cap 1)) 0 cap)))]\n      (aset tier tier-slot-size (inc pos))\n      (make-frame (aget par frame-slot-context)\n        tier id pos (aget tier tier-slot-foreigns) static dynamic\n        variable-count source-count constant-count target-count output-count input-count\n        buf (aget tier tier-slot-vars) boot))))\n\n(deftype FrameIterator [f it]\n  IFn\n  (#?(:clj invoke :cljs -invoke) [_] (frame-cancel f))\n  IDeref\n  (#?(:clj deref :cljs -deref) [_] @it))\n\n;; Takes an instruction identifying a target and a frame-constructor.\n;; Return a flow instantiating the frame.\n(defn constant [^objects frame slot ctor]\n  (let [^objects consts (aget frame frame-slot-constants)\n        ^objects context (aget frame frame-slot-context)]\n    (aset consts slot\n      (signal\n        (m/watch\n          (atom\n            (fn [n t]\n              (if-some [^objects tier (l/get-local this)]\n                (let [parent (aget tier tier-slot-parent)\n                      id (aswap context context-slot-local-id inc)]\n                  (update-event context :tree conj\n                    {:op     :create\n                     :target [(- (aget frame frame-slot-id)) slot]\n                     :source [(- (aget parent frame-slot-id)) (aget tier tier-slot-remote)]})\n                  (let [<x (ctor tier id)\n                        ^objects f (get (aget context context-slot-frame-store) id)]\n                    (->FrameIterator f\n                      (<x n #(do (frame-cancel f)\n                                 (update-event context :tree conj {:op :remove :frame (- id)})\n                                 (aswap context context-slot-frame-store dissoc!\n                                   (aget f frame-slot-id)) (t))))))\n                (failer/run (error \"Unable to build frame - not an object.\") n t)))))))))\n\n(defn inject [v]\n  (fn [<x <y]\n    (fn [n t]\n      ;; TODO make result depend on <y to catch failures, in case binding is ignored\n      (if-some [^objects tier (l/get-local this)]\n        (let [foreigns (aget tier tier-slot-foreigns)]\n          (aset tier tier-slot-foreigns (assoc foreigns v <y))\n          (try (<x n t) (finally (aset tier tier-slot-foreigns foreigns))))\n        (failer/run (error \"Unable to inject - not an object.\") n t)))))\n\n(defn bind [f & args]\n  (fn [n t]\n    (if-some [tier (l/get-local this)]\n      (try ((apply f tier args) n t) ; hook tier and pass to userland !\n           (catch #?(:clj Throwable :cljs :default) e\n             (failer/run e n t)))\n      (failer/run (error \"Unable to bind - not an object.\") n t))))\n\n(defn with [tier <x]\n  (fn [n t]\n    (let [prev (l/get-local this)]\n      (l/set-local this tier)\n      (try (<x n t) (finally (l/set-local this prev))))))\n\n(defn clause\n  ([f] (fn [e] (f (pure e))))\n  ([f c] (fn [e] (when (instance? c (dbg/unwrap e)) (f (pure e))))))\n\n(defn recover [tier catch <x]\n  (yield (fn [x]\n           (when (instance? Failure x)\n             (when-some [<c (catch (.-error ^Failure x))]\n               (with tier <c)))) <x))\n\n(defn variable [^objects frame ^objects vars position slot <<x]\n  (let [^objects tier (aget ^objects (aget frame frame-slot-tiers) (int position))]\n    (aset tier tier-slot-remote slot)\n    (aset tier tier-slot-vars (aclone vars))\n    (aset ^objects (aget frame frame-slot-variables) (int slot)\n      (m/signal!\n        (m/cp (try (let [<x (m/?< <<x)]\n                     (if (failure <x)\n                       <x (m/?< (with tier <x))))\n                   (catch #?(:clj Throwable :cljs :default) e\n                     (Failure. e))))))))\n\n(defn source [^objects frame ^objects vars position slot]\n  (aset ^objects (aget frame frame-slot-sources) (int slot)\n    (doto ^objects (aget ^objects (aget frame frame-slot-tiers) (int position))\n      (aset tier-slot-vars (aclone vars)))) nil)\n\n(defn target [^objects frame slot ctor]\n  (aset ^objects (aget frame frame-slot-targets) (int slot) ctor) nil)\n\n(defn hook [k v <x]\n  (assert (some? v) \"hook value must be non-nil.\")\n  (fn [n t]\n    (if-some [tier (l/get-local this)]\n      (do\n        (loop [^objects tier tier]\n          (let [^objects f (aget tier tier-slot-parent)]\n            (if-some [a (frame-walk-tiers f 1 k identity (aget tier tier-slot-position))]\n              (k v a)\n              (when-some [^objects tier (aget f frame-slot-parent)]\n                (if-some [a (tier-walk-frames tier 1 k identity (aget f frame-slot-position))]\n                  (k v a)\n                  (if (contains? (aget tier tier-slot-hooks) k)\n                    (k v nil) (recur tier)))))))\n        (aswap tier tier-slot-hooks assoc k v)\n        (<x n #(do (aswap tier tier-slot-hooks dissoc k)\n                   (k v) (t))))\n      (failer/run (error \"Unable to hook - not an object.\") n t))))\n\n(def unbound (pure ::unbound))\n\n(defn subject-at [^objects arr slot]\n  (fn [!] (aset arr slot !) #(aset arr slot nil)))\n\n(defn context-ack [^objects context]\n  (let [rpos (aget context context-slot-pending-rpos)\n        ^objects buffer (aget context context-slot-pending-buffer)\n        ^objects output (aget buffer rpos)]\n    (when (= rpos (aget context context-slot-pending-wpos))\n      (throw (error \"Unexpected ack.\")))\n    (aset context context-slot-pending-rpos\n      (bit-and (unchecked-inc rpos)\n        (unchecked-dec (alength buffer))))\n    (aset buffer rpos nil)\n    (loop [output output]\n      (when-not (nil? output)\n        (aset (aget output output-slot-prev) output-slot-next nil)\n        (aset output output-slot-prev nil)\n        (aset output output-slot-time nil)\n        (let [^objects input (aget output output-slot-input)]\n          (when (zero? (aswap input input-slot-pending dec))\n            (input-ready input)))\n        (recur (aget output output-slot-next))))))\n\n(defn context-cancel [^objects context]\n  (update-event context :cancel identity))\n\n(defn context-transfer [^objects context]\n  (loop []\n    (if-some [^objects input (aget context context-slot-check)]\n      (do (aset context context-slot-check (aget input input-slot-check))\n          (aset input input-slot-check input)\n          (input-check input)\n          (recur))\n      (let [event (aget context context-slot-event)]\n        (when (contains? event :cancel)\n          ((aget context context-slot-terminator))\n          (throw (Cancelled.)))\n        (when-not (= {} (:change event))\n          (let [^objects buffer (aget context context-slot-pending-buffer)\n                size (alength buffer)\n                rpos (aget context context-slot-pending-rpos)\n                wpos (aget context context-slot-pending-wpos)]\n            (when (= rpos (aset context context-slot-pending-wpos\n                            (bit-and (unchecked-inc wpos)\n                              (unchecked-dec size))))\n              (let [larger (object-array (bit-shift-left size 1))\n                    split (- size rpos)]\n                (acopy buffer rpos larger 0 split)\n                (acopy buffer 0 larger split rpos)\n                (dotimes [t size]\n                  (when-some [output (aget larger t)]\n                    (loop [^objects o output]\n                      (aset o output-slot-time t)\n                      (let [n (aget o output-slot-next)]\n                        (when-not (identical? n output)\n                          (recur n))))))\n                (aset context context-slot-pending-buffer larger)\n                (aset context context-slot-pending-wpos size)\n                (aset context context-slot-pending-rpos 0)))))\n        (aset context context-slot-event nil) event))))\n\n(defn eval-tree-inst [^objects context inst]\n  (case (:op inst)\n    :create (let [{[target-frame target-slot] :target\n                   [source-frame source-slot] :source} inst]\n              ((-> context\n                 (aget context-slot-frame-store)\n                 ^objects (get target-frame)\n                 ^objects (aget frame-slot-targets)\n                 (aget target-slot))\n               (-> context\n                 (aget context-slot-frame-store)\n                 ^objects (get source-frame)\n                 ^objects (aget frame-slot-sources)\n                 (aget source-slot))\n               (aswap context context-slot-remote-id dec)))\n    :rotate (-> context\n              (aget context-slot-frame-store)\n              (get (:frame inst))\n              (frame-rotate (:position inst)))\n    :remove (aswap context context-slot-frame-store dissoc! (:frame inst)))\n  context)\n\n(defn eval-change-inst [^objects context [id slot] value]\n  (-> context\n    (aget context-slot-frame-store)\n    ^objects (get id)\n    ^objects (aget frame-slot-inputs)\n    ^objects (aget slot)\n    (input-change value))\n  context)\n\n(defn eval-freeze-inst [^objects context [id slot]]\n  (-> context\n    (aget context-slot-frame-store)\n    ^objects (get id)\n    ^objects (aget frame-slot-inputs)\n    ^objects (aget slot)\n    (input-freeze))\n  context)\n\n(defn parse-event [^objects context {:keys [acks tree change freeze]}]\n  (dotimes [_ acks] (context-ack context))\n  (reduce eval-tree-inst context tree)\n  (when-not (= {} change)\n    (update-event context :acks inc)\n    (reduce-kv eval-change-inst context change))\n  (reduce eval-freeze-inst context freeze))\n\n(defn process-incoming-events [^objects context >incoming]\n  (m/sample (partial reduce parse-event context) >incoming))\n\n(defn write-outgoing-events [write >events]\n  (m/ap (let [e (m/?> >events)]\n          (when-not (= e empty-event)\n            (m/? (write e))))))\n\n(defn peer [var-count dynamic variable-count source-count constant-count target-count output-count input-count ctor]\n  (fn rec\n    ([write ?read] (rec write ?read pst))\n    ([write ?read on-error]\n     (m/reactor\n       (let [^objects context (make-context)]\n         (m/stream!\n           (write-outgoing-events write\n             (m/stream!\n               (fn [n t]\n                 (aset context context-slot-notifier n)\n                 (aset context context-slot-terminator t)\n                 (when-some [<main (make-frame context nil 0 0 {} [] dynamic\n                                     variable-count source-count constant-count target-count output-count input-count\n                                     context (object-array (repeat var-count unbound)) ctor)]\n                   (m/stream! (m/latest (fn [x] (when (instance? Failure x) (on-error (.-error x)))) <main)))\n                 (->It context context-cancel context-transfer)))))\n         (m/stream! (process-incoming-events context (m/stream! (m/relieve into (m/sample vector (m/observe ?read)))))))))))\n\n(defn collapse [s n f & args]\n  (->> (iterate pop s)\n    (transduce (comp (map peek) (take n)) conj args)\n    (apply f)\n    (conj (nth (iterate pop s) n))))\n\n(defn snapshot [env f & args]\n  (update env :stack conj (apply f env args)))\n\n(defn reverse-index [m]\n  (reduce-kv (fn [v x i] (assoc v i x))\n    (vec (repeat (count m) nil)) m))\n\n(def empty-frame\n  {:variable 0\n   :source   0\n   :constant 0\n   :target   0\n   :output   0\n   :input    0\n   :static   {}\n   :dynamic  {}})\n\n;; TODO move me\n;; `new` creates a local variable and a remote source\n;; `p/fn` creates a local constant and a remote target\n;; Same duality with input and output, if there is 3 inputs locally, there is 3 outputs remotely.\n;; There is no instruction to create inputs and outputs, they are infered from unquote-splicing.\n\n(defn compile [inst {:keys [nop sub pub inject lift vget bind invoke input do output static dynamic\n                            global literal variable source constant target main] :as fns}]\n  (-> ((fn walk [env off idx dyn inst]\n         (case (::ir/op inst)\n           ::ir/nop (update env :stack conj nop)\n           ::ir/sub (let [p (- idx (::ir/index inst))]\n                      (if (< p off)\n                        (let [f (:static env)\n                              i (f p (count f))]\n                          (-> env\n                            (assoc :static (assoc f p i))\n                            (update :stack conj (static i))))\n                        (update env :stack conj (sub p))))\n           ::ir/pub (-> env\n                      (walk off idx dyn (::ir/init inst))\n                      (walk off (inc idx) dyn (::ir/inst inst))\n                      (update :stack collapse 2 pub idx))\n           ::ir/do  (let [deps (::ir/deps inst)]\n                      (-> (reduce (fn [env arg] (walk env off idx dyn arg)) env deps)\n                        (update :stack collapse (count deps) vector)\n                        (walk off idx dyn (::ir/inst inst))\n                        (update :stack collapse 2 do)))\n           ::ir/def (let [v (::ir/slot inst)]\n                      (-> env\n                        (update :vars max v)\n                        (update :stack conj (inject v))))\n           ::ir/lift (-> env\n                       (walk off idx dyn (::ir/init inst))\n                       (update :stack collapse 1 lift))\n           ::ir/eval (update env :stack conj ((:eval fns) (::ir/form inst) (::ir/ns inst))) ; can't shadow eval in advanced CLJS compilation\n           ::ir/node (let [v (::ir/slot inst)\n                           env (update env :vars max v)]\n                       (if (dyn v)\n                         (update env :stack conj (vget v))\n                         (let [d (:dynamic env)\n                               i (d v (count d))]\n                           (-> env\n                             (assoc :dynamic (assoc d v i))\n                             (update :stack conj (dynamic i inst))))))\n           ::ir/bind (let [v (::ir/slot inst)]\n                       (-> env\n                         (update :vars max v)\n                         (walk off idx (conj dyn v) (::ir/inst inst))\n                         (update :stack collapse 1 bind v (- idx (::ir/index inst)))))\n           ::ir/apply (let [f (::ir/fn inst)\n                            args (::ir/args inst)]\n                        (-> (reduce (fn [env inst] (walk env off idx dyn inst)) env (cons f args))\n                          (update :stack collapse (inc (count args))\n                            (partial invoke\n                              (loop [f f]\n                                (case (::ir/op f)\n                                  ::ir/global (assoc f ::dbg/type :apply, ::dbg/name (symbol (::ir/name f)))\n                                  ::ir/node (assoc f ::dbg/type :apply)\n                                  ::ir/literal {::dbg/type :apply ::dbg/name (::ir/value f)}\n                                  ::ir/eval (assoc f ::dbg/type :eval)\n                                  ::ir/sub (assoc f ::dbg/type :apply)\n                                  ::ir/input (assoc f ::dbg/type :apply)\n                                  ::ir/apply (recur (::ir/fn f))\n                                  {::dbg/type :unknown-apply, :op f}))))))\n           ::ir/input (let [deps (::ir/deps inst)]\n                        (-> (reduce (fn [env arg] (walk env off idx dyn arg)) env deps)\n                          (update :stack collapse (count deps) vector)\n                          (snapshot :input)\n                          (update :input inc)\n                          (update :stack collapse 2 input)))\n           ::ir/output (-> env\n                         (walk off idx dyn (::ir/init inst))\n                         (snapshot :output)\n                         (update :output inc)\n                         (update :stack collapse 2 (partial output inst)))\n           ::ir/global (update env :stack conj (global (::ir/name inst)))\n           ::ir/literal (update env :stack conj (literal (::ir/value inst)))\n           ::ir/variable (-> env\n                           (walk off idx dyn (::ir/init inst))\n                           (snapshot :source)\n                           (snapshot :variable)\n                           (update :variable inc)\n                           (update :stack collapse 3 variable))\n           ::ir/source (-> env\n                         (snapshot :variable)\n                         (snapshot :source)\n                         (update :source inc)\n                         (update :stack collapse 2 source))\n           ::ir/constant (-> env\n                           (merge empty-frame)\n                           (walk idx idx #{} (::ir/init inst))\n                           (snapshot (comp reverse-index :static))\n                           (snapshot (comp reverse-index :dynamic))\n                           (snapshot :variable)\n                           (snapshot :source)\n                           (snapshot :constant)\n                           (snapshot :target)\n                           (snapshot :output)\n                           (snapshot :input)\n                           (merge (select-keys env (keys empty-frame)))\n                           (snapshot :constant)\n                           (update :constant inc)\n                           (update :stack collapse 10 (partial constant inst)))\n           ::ir/target (let [deps (::ir/deps inst)]\n                         (-> (reduce (fn [env inst] (walk env idx idx #{} inst))\n                               (merge env empty-frame) deps)\n                           (update :stack collapse (count deps) vector)\n                           (snapshot (comp reverse-index :static))\n                           (snapshot (comp reverse-index :dynamic))\n                           (snapshot :variable)\n                           (snapshot :source)\n                           (snapshot :constant)\n                           (snapshot :target)\n                           (snapshot :output)\n                           (snapshot :input)\n                           (merge (select-keys env (keys empty-frame)))\n                           (snapshot :target)\n                           (update :target inc)\n                           (update :stack collapse 10 target)))))\n       (assoc empty-frame :vars -1) 0 0 #{} inst)\n    (snapshot (comp inc :vars))\n    (snapshot (comp reverse-index :dynamic))\n    (snapshot :variable)\n    (snapshot :source)\n    (snapshot :constant)\n    (snapshot :target)\n    (snapshot :output)\n    (snapshot :input)\n    (:stack)\n    (collapse 9 main)\n    (peek)))\n\n(defn sym [& args]\n  (symbol (str/join \"-\" args)))\n\n(defn emit [prefix inst]\n  (compile inst\n    {:nop      nil\n     :sub      (fn [idx] (sym prefix 'pub idx))\n     :pub      (fn [form cont idx]\n                 `(let [~(sym prefix 'pub idx) (signal ~form)] ~cont))\n     :do       (fn [deps form]\n                 `(do (make-input ~(sym prefix 'frame) ~deps) ~form))\n     :static   (fn [i] `(static ~(sym prefix 'frame) ~i))\n     :dynamic  (fn [i debug-info] `(dynamic ~(sym prefix 'frame) ~i '~(select-debug-info debug-info)))\n     :eval     (fn [form _ns] `(pure ~form))\n     :lift     (fn [f] `(pure ~f))\n     :vget     (fn [v] `(aget ~(sym prefix 'vars) (int ~v)))\n     :bind     (fn [form slot idx]\n                 `(let [~(sym prefix 'prev) (aget ~(sym prefix 'vars) ~slot)]\n                    (aset ~(sym prefix 'vars) (int ~slot) ~(sym prefix 'pub idx))\n                    (let [~(sym prefix 'res) ~form]\n                      (aset ~(sym prefix 'vars) (int ~slot) ~(sym prefix 'prev))\n                      ~(sym prefix 'res))))\n     :invoke   (fn [debug-info & forms] `(latest-apply '~(select-debug-info debug-info) ~@forms))\n     :input    (fn [deps slot] `(input-spawn ~(sym prefix 'frame) ~slot ~deps))\n     :output   (fn [debug-info form slot]\n                 `(make-output ~slot (check-failure '~(select-debug-info debug-info) ~form)))\n     :global   (fn [x] `(pure ~(symbol x)))\n     :literal  (fn [x] `(pure (quote ~x)))\n     :inject   (fn [v] `(pure (inject ~v)))\n     :variable (fn [form remote slot]\n                 `(variable ~(sym prefix 'frame) ~(sym prefix 'vars) ~(+ remote slot) ~slot ~form))\n     :source   (fn [remote slot]\n                 `(source ~(sym prefix 'frame) ~(sym prefix 'vars) ~(+ remote slot) ~slot))\n     :constant (fn [debug-info form static dynamic variable-count source-count constant-count target-count output-count input-count slot]\n                 `(constant ~(sym prefix 'frame) ~slot\n                    (constructor ~(mapv (fn [p] (sym prefix 'pub p)) static) ~dynamic\n                      ~variable-count ~source-count\n                      ~constant-count ~target-count\n                      ~output-count ~input-count\n                      (fn [~(sym prefix 'frame)\n                           ~(sym prefix 'vars)]\n                        (check-failure '~(select-debug-info debug-info) ~form)))))\n     :target   (fn [deps static dynamic variable-count source-count constant-count target-count output-count input-count slot]\n                 `(target ~(sym prefix 'frame) ~slot\n                    (constructor ~(mapv (fn [p] (sym prefix 'pub p)) static) ~dynamic\n                      ~variable-count ~source-count\n                      ~constant-count ~target-count\n                      ~output-count ~input-count\n                      (fn [~(sym prefix 'frame)\n                           ~(sym prefix 'vars)]\n                        (make-input ~(sym prefix 'frame) ~deps)))))\n     :main     (fn [form var-count dynamic variable-count source-count constant-count target-count output-count input-count]\n                 `(peer ~var-count ~dynamic\n                    ~variable-count ~source-count\n                    ~constant-count ~target-count\n                    ~output-count ~input-count\n                    (fn [~(sym prefix 'frame)\n                         ~(sym prefix 'vars)]\n                      ~form)))}))\n\n(tests\n  (emit nil (ir/literal 5)) :=\n  `(peer 0 [] 0 0 0 0 0 0\n     (fn [~'-frame ~'-vars]\n       (pure '5)))\n\n  (emit nil (ir/apply\n              (ir/global :clojure.core/+)\n              (ir/literal 2) (ir/literal 3))) :=\n  `(peer 0 [] 0 0 0 0 0 0\n     (fn [~'-frame ~'-vars]\n       (latest-apply '{::ir/op    ::ir/global\n                       ::dbg/type :apply\n                       ::dbg/name ~'clojure.core/+}\n         (pure ~'clojure.core/+)\n         (pure '2)\n         (pure '3))))\n\n  (emit nil\n    (ir/pub (ir/literal 1)\n      (ir/apply (ir/global :clojure.core/+)\n        (ir/sub 1)\n        (ir/literal 2)))) :=\n  `(peer 0 [] 0 0 0 0 0 0\n     (fn [~'-frame ~'-vars]\n       (let [~'-pub-0 (signal (pure '1))]\n         (latest-apply '{::ir/op    ::ir/global\n                         ::dbg/type :apply\n                         ::dbg/name ~'clojure.core/+}\n           (pure ~'clojure.core/+) ~'-pub-0 (pure '2)))))\n\n  (emit nil\n    (ir/variable\n      (ir/global :missionary.core/none))) :=\n  `(peer 0 [] 1 0 0 0 0 0\n     (fn [~'-frame ~'-vars]\n       (variable ~'-frame ~'-vars 0 0 (pure m/none))))\n\n  (emit nil (ir/input [])) :=\n  `(peer 0 [] 0 0 0 0 0 1\n     (fn [~'-frame ~'-vars]\n       (input-spawn ~'-frame 0 [])))\n\n  (emit nil (ir/constant\n              (ir/literal :foo))) :=\n  `(peer 0 [] 0 0 1 0 0 0\n     (fn [~'-frame ~'-vars]\n       (constant ~'-frame 0\n         (constructor [] [] 0 0 0 0 0 0\n           (fn [~'-frame ~'-vars]\n             (check-failure '{::ir/op ::ir/constant}\n               (pure ':foo)))))))\n\n  (emit nil\n    (ir/variable\n      (ir/pub (ir/constant (ir/literal 3))\n        (ir/pub (ir/constant (ir/input []))\n          (ir/apply\n            (ir/apply (ir/global :clojure.core/hash-map)\n              (ir/literal 2) (ir/sub 2)\n              (ir/literal 4) (ir/sub 1)\n              (ir/literal 5) (ir/sub 1))\n            (ir/literal 1) (ir/constant (ir/literal 7)))))))\n  `(peer 0 [] 1 0 3 0 0 0\n     (fn [~'-frame ~'-vars]\n       (variable ~'-frame ~'-vars 0 0\n         (let [~'-pub-0 (signal\n                          (constant ~'-frame 0\n                            (constructor [] [] 0 0 0 0 0 0\n                              (fn [~'-frame ~'-vars]\n                                (check-failure 'nil (pure '3))))))]\n           (let [~'-pub-1 (signal\n                            (constant ~'-frame 1\n                              (constructor [] [] 0 0 0 0 0 1\n                                (fn [~'-frame ~'-vars]\n                                  (check-failure 'nil (input-spawn ~'-frame 0 []))))))]\n             (latest-apply '{::dbg/type :unknown-apply, ; FIXME remove this debug noise\n                             :op\n                             [:apply\n                              [:global :clojure.core/hash-map nil]\n                              [:literal 2]\n                              [:sub 2]\n                              [:literal 4]\n                              [:sub 1]\n                              [:literal 5]\n                              [:sub 1]]}\n               (latest-apply '{::ir/op ::ir/global\n                               ::dbg/type :apply,\n                               ::dbg/name clojure.core/hash-map}\n                 (pure hash-map)\n                 (pure '2) ~'-pub-0\n                 (pure '4) ~'-pub-1\n                 (pure '5) ~'-pub-1)\n               (pure '1)\n               (constant ~'-frame 2\n                 (constructor [] [] 0 0 0 0 0 0\n                   (fn [~'-frame ~'-vars]\n                     (check-failure 'nil (pure '7)))))))))))\n\n  (emit nil (ir/inject 0)) :=\n  `(peer 1 [] 0 0 0 0 0 0\n     (fn [~'-frame ~'-vars]\n       (pure (inject 0))))\n\n  (emit nil\n    (ir/pub (ir/literal nil)\n      (ir/constant (ir/sub 1)))) :=\n  `(peer 0 [] 0 0 1 0 0 0\n     (fn [~'-frame ~'-vars]\n       (let [~'-pub-0 (signal (pure 'nil))]\n         (constant ~'-frame 0\n           (constructor [~'-pub-0] [] 0 0 0 0 0 0\n             (fn [~'-frame ~'-vars]\n               (check-failure '{::ir/op ::ir/constant}\n                 (static ~'-frame 0)))))))))\n\n(defn juxt-with ;;juxt = juxt-with vector, juxt-with f & gs = apply f (apply juxt gs)\n  ([f]\n   (fn\n     ([] (f))\n     ([a] (f))\n     ([a b] (f))\n     ([a b c] (f))\n     ([a b c & ds] (f))))\n  ([f g]\n   (fn\n     ([] (f (g)))\n     ([a] (f (g a)))\n     ([a b] (f (g a b)))\n     ([a b c] (f (g a b c)))\n     ([a b c & ds] (f (apply g a b c ds)))))\n  ([f g h]\n   (fn\n     ([] (f (g) (h)))\n     ([a] (f (g a) (h a)))\n     ([a b] (f (g a b) (h a b)))\n     ([a b c] (f (g a b c) (h a b c)))\n     ([a b c & ds] (f (apply g a b c ds) (apply h a b c ds)))))\n  ([f g h i]\n   (fn\n     ([] (f (g) (h) (i)))\n     ([a] (f (g a) (h a) (i a)))\n     ([a b] (f (g a b) (h a b) (i a b)))\n     ([a b c] (f (g a b c) (h a b c) (i a b c)))\n     ([a b c & ds] (f (apply g a b c ds) (apply h a b c ds) (apply i a b c ds)))))\n  ([f g h i & js]\n   (fn\n     ([] (apply f (g) (h) (i) (map #(%) js)))\n     ([a] (apply f (g a) (h a) (i a) (map #(% a) js)))\n     ([a b] (apply f (g a b) (h a b) (i a b) (map #(% a b) js)))\n     ([a b c] (apply f (g a b c) (h a b c) (i a b c) (map #(% a b c) js)))\n     ([a b c & ds] (apply f (apply g a b c ds) (apply h a b c ds) (apply i a b c ds) (map #(apply % a b c ds) js))))))\n\n(defn globals [program]\n  (->> (tree-seq coll? seq program)\n       (eduction (comp (filter vector?)\n                       (filter (fn [[a _]] (= :global a)))\n                       (map second)\n                       (distinct)))\n       (sort-by (juxt namespace name))))\n\n(defn missing-exports [resolvef program]\n  (->> (globals program)\n    (eduction (map (juxt (partial resolvef ::not-found) identity))\n      (filter #(= ::not-found (first %)))\n      (map second)\n      (map symbol))))\n\n(defn dynamic-resolve [nf x]\n  ;; For an Electric Clojure program to run, the server program must be loaded.\n  ;; Multiple approaches:\n  ;; - bootstrap server, eagerly loading namespaces on server JVM process start (current choice),\n  ;; - lazy load namespaces on client request (requires CORS rules),\n  ;; - precompile and lazy load server program on client request - server program is uniquely identified.\n  #?(:clj (try (clojure.core/eval (symbol x)) ; find a java class or static field (e.g. PersistentArrayMap/EMPTY)\n               (catch clojure.lang.Compiler$CompilerException _ nf))\n     :cljs nf))\n\n(defn eval\n  ([inst] (eval dynamic-resolve inst))\n  ([resolvef inst]\n   (compile inst\n     {:nop      (constantly nil)\n      ;; FIXME Eval is a security hazard, client should not send any program to\n      ;;       eval on server. Solution is for server to compile and store\n      ;;       programs, client address them by unique name (hash).\n      :eval     (fn [form ns]\n                  (if-some [ns (some-> ns find-ns)]\n                    (constantly (pure (binding [*ns* ns] (clojure.core/eval form))))\n                    (constantly (pure (clojure.core/eval form)))))\n      :do       (fn [deps inst]\n                  (fn [pubs frame vars]\n                    (do (make-input frame (mapv (fn [inst] (inst pubs frame vars)) deps))\n                        (inst pubs frame vars))))\n      :sub      (fn [idx]\n                  (fn [pubs frame vars]\n                    (nth pubs idx)))\n      :pub      (fn [form cont _]\n                  (fn [pubs frame vars]\n                    (cont (conj pubs (signal (form pubs frame vars))) frame vars)))\n      :lift     (fn [form]\n                  (fn [pubs frame vars]\n                    (pure (form pubs frame vars))))\n      :vget     (fn [slot]\n                  (fn [pubs frame ^objects vars]\n                    (aget vars (int slot))))\n      :static   (fn [slot]\n                  (fn [pubs frame vars]\n                    (static frame slot)))\n      :dynamic  (fn [slot debug-info]\n                  (fn [pubs frame vars]\n                    (dynamic frame slot debug-info)))\n      :bind     (fn [form slot s]\n                  (fn [pubs frame ^objects vars]\n                    (let [prev (aget vars (int slot))]\n                      (aset vars (int slot) (nth pubs s))\n                      (let [res (form pubs frame vars)]\n                        (aset vars (int slot) prev) res))))\n      :invoke   (fn [debug-info & forms] (apply juxt-with (partial latest-apply debug-info) forms))\n      :input    (fn [deps slot]\n                  (fn [pubs frame vars]\n                    (input-spawn frame slot\n                      (mapv (fn [inst] (inst pubs frame vars)) deps))))\n      :output   (fn [debug-info form slot]\n                  (fn [pubs frame vars]\n                    (make-output slot (check-failure debug-info (form pubs frame vars)))))\n      :global   (fn [x]\n                  (let [r (resolvef ::not-found x)]\n                    (case r\n                      ::not-found (throw (ex-info (str \"Unable to resolve symbol: \" (symbol x)) {}))\n                      (constantly (pure r)))))\n      :literal  (fn [x] (constantly (pure x)))\n      :inject   (fn [slot] (constantly (pure (inject slot))))\n      :variable (fn [form remote slot]\n                  (fn [pubs frame vars]\n                    (variable frame vars (+ remote slot) slot\n                      (form pubs frame vars))))\n      :source   (fn [remote slot]\n                  (fn [pubs frame vars]\n                    (source frame vars (+ remote slot) slot)))\n      :constant (fn [debug-info form static dynamic variable-count source-count constant-count target-count output-count input-count slot]\n                  (fn [pubs frame vars]\n                    (constant frame slot\n                      (constructor (mapv pubs static) dynamic variable-count source-count constant-count target-count output-count input-count\n                        (fn [& args]\n                          (check-failure debug-info (apply form pubs args)))))))\n      :target   (fn [deps static dynamic variable-count source-count constant-count target-count output-count input-count slot]\n                  (fn [pubs frame vars]\n                    (target frame slot\n                      (constructor (mapv pubs static) dynamic variable-count source-count constant-count target-count output-count input-count\n                        (fn [frame vars] (make-input frame (mapv (fn [inst] (inst pubs frame vars)) deps)))))))\n      :main     (fn [form var-count dynamic variable-count source-count constant-count target-count output-count input-count]\n                  (peer var-count dynamic\n                    variable-count source-count\n                    constant-count target-count\n                    output-count input-count\n                    (partial form [])))})))\n\n\n\n;; TESTS\n\n(defn queue []\n  #?(:clj  (let [q (java.util.LinkedList.)]\n             (fn\n               ([] (.remove q))\n               ([x] (.add q x) x)))\n     :cljs (let [q (object-array 0)]\n             (fn\n               ([]\n                (when (zero? (alength q))\n                  (throw (js/Error. \"No such element.\")))\n                (.shift q))\n               ([x] (.push q x) x)))))\n\n(tests\n  \"uncaught exception crash\"\n  (let [q (queue)\n        !x (atom true)\n        c (((eval (ir/apply (ir/literal q)\n                    (ir/apply (ir/literal #(when-not % (throw (ex-info \"boom\" {}))))\n                      (ir/variable (ir/literal (m/watch !x))))))\n            (fn [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn [!] (q !) #())\n            (fn [e] (throw e)))\n           q q)]\n    (q) := nil\n    (q)\n    (swap! !x not)\n    (ex-message (q)) := \"boom\"))\n\n(tests\n  \"simple input\"\n  (let [q (queue)\n        c (((eval (ir/input []))\n            (fn [x] (q [::write x]) (fn [s _] (q [::backpressure #(s nil)]) #()))\n            (fn [!] (q [::read !]) #()) ; reader subject\n            (fn [e] (q [::error e])))\n           q q)]\n    (q) := [::error (Pending.)] ; input starts Pending (a failure state)\n    (let [[_read !] (q)]        ; on boot, reactor calls the reader subject\n      (! (update empty-event :change assoc [0 0] :a)) ; simulate incomming message: assign value :a to frame 0 (root), port 0 (input)\n      (q) := [::write (update empty-event :acks inc)]   ; reactor acknowledges by sending a message\n      (let [[_backpressure ack] (q)] (ack))             ; manualy simulate backpressure\n      (! (update empty-event :change assoc [0 0] :b)) ; simulate incomming message: assign value :b to frame 0 (root), port 0 (input)\n      (q) := [::write (update empty-event :acks inc)]   ; reactor acknowledges by sending a message\n      (let [[_backpressure ack] (q)] (ack))             ; manualy simulate backpressure\n      (c)                                             ; terminate reactor\n      (type (q)) := Cancelled)))\n\n(tests\n  \"Fast changes to simulate backpressure\"\n  (let [q (queue)\n        c (((eval (ir/input []))\n            (fn [x] (q [::write x]) (fn [s _] (q [::backpressure #(s nil)]) #()))\n            (fn [!] (q [::read !]) #()) ; reader subject\n            (fn [e] (q [::error e])))\n           q q)]\n    (q) := [::error (Pending.)] ; input starts Pending (a failure state)\n    (let [[_read !] (q)]        ; on boot, reactor calls the reader subject\n      (! (update empty-event :change assoc [0 0] :a)) ; simulate 4 incomming messages\n      (! (update empty-event :change assoc [0 0] :b))\n      (! (update empty-event :change assoc [0 0] :c))\n      (! (update empty-event :change assoc [0 0] :d))\n      (q) := [::write (assoc empty-event :acks 1)] ; There is room in the write buffer, reactor acknowledges by sending a message immediatly\n      (let [[_backpressure ack] (q)] (ack))        ; manualy simulate backpressure\n      ;; We expect to see :acks 1, then :acks 3 (total 4). But because of an\n      ;; implementation detail there still room in the buffer. We therefore see\n      ;; another :acks 1.\n      (q) := [::write (assoc empty-event :acks 1)]\n      (let [[_backpressure ack] (q)] (ack))        ; manualy simulate backpressure\n      (q) := [::write (assoc empty-event :acks 2)] ; Acks are accumulated till there is room in the write buffer - total acks count = 4\n      (let [[_backpressure ack] (q)] (ack))        ; manualy simulate backpressure\n      (c)                                        ; terminate reactor\n      (type (q)) := Cancelled)))\n\n(tests\n  '(tap (p/server (new (:hyperfiddle.electric.impl.compiler/closure (p/client 1)))))\n\n  (let [q (queue)\n        c (((eval (ir/apply (ir/literal q)\n                    (ir/input [(ir/target [(ir/output (ir/literal 1))])\n                               ir/source])))\n            (fn write-to-network [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn read-subject [!] (q !) #())\n            (fn error-handler [e] (q e)))\n           q q)]\n    (q) := (Pending.)\n    (let [! (q)]\n      \"client recieves event\"\n      (! (assoc empty-event\n           :tree [{:op :create, :target [0 0], :source [0 0]}]\n           :change {[0 0] pending}))\n      (q) := (assoc empty-event\n               :acks 1                ; 1 means whole changeset\n               :change {[1 0] 1}      ; output of `(p/client 1)`, frame 1 slot 0\n               :freeze #{[1 0]}) ; the port won't change anymore, remote can terminate it\n      ((q))                      ; trigger backpressure\n      (! (assoc empty-event\n           :acks 1                      ; remote acknowledged our changeset\n           :change {[0 0] 1}))          ; port 0 of frame 0 = 1\n      (q) := 1\n      (q) := (assoc empty-event :acks 1)\n      ((q))\n      ;; frame -1 -> negative sign means it is server's frame\n      ;; it is moving from position 0 to 0, which is interpreted as remove\n      ;; we're terminating the frame because its port is frozen\n      ;; `:op :remove` is legacy, will be removed in future\n      (! (assoc empty-event :tree [{:op :rotate, :frame -1, :position 0} {:op :remove, :frame -1}]))))\n\n  (let [q (queue)\n        c (((eval (ir/do [(ir/output\n                            (ir/pub (ir/constant (ir/input []))\n                              (ir/apply (ir/literal {})\n                                (ir/sub 1)\n                                (ir/pub (ir/literal 0) ; bind %arity\n                                  (ir/apply (ir/literal {})\n                                    (ir/sub 1)\n                                    (ir/bind 0 1 (ir/variable (ir/sub 2))))))))]\n                         ir/nop))\n            (fn [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn [!] (q !) #())\n            (fn [e] (q e)))\n           q q)]\n    \"server sends event, frame got created, output is pending\"\n    (q) := (assoc empty-event\n             :tree [{:op :create, :target [0 0], :source [0 0]}] ; create child frame (root frame, tier 0)\n             :change {[0 0] pending})                            ; root frame input 0 = pending\n    ;; (events\n    ;;   (create-frame :target {:frame 0 :slot 0} :source {:frame 0 :slot 0})\n    ;;   (set-input :frame 0 :slot 0 :value pending))\n\n    ((q))\n    (let [! (q)]\n      (! (assoc empty-event\n           :acks 1\n           :change {[1 0] 1}\n           :freeze #{[1 0]}))\n      (q) := (assoc empty-event\n               :acks 1\n               :change {[0 0] 1})\n      ((q))\n      (! (assoc empty-event :acks 1))\n      (q) := (assoc empty-event :tree [{:op :rotate, :frame -1, :position 0} {:op :remove, :frame -1}])\n      ((q)))))\n\n(tests\n  \"d-glitch\"\n  (let [q (queue)\n        !x (atom 1)\n        c (((eval (ir/apply (ir/literal q) (ir/input [(ir/output (ir/variable (ir/literal (m/watch !x))))])))\n            (fn [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn [!] (q !) #())\n            (fn [e] (q e)))\n           q q)]\n    (q) := (Pending.)                                       ;; input is initially pending\n    (q) := (assoc empty-event :change {[0 0] 1})            ;; output state 1 is published\n    ((q))                                                   ;; backpressure\n    (let [! (q)]                                            ;; get callback\n      (! (assoc empty-event :acks 1))                       ;; ack previous changeset\n      (! (assoc empty-event :change {[0 0] :a}))            ;; input state changes to :a\n      (q) := :a                                             ;; main result is sampled\n      (q) := (assoc empty-event :acks 1)                    ;; changeset is acked\n      ((q))                                                 ;; backpressure\n      (swap! !x inc)                                        ;; input is invalidated due to its dep on output (d-glitch)\n      (q) := (Pending.)                                     ;; main result is sampled\n      (q) := (assoc empty-event :change {[0 0] 2})          ;; output state 2 is published\n      ((q))                                                 ;; backpressure\n      (! (assoc empty-event :acks 1))                       ;; ack previous changeset, previous input state is restored\n      (q) := :a                                             ;; main result is sampled\n      )))\n\n;; Leo: write a test for the infinite loop bug https://github.com/hyperfiddle/electric/commit/2894b3e23e4406c0d9fed4944b2cb553ad28804a\n;; (p/client (let [x (p/watch !x)] (p/server x x) (reset! !x nil))) ; two xs\n(tests \"infinite loop bug\"\n  (let [q (queue)\n        !x (atom 1)\n        c (((eval (ir/apply (ir/literal q)\n                    (ir/pub (ir/variable (ir/literal (m/watch !x)))\n                      (ir/input [(ir/output (ir/sub 1)) (ir/output (ir/sub 1))]))))\n            (fn [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn [!] (q !) #())\n            (fn [e] (q e)))\n           q q)]\n    (q) := (Pending.)                            ; input is initially pending\n    (q) := (assoc empty-event\n             :change {[0 0] 1, [0 1] 1})         ; this is sent for `(p/server x x)`\n    ((q))                                        ; backpressure\n    (let [! (q)]                                 ; get callback\n      (swap! !x inc)\n      ;; this caused an infinite loop before fixing the bug in algo\n      (q) := (assoc empty-event\n               :change {[0 0] 2, [0 1] 2}) ; new value for the ports, but the previous wasn't ackd yet\n      ((q))\n      (! (assoc empty-event\n           :acks 1\n           :change {[0 0] :foo}))        ; still pending, the 2s are not acked yet\n      (q) := (assoc empty-event :acks 1) ; send ack to server for the :foo\n      ((q))\n      (! (assoc empty-event :acks 1))   ; now the client\n      (q) := :foo\n      )))\n\n(tests \"FailureInfo equality\"\n  (let [q (queue)\n        c (((eval (ir/do [(ir/output (ir/input [ir/source]))] ir/nop))\n            (fn [x] (q x) (fn [s _] (q #(s nil)) #()))\n            (fn [!] (q !) #())\n            (fn [e] (q e)))\n           q q)]\n    (q) := (assoc empty-event :change {[0 0] (Failure. (Pending.))})\n    ((q))\n    (let [! (q)]\n      (! (assoc empty-event\n           :change {[0 0] (Failure. (dbg/ex-info* \"0\" {} \"f0f38709-0191-45b7-85e9-1266abb467df\" nil))}))\n      (q) := {:acks 1, :tree [], :change {[0 0] _}, :freeze #{}}\n      ((q))\n\n      (! (assoc empty-event\n           :change {[0 0] (Failure. (dbg/ex-info* \"1\" {} \"064710fe-35bb-4dc6-bfdf-667702434acd\" nil))}))\n      (q) := {:acks 1, :tree [], :change {}, :freeze #{}}\n      ((q))\n      )))\n","~:reader-features",["^K",["~:cljs"]],"~:cljc",true,"~:source-map-compact",["^ ","mappings","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","names",["hyperfiddle.electric.impl.runtime/fail","x","hyperfiddle.electric.impl.runtime/failure","p1__30596#","cljs.core.some_fn","js/hyperfiddle.electric.Failure","hyperfiddle.electric.impl.runtime/pending","js/hyperfiddle.electric.Pending","hyperfiddle.electric.impl.runtime/error","msg","js/Error","hyperfiddle.electric.impl.runtime/pst","e","js/console.error","hyperfiddle.electric.impl.runtime/select-debug-info","debug-info","cljs.core.merge","cljs.core/select-keys","contrib.data/select-ns","hyperfiddle.electric.impl.runtime/check-failure","<x","missionary.core.latest","hyperfiddle.electric.debug/error","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","hyperfiddle.electric.impl.runtime/latest-apply","seq30612","G__30613","cljs.core/first","cljs.core/next","self__5754__auto__","args","cljs.core.apply","missionary.core/latest","f","temp__5802__auto__","err","cljs.core.assoc","e30621","hyperfiddle.electric.impl.runtime/latest-first","cljs.core.partial","y","hyperfiddle.electric.impl.runtime/pure","missionary.core/cp*","cr30630-state","cr30630-place-0","cr30630-exception","e30636","cloroutine.impl/coroutine","G__30642","cljs.core.object_array","cr30630-block-0","hyperfiddle.electric.impl.runtime/empty-event","unused__14959__auto__","self__","G__30650","args30649","cljs.core/aclone","this__5330__auto__","writer__5331__auto__","opt__5332__auto__","cljs.core/-write","hyperfiddle.electric.impl.runtime/It","hyperfiddle.electric.impl.runtime/->It","state","cancel","transfer","_","hyperfiddle.electric.impl.runtime/lift-cancelled","cljs.core/comp","it","js/hyperfiddle","js/hyperfiddle.electric","js/hyperfiddle.electric.impl","js/hyperfiddle.electric.impl.runtime","js/hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669","hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669","_30671","meta30670","G__30678","args30674","hyperfiddle.electric.impl.runtime/->t_hyperfiddle$electric$impl$runtime30669","cljs.core/deref","e30690","js/missionary.Cancelled","hyperfiddle.electric.impl.runtime/signal","missionary.core/signal!","hyperfiddle.electric.impl.runtime/this","cljs.core/volatile!","hyperfiddle.electric.impl.runtime/context-slot-root","hyperfiddle.electric.impl.runtime/context-slot-local-id","hyperfiddle.electric.impl.runtime/context-slot-remote-id","hyperfiddle.electric.impl.runtime/context-slot-pending-rpos","hyperfiddle.electric.impl.runtime/context-slot-pending-wpos","hyperfiddle.electric.impl.runtime/context-slot-pending-buffer","hyperfiddle.electric.impl.runtime/context-slot-frame-store","hyperfiddle.electric.impl.runtime/context-slot-event","hyperfiddle.electric.impl.runtime/context-slot-check","hyperfiddle.electric.impl.runtime/context-slot-notifier","hyperfiddle.electric.impl.runtime/context-slot-terminator","hyperfiddle.electric.impl.runtime/context-slot-incoming","hyperfiddle.electric.impl.runtime/context-slots","hyperfiddle.electric.impl.runtime/tier-slot-parent","hyperfiddle.electric.impl.runtime/tier-slot-position","hyperfiddle.electric.impl.runtime/tier-slot-buffer","hyperfiddle.electric.impl.runtime/tier-slot-size","hyperfiddle.electric.impl.runtime/tier-slot-foreigns","hyperfiddle.electric.impl.runtime/tier-slot-hooks","hyperfiddle.electric.impl.runtime/tier-slot-vars","hyperfiddle.electric.impl.runtime/tier-slot-remote","hyperfiddle.electric.impl.runtime/tier-slots","hyperfiddle.electric.impl.runtime/frame-slot-context","hyperfiddle.electric.impl.runtime/frame-slot-parent","hyperfiddle.electric.impl.runtime/frame-slot-id","hyperfiddle.electric.impl.runtime/frame-slot-position","hyperfiddle.electric.impl.runtime/frame-slot-foreign","hyperfiddle.electric.impl.runtime/frame-slot-static","hyperfiddle.electric.impl.runtime/frame-slot-dynamic","hyperfiddle.electric.impl.runtime/frame-slot-variables","hyperfiddle.electric.impl.runtime/frame-slot-sources","hyperfiddle.electric.impl.runtime/frame-slot-targets","hyperfiddle.electric.impl.runtime/frame-slot-inputs","hyperfiddle.electric.impl.runtime/frame-slot-tiers","hyperfiddle.electric.impl.runtime/frame-slot-constants","hyperfiddle.electric.impl.runtime/frame-slots","hyperfiddle.electric.impl.runtime/input-slot-frame","hyperfiddle.electric.impl.runtime/input-slot-notifier","hyperfiddle.electric.impl.runtime/input-slot-terminator","hyperfiddle.electric.impl.runtime/input-slot-current","hyperfiddle.electric.impl.runtime/input-slot-dirty","hyperfiddle.electric.impl.runtime/input-slot-check","hyperfiddle.electric.impl.runtime/input-slot-pending","hyperfiddle.electric.impl.runtime/input-slot-cancel","hyperfiddle.electric.impl.runtime/input-slots","hyperfiddle.electric.impl.runtime/output-slot-input","hyperfiddle.electric.impl.runtime/output-slot-id","hyperfiddle.electric.impl.runtime/output-slot-iterator","hyperfiddle.electric.impl.runtime/output-slot-current","hyperfiddle.electric.impl.runtime/output-slot-dirty","hyperfiddle.electric.impl.runtime/output-slot-done","hyperfiddle.electric.impl.runtime/output-slot-prev","hyperfiddle.electric.impl.runtime/output-slot-next","hyperfiddle.electric.impl.runtime/output-slot-time","hyperfiddle.electric.impl.runtime/output-slots","G__30749","hyperfiddle.electric.impl.runtime/aswap","args-arr__5794__auto__","argseq__5795__auto__","seq30740","G__30741","G__30742","G__30743","G__30744","G__30745","G__30746","arr","slot","G__30759","a","G__30764","G__30765","b","G__30767","G__30768","G__30769","c","G__30770","G__30771","G__30772","G__30773","ds","hyperfiddle.electric.impl.runtime/doto-aset","k","v","G__30781","hyperfiddle.electric.impl.runtime/make-context","G__30785","cljs.core/identity","cljs.core/transient","hyperfiddle.electric.impl.runtime/make-tier","parent","position","G__30791","hyperfiddle.electric.impl.runtime/make-frame","context","id","foreign","static","dynamic","variable-count","source-count","constant-count","target-count","output-count","input-count","buffer","vars","boot","tier-count","frame","G__30797","cljs.core/count","n__5636__auto__","i","hyperfiddle.electric.impl.runtime.aswap","cljs.core/assoc!","prevs","cljs.core/reduce-kv","m","prev","proc","result","hyperfiddle.electric.impl.runtime/input-ready","input","fexpr__30803","hyperfiddle.electric.impl.runtime/output-dirty","output","dirty","check","fexpr__30804","hyperfiddle.electric.impl.runtime/output-spawn","G__30806","G__30807","fexpr__30805","hyperfiddle.electric.impl.runtime/make-output","hyperfiddle.electric.impl.runtime/input-cancel","fexpr__30816","hyperfiddle.electric.impl.runtime/input-change","hyperfiddle.electric.impl.runtime/input-freeze","fexpr__30818","hyperfiddle.electric.impl.runtime/update-event","seq30819","G__30820","G__30821","G__30822","temp__5806__auto__","event","cljs.core/update","fexpr__30826","hyperfiddle.electric.impl.runtime/input-check","path","hyperfiddle.electric.impl.runtime.update_event","cljs.core/conj","cljs.core._EQ_","wpos","t","p","n","cljs.core/inc","cljs.core/assoc","hyperfiddle.electric.impl.runtime/input-transfer","fexpr__30828","G__30829","fexpr__30830","hyperfiddle.electric.impl.runtime/make-input","deps","cljs.core.reduce","hyperfiddle.electric.impl.runtime/input-spawn","hyperfiddle.electric.impl.runtime/check-unbound-var","hyperfiddle.electric.impl.runtime/static","hyperfiddle.electric.impl.runtime/dynamic","hyperfiddle.electric.impl.runtime/tree","tiers","cljs.core.conj","tier","buf","G__30834","hyperfiddle.electric.impl.runtime/find-scope","s","cljs.core.into","cljs.core/keys","hyperfiddle.electric.impl.runtime/frame-walk-tiers","step","cb","start","size","back","back-inc-size","stop","cljs.core.get","hyperfiddle.electric.impl.runtime/tier-walk-frames","hyperfiddle.electric.impl.runtime/notify-rotate","anchor","cljs.core/contains?","target","hyperfiddle.electric.impl.runtime/array-call","fexpr__30839","hyperfiddle.electric.impl.runtime/frame-dispose","hyperfiddle.electric.impl.runtime/frame-rotate","to","from","cljs.core/compare","j","hyperfiddle.electric.impl.runtime/move","hyperfiddle.electric.impl.runtime/frame-cancel","temp__5808__auto__","pos","hyperfiddle.electric.impl.runtime/acopy","src","src-off","dest","dest-off","hyperfiddle.electric.impl.runtime/constructor","par","cap","G__30841","args30840","hyperfiddle.electric.impl.runtime/FrameIterator","hyperfiddle.electric.impl.runtime/->FrameIterator","hyperfiddle.electric.impl.runtime/constant","ctor","consts","missionary.core/watch","cljs.core.atom","G__30842","G__30843","cljs.core/dissoc!","hyperfiddle.electric.impl.failer/run","hyperfiddle.electric.impl.runtime/inject","<y","foreigns","hyperfiddle.electric.impl.runtime/bind","seq30844","G__30845","e30846","fexpr__30847","hyperfiddle.electric.impl.runtime/with","cljs.core/vreset!","G__30849","hyperfiddle.electric.impl.runtime/clause","G__30850","hyperfiddle.electric.debug/unwrap","G__30851","hyperfiddle.electric.impl.runtime/recover","catch","hyperfiddle.electric.impl.yield2/yield","<c","G__30852","hyperfiddle.electric.impl.runtime/variable","<<x","cr30853-state","cr30853-place-3","missionary.core/unpark","cr30853-place-4","cr30853-place-5","cr30853-place-6","cr30853-place-7","cr30853-block-5","cr30853-block-3","cr30853-exception","e30867","cr30853-block-7","cr30853-place-0","cr30853-place-1","cr30853-block-1","e30868","cr30853-place-13","cr30853-block-6","e30869","cr30853-place-14","cr30853-place-15","cr30853-place-16","cr30853-block-8","e30870","cr30853-place-2","cr30853-block-2","missionary.core/switch","e30871","cr30853-place-12","e30872","cr30853-place-8","cr30853-place-9","cr30853-place-10","cr30853-place-11","cr30853-block-4","e30873","cr30853-place-17","e30877","e30878","G__30879","cr30853-block-0","G__30875","G__30876","fexpr__30874","hyperfiddle.electric.impl.runtime/source","G__30880","hyperfiddle.electric.impl.runtime/target","hyperfiddle.electric.impl.runtime/hook","G__30881","G__30882","cljs.core/dissoc","hyperfiddle.electric.impl.runtime/unbound","hyperfiddle.electric.impl.runtime/subject-at","!","hyperfiddle.electric.impl.runtime/context-ack","rpos","cljs.core/dec","hyperfiddle.electric.impl.runtime/context-cancel","hyperfiddle.electric.impl.runtime/context-transfer","fexpr__30883","larger","split","o","hyperfiddle.electric.impl.runtime/eval-tree-inst","inst","G__30884","cljs.core/Keyword","map__30885","cljs.core/--destructure-map","vec__30886","cljs.core.nth","vec__30889","target-frame","target-slot","source-frame","source-slot","G__30893","G__30894","fexpr__30892","p__30895","vec__30896","hyperfiddle.electric.impl.runtime/eval-change-inst","value","p__30899","vec__30900","hyperfiddle.electric.impl.runtime/eval-freeze-inst","p__30903","map__30904","hyperfiddle.electric.impl.runtime/parse-event","acks","tree","change","freeze","hyperfiddle.electric.impl.runtime/process-incoming-events",">incoming","missionary.core/sample","cljs.core/reduce","hyperfiddle.electric.impl.runtime/write-outgoing-events","write",">events","cr30905-state","cr30905-place-0","cr30905-place-1","cr30905-block-1","missionary.core/fork","cr30905-exception","e30917","cr30905-place-2","cr30905-place-3","cr30905-place-4","cr30905-place-5","cr30905-place-6","cr30905-place-7","cr30905-block-4","cr30905-block-2","e30918","cr30905-place-8","cr30905-place-9","cr30905-place-10","cr30905-block-3","missionary.core/park","e30922","cr30905-place-11","cr30905-block-5","e30925","cr30905-place-12","e30926","e30927","G__30928","cr30905-block-0","missionary.core/ap-run","G__30920","G__30921","fexpr__30919","cljs.core/=","G__30924","fexpr__30923","hyperfiddle.electric.impl.runtime/peer","var-count","?read","hyperfiddle$electric$impl$runtime$peer_$_rec","on-error","missionary.core/reactor-call","missionary.core/stream!","<main","cljs.core.repeat","G__30929","missionary.core/relieve","cljs.core/into","cljs.core/vector","missionary.core/observe","hyperfiddle.electric.impl.runtime/collapse","seq30930","G__30931","G__30932","G__30933","cljs.core/iterate","cljs.core/pop","cljs.core.transduce","cljs.core.comp","cljs.core.map","cljs.core/peek","cljs.core.take","hyperfiddle.electric.impl.runtime/snapshot","seq30934","G__30935","G__30936","env","cljs.core.update","hyperfiddle.electric.impl.runtime/reverse-index","cljs.core/vec","hyperfiddle.electric.impl.runtime/empty-frame","p__30937","map__30938","hyperfiddle.electric.impl.runtime/compile","nop","sub","pub","inject","lift","vget","bind","invoke","do","global","literal","variable","source","constant","main","fns","off","idx","dyn","G__30939","G__30940","G__30941","walk","arg","cljs.core/max","G__30943","G__30944","fexpr__30942","d","G__30945","G__30946","cljs.core/cons","G__30947","cljs.core.symbol","G__30948","G__30949","hyperfiddle.electric.impl.runtime/sym","seq30950","self__5755__auto__","cljs.core/seq","clojure.string.join","hyperfiddle.electric.impl.runtime/emit","prefix","hyperfiddle.electric.impl.runtime.sym","cljs.core.sequence","cljs.core.concat","cljs.core/List","form","cont","_ns","forms","remote","cljs.core.mapv","G__30962","hyperfiddle.electric.impl.runtime/juxt-with","seq30957","G__30958","G__30959","G__30960","G__30961","g","G__30963","G__30964","G__30965","G__30966","G__30967","h","G__30968","G__30969","G__30970","G__30971","G__30972","G__30973","G__30974","G__30975","G__30976","G__30977","G__30978","G__30979","G__30980","G__30981","G__30982","G__30983","G__30984","G__30985","G__30986","G__30987","G__30988","G__30989","G__30990","G__30991","G__30992","js","p1__30951#","p1__30952#","p1__30953#","p1__30954#","p1__30955#","hyperfiddle.electric.impl.runtime/globals","program","cljs.core/tree-seq","cljs.core/coll?","cljs.core.eduction","cljs.core.filter","cljs.core/vector?","p__30993","vec__30994","cljs.core/second","cljs.core.distinct","cljs.core.sort_by","cljs.core.juxt","cljs.core/namespace","cljs.core/name","hyperfiddle.electric.impl.runtime/missing-exports","resolvef","p1__30997#","cljs.core/symbol","hyperfiddle.electric.impl.runtime/dynamic-resolve","nf","G__30999","hyperfiddle.electric.impl.runtime/eval","hyperfiddle.electric.impl.runtime.eval","cljs.core/constantly","ns","G__31004","cljs.core/find-ns","*ns*-orig-val__31005","*ns*-temp-val__31006","cljs.core/*ns*","cljs.core/eval","pubs","G__31001","G__31002","G__31003","res","r","G__31000","cljs.core.ex_info","hyperfiddle.electric.impl.runtime/queue","q"]],"~:used-vars",["^K",["~$hyperfiddle.electric.impl.yield2/yield","~$hyperfiddle.electric.impl.runtime/frame-slot-targets","~$cljs.core/--destructure-map","~$hyperfiddle.electric.impl.runtime/make-context","~$clojure.string/join","~$hyperfiddle.electric.impl.runtime/with","~$hyperfiddle.electric.impl.runtime/output-slot-input","~$cljs.core/comp","~$hyperfiddle.electric.impl.runtime/this","~$hyperfiddle.electric.impl.runtime/source","~$hyperfiddle.electric.impl.runtime/frame-rotate","~$hyperfiddle.electric.impl.runtime/tier-slot-vars","~$hyperfiddle.electric.impl.runtime/context-slot-local-id","~$hyperfiddle.electric.impl.runtime/output-dirty","~$js/console.error","~$hyperfiddle.electric.impl.runtime/sym","~$missionary.core/ap-run","~$cljs.core/eval","~$hyperfiddle.electric.impl.runtime/aswap","~$hyperfiddle.electric.impl.runtime/acopy","~$cljs.core/vector?","~$js/hyperfiddle.electric","~$hyperfiddle.electric.impl.runtime/snapshot","~$cljs.core/filter","~$hyperfiddle.electric.impl.runtime/tier-slot-foreigns","~$cljs.core/=","~$cljs.core/keys","~$hyperfiddle.electric.impl.runtime/eval-tree-inst","~$cljs.core/dec","~$hyperfiddle.electric.impl.runtime/input-transfer","~$hyperfiddle.electric.impl.runtime/check-unbound-var","~$hyperfiddle.electric.impl.runtime/move","~$missionary.core/cp*","~$cljs.core/partial","~$cljs.core/-write","~$contrib.data/select-ns","~$hyperfiddle.electric.impl.runtime/array-call","~$js/hyperfiddle.electric.Pending","~$missionary.core/reactor-call","~$hyperfiddle.electric.impl.runtime/frame-slot-inputs","~$cljs.core/IndexedSeq","~$hyperfiddle.electric.impl.runtime/emit","~$hyperfiddle.electric.impl.runtime/FrameIterator","~$hyperfiddle.electric.impl.runtime/tree","~$cljs.core/count","~$cljs.core/deref","~$hyperfiddle.electric.impl.runtime/input-slot-frame","~$cljs.core/transduce","~$cljs.core/reduce","~$cljs.core/seq","~$hyperfiddle.electric.impl.runtime/inject","~$hyperfiddle.electric.debug/error","~$cljs.core/apply","~$cljs.core/identity","~$cljs.core/find-ns","~$cljs.core/Keyword","~$hyperfiddle.electric.impl.runtime/frame-slot-context","~$cljs.core/take","~$hyperfiddle.electric.impl.runtime/update-event","~$js/hyperfiddle","~$cljs.core/aclone","~$hyperfiddle.electric.impl.runtime/select-debug-info","~$cljs.core/object-array","~$hyperfiddle.electric.impl.runtime/clause","~$hyperfiddle.electric.impl.runtime/context-transfer","~$cljs.core/vreset!","~$cljs.core/mapv","~$hyperfiddle.electric.impl.runtime/constructor","~$cljs.core/iterate","~$cljs.core/distinct","~$cljs.core/dissoc","~$hyperfiddle.electric.impl.runtime/frame-slot-static","~$hyperfiddle.electric.impl.runtime/frame-slot-dynamic","~$hyperfiddle.electric.impl.runtime/frame-walk-tiers","~$cljs.core/atom","~$hyperfiddle.electric.debug/unwrap","~$hyperfiddle.electric.impl.runtime/collapse","~$hyperfiddle.electric.impl.runtime/frame-slot-position","~$missionary.core/switch","~$cljs.core/concat","~$hyperfiddle.electric.impl.runtime/write-outgoing-events","~$cljs.core/pop","~$cljs.core/tree-seq","~$hyperfiddle.electric.impl.runtime/find-scope","~$hyperfiddle.electric.impl.runtime/context-slot-event","~$hyperfiddle.electric.impl.runtime/target","~$hyperfiddle.electric.impl.runtime/process-incoming-events","~$hyperfiddle.electric.impl.runtime/subject-at","~$hyperfiddle.electric.impl.runtime/frame-dispose","~$hyperfiddle.electric.impl.runtime/pure","~$hyperfiddle.electric.impl.runtime/reverse-index","~$hyperfiddle.electric.impl.runtime/context-slot-remote-id","~$hyperfiddle.electric.impl.runtime/input-ready","~$hyperfiddle.electric.impl.runtime/notify-rotate","~$missionary.core/watch","~$hyperfiddle.electric.impl.runtime/output-spawn","~$cljs.core/contains?","~$hyperfiddle.electric.impl.runtime/dynamic","~$cljs.core/into","~$hyperfiddle.electric.impl.runtime/latest-apply","~$hyperfiddle.electric.impl.runtime/dynamic-resolve","~$cljs.core/conj","~$hyperfiddle.electric.impl.runtime/output-slot-iterator","~$hyperfiddle.electric.impl.runtime/make-frame","~$hyperfiddle.electric.impl.runtime/context-slot-terminator","~$js/hyperfiddle.electric.impl.runtime","~$hyperfiddle.electric.impl.runtime/context-slot-pending-buffer","~$hyperfiddle.electric.impl.runtime/fail","~$hyperfiddle.electric.impl.runtime/empty-event","~$cljs.core/update","~$cljs.core/namespace","~$hyperfiddle.electric.impl.runtime/output-slot-time","~$cljs.core/juxt","~$cljs.core/peek","~$cljs.core/map","~$hyperfiddle.electric.impl.runtime/context-slots","~$hyperfiddle.electric.impl.runtime/compile","~$missionary.core/sample","~$missionary.core/latest","~$hyperfiddle.electric.impl.runtime/make-input","~$js/missionary.Cancelled","~$hyperfiddle.electric.impl.runtime/output-slot-id","~$cljs.core/volatile!","~$hyperfiddle.electric.impl.runtime/globals","~$cljs.core/List","~$hyperfiddle.electric.impl.runtime/error","~$hyperfiddle.electric.impl.runtime/input-slot-pending","~$hyperfiddle.electric.impl.runtime/tier-slots","~$cljs.core/get","~$missionary.core/stream!","~$hyperfiddle.electric.impl.runtime/lift-cancelled","~$cljs.core/constantly","~$hyperfiddle.electric.impl.runtime/missing-exports","~$hyperfiddle.electric.impl.runtime/frame-cancel","~$hyperfiddle.electric.impl.runtime/->t_hyperfiddle$electric$impl$runtime30669","~$hyperfiddle.electric.impl.runtime/output-slots","~$missionary.core/unpark","~$missionary.core/relieve","~$js/hyperfiddle.electric.impl","~$hyperfiddle.electric.impl.runtime/output-slot-dirty","~$missionary.core/fork","~$missionary.core/park","~$hyperfiddle.electric.impl.runtime/context-slot-pending-rpos","~$hyperfiddle.electric.impl.runtime/bind","~$hyperfiddle.electric.impl.runtime/eval-change-inst","~$js/hyperfiddle.electric.Failure","~$hyperfiddle.electric.impl.runtime/unbound","~$cljs.core/symbol","~$hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669","~$hyperfiddle.electric.impl.runtime/context-slot-incoming","~$cloroutine.impl/coroutine","~$hyperfiddle.electric.impl.runtime/tier-slot-remote","~$hyperfiddle.electric.impl.runtime/context-cancel","~$hyperfiddle.electric.impl.runtime/tier-walk-frames","~$hyperfiddle.electric.impl.runtime/signal","~$hyperfiddle.electric.impl.runtime/eval-freeze-inst","~$hyperfiddle.electric.impl.runtime/frame-slot-sources","~$hyperfiddle.electric.impl.runtime/output-slot-current","~$hyperfiddle.electric.impl.runtime/failure","~$hyperfiddle.electric.impl.runtime/make-tier","~$cljs.core/nth","~$cljs.core/ex-info","~$missionary.core/signal!","~$cljs.core/max","~$cljs.core/second","~$hyperfiddle.electric.impl.runtime/doto-aset","~$hyperfiddle.electric.impl.runtime/empty-frame","~$hyperfiddle.electric.impl.runtime/frame-slot-constants","~$hyperfiddle.electric.impl.runtime/input-slot-terminator","~$cljs.core/next","~$cljs.core/vec","~$js/hyperfiddle.electric.impl.runtime.t_hyperfiddle$electric$impl$runtime30669","~$hyperfiddle.electric.impl.runtime/frame-slot-id","~$hyperfiddle.electric.impl.runtime/context-slot-root","~$cljs.core/select-keys","~$cljs.core/transient","~$hyperfiddle.electric.impl.runtime/input-cancel","~$hyperfiddle.electric.impl.runtime/context-slot-frame-store","~$hyperfiddle.electric.impl.runtime/tier-slot-buffer","~$hyperfiddle.electric.impl.runtime/hook","~$hyperfiddle.electric.impl.failer/run","~$cljs.core/sequence","~$hyperfiddle.electric.impl.runtime/pst","~$cljs.core/not","~$cljs.core/compare","~$hyperfiddle.electric.impl.runtime/input-slots","~$cljs.core/cons","~$hyperfiddle.electric.impl.runtime/input-freeze","~$hyperfiddle.electric.impl.runtime/eval","~$cljs.core/assoc","~$hyperfiddle.electric.impl.runtime/input-check","~$hyperfiddle.electric.impl.runtime/parse-event","~$hyperfiddle.electric.impl.runtime/frame-slot-variables","~$hyperfiddle.electric.impl.runtime/tier-slot-hooks","~$hyperfiddle.electric.impl.runtime/context-slot-pending-wpos","~$cljs.core/coll?","~$hyperfiddle.electric.impl.runtime/peer","~$hyperfiddle.electric.impl.runtime/->It","~$hyperfiddle.electric.impl.runtime/input-spawn","~$cljs.core/reduce-kv","~$hyperfiddle.electric.impl.runtime/->FrameIterator","~$cljs.core/repeat","~$hyperfiddle.electric.impl.runtime/context-slot-check","~$hyperfiddle.electric.impl.runtime/input-slot-cancel","~$hyperfiddle.electric.impl.runtime/queue","~$hyperfiddle.electric.impl.runtime/check-failure","~$hyperfiddle.electric.impl.runtime/input-slot-current","~$hyperfiddle.electric.impl.runtime/pending","~$hyperfiddle.electric.impl.runtime/juxt-with","~$hyperfiddle.electric.impl.runtime/context-ack","~$hyperfiddle.electric.impl.runtime/frame-slot-foreign","~$hyperfiddle.electric.impl.runtime/It","~$cljs.core/some-fn","~$hyperfiddle.electric.impl.runtime/variable","~$hyperfiddle.electric.impl.runtime/input-slot-notifier","~$cljs.core/first","~$hyperfiddle.electric.impl.runtime/context-slot-notifier","~$cljs.core/sort-by","~$cljs.core/assoc!","~$cljs.core/*ns*","~$cljs.core/dissoc!","~$cljs.core/eduction","~$hyperfiddle.electric.impl.runtime/constant","~$cljs.core/name","~$cljs.core/merge","~$hyperfiddle.electric.impl.runtime/tier-slot-parent","~$js/Error","~$hyperfiddle.electric.impl.runtime/frame-slot-tiers","~$hyperfiddle.electric.impl.runtime/input-slot-check","~$hyperfiddle.electric.impl.runtime/frame-slot-parent","~$hyperfiddle.electric.impl.runtime/make-output","~$hyperfiddle.electric.impl.runtime/input-change","~$cljs.core/vector","~$missionary.core/observe","~$hyperfiddle.electric.impl.runtime/tier-slot-size","~$cljs.core/inc","~$hyperfiddle.electric.impl.runtime/output-slot-done","~$hyperfiddle.electric.impl.runtime/input-slot-dirty","~$hyperfiddle.electric.impl.runtime/tier-slot-position","~$hyperfiddle.electric.impl.runtime/output-slot-prev","~$hyperfiddle.electric.impl.runtime/frame-slots","~$hyperfiddle.electric.impl.runtime/recover","~$hyperfiddle.electric.impl.runtime/static","~$hyperfiddle.electric.impl.runtime/latest-first","~$hyperfiddle.electric.impl.runtime/output-slot-next"]]],"~:cache-keys",["~#cmap",[["^1Q","hyperfiddle/electric/impl/array_fields.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^K",[]],"~:deps-syms",["^19","^F","^I"]]],["^1Q","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.dom.HtmlElement"]]],["^1Q","missionary/Cancelled.js"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/tools/reader/impl/utils.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^1=","~$goog.string"]]],["^1Q","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/env.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.array","~$goog.object","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^1Q","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^7U"]]],["^1Q","cljs/analyzer/impl/namespaces.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","missionary/impl/Semaphore.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V"]]],["^1Q","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","missionary/impl/Reactor.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","missionary/core.cljc"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cloroutine.core","~$missionary.impl.Reduce","~$missionary.impl.Reductions","~$missionary.impl.GroupBy","~$missionary.impl.Relieve","~$missionary.impl.Latest","~$missionary.impl.Sample","~$missionary.impl.Reactor","~$missionary.impl.Fiber","~$missionary.impl.Sequential","~$missionary.impl.Ambiguous","~$missionary.impl.Continuous","~$missionary.impl.Watch","~$missionary.impl.Observe","~$missionary.impl.Buffer","~$missionary.impl.Rendezvous","~$missionary.impl.Dataflow","~$missionary.impl.Mailbox","~$missionary.impl.Semaphore","~$missionary.impl.RaceJoin","~$missionary.impl.Sleep","~$missionary.impl.Never","~$missionary.impl.Seed","~$missionary.impl.Eduction","~$missionary.impl.Zip"]]],["^1Q","hyperfiddle/electric/impl/runtime.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^1:","^1;","^17","^12","^13","^16","^I","^1=","^15","^U","^W","^Y","^["]]],["^1Q","cljs/tools/reader/edn.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.tools.reader.impl.errors","~$cljs.tools.reader.reader-types","~$cljs.tools.reader.impl.utils","~$cljs.tools.reader.impl.commons","~$cljs.tools.reader","^7Q","~$goog.string.StringBuffer"]]],["^1Q","missionary/impl/Seed.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","hyperfiddle/rcf.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.test","^1=","~$hyperfiddle.rcf.reporters","~$hyperfiddle.rcf.queue","~$hyperfiddle.rcf.time","~$hyperfiddle.rcf.unify"]]],["^1Q","cljs/tools/reader/impl/inspect.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","hyperfiddle/electric/Pending.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/pprint.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^1=","^7Q","^8O"]]],["^1Q","missionary/impl/RaceJoin.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","cljs/tools/reader.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8K","^8L","^8M","^8J","^7R","^7Q","^8O"]]],["^1Q","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cloroutine/core.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cloroutine.impl"]]],["^1Q","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V"]]],"~:SHADOW-TIMESTAMP",[1677656185000,1677656185000,1674331854000],["^1Q","missionary/impl/Sequential.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^89","^U"]]],["^1Q","missionary/impl/Ambiguous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^89","^U"]]],["^1Q","missionary/impl/Watch.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","~$goog.reflect"]]],["^1Q","missionary/impl/Eduction.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","~$goog.fs.blob","^7W","~$goog.html.SafeScript","~$goog.html.trustedtypes","^7Y","^7Z","^7[","^80"]]],["^1Q","missionary/impl/Latest.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$missionary.impl.Heap"]]],["^1Q","missionary/impl/Sample.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","cljs/analyzer/passes/and_or.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.analyzer.passes"]]],["^1Q","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","missionary/impl/Relieve.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","missionary/impl/GroupBy.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","hyperfiddle/electric/Remote.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","missionary/impl/Zip.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7[","~$goog.html.SafeUrl","^80","^7V","^7U"]]],["^1Q","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^8Y","~$goog.html.SafeStyle","^91","^7X","~$goog.html.uncheckedconversions","^7[","^7U"]]],["^1Q","contrib/data.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^D","~$clojure.datafy","^I"]]],["^1Q","missionary/impl/Buffer.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","clojure/walk.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","cljs/analyzer/passes.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7[","^7Y","^7Z","^8Y","^95","~$goog.html.SafeStyleSheet","^91","~$goog.dom.TagName","^7X","^80","^7V","~$goog.labs.userAgent.browser","^7R","^7S","^7U","~$goog.dom.tags","^8Z"]]],["^1Q","cljs/math.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7S"]]],["^1Q","hyperfiddle/electric/impl/ir.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","missionary/impl/Continuous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^89","^U"]]],["^1Q","missionary/impl/Reduce.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","hyperfiddle/rcf/time.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/reader.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^7S","^8N","~$cljs.tools.reader.edn","^8O"]]],["^1Q","missionary/impl/Dataflow.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","missionary/impl/Mailbox.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^1Q","hyperfiddle/electric/impl/yield2.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U","^I","~$hyperfiddle.electric.impl.array-fields","^16"]]],["^1Q","cljs/tagged_literals.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.reader"]]],["^1Q","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7R","^7V","~$goog.collections.maps","^7Q","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^1Q","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cloroutine/impl.cljc"],["178f3a4f51830ad87c5f6a0f0bef14aa6108844d","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.analyzer","~$cljs.env"]]],["^1Q","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","missionary/impl/Observe.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","clojure/core/protocols.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",[]]],["^1Q","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7R","^7S"]]],["^1Q","cljs/tools/reader/impl/errors.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8K","^1=","~$cljs.tools.reader.impl.inspect"]]],["^1Q","missionary/impl/Rendezvous.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","clojure/string.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^7Q","^8O"]]],["^1Q","missionary/impl/Reductions.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.dom.safe","^96","^7[","^7U"]]],["^1Q","missionary/impl/Sleep.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","hyperfiddle/rcf/queue.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8S"]]],["^1Q","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.labs.userAgent","^7U"]]],["^1Q","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/tools/reader/reader_types.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8L","^7Q","^8O"]]],["^1Q","missionary/impl/Heap.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","hyperfiddle/electric/impl/failer.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","missionary/impl/Fiber.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","^94","^8Y","^95","^98","^91","^7X","^7[","^7U","^7Y"]]],["^1Q","hyperfiddle/rcf/unify.cljc"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$clojure.walk","~$clojure.set"]]],["^1Q","hyperfiddle/electric/debug.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^1=","^15","^I","^W","^Y","^U","~$hyperfiddle.electric.FailureInfo"]]],["^1Q","cljs/tools/reader/impl/commons.cljs"],["927809dcb44fa726e4969d993e3e733636d95ebb","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8J","^8K","^8L"]]],["^1Q","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","cljs/core.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","~$goog.math.Long","~$goog.math.Integer","^7Q","^7S","^7R","~$goog.Uri","^8O"]]],["^1Q","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7[","^80","^8Z","^7V"]]],["^1Q","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7[","^95","^80","^7S","^7V","^7U"]]],["^1Q","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^8W"]]],["^1Q","hyperfiddle/electric/Failure.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]],["^1Q","clojure/set.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","^7Q"]]],["^1Q","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^7V","^80"]]],["^1Q","cljs/analyzer.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$cljs.analyzer.impl","~$cljs.analyzer.impl.namespaces","~$cljs.analyzer.passes.and-or","^9G","^9@","~$cljs.tagged-literals","^8N","^8K","^9L","^1=","^7Q"]]],["^1Q","clojure/datafy.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","~$clojure.core.protocols"]]],["^1Q","hyperfiddle/rcf/reporters.cljs"],["2aeb2e1ec9693bc3a2e33cd73bb782d4a0614395","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^8P"]]],["^1Q","cljs/test.cljs"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^1=","^@"]]],["^1Q","hyperfiddle/electric/impl/local.cljc"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","cljs/analyzer/impl.cljc"],["bc14df6666853ed869d7b88aaa864111c65d0c7f","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F"]]],["^1Q","missionary/impl/Never.cljs"],["b9821cff112a419498afb6330bfabf7bf58e36dd","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19","^F","^U"]]],["^1Q","hyperfiddle/electric/FailureInfo.js"],["55714fd08eb8e48d7afc653f0924e5d8cce25a77","^7L",["^ ","^7M",null,"^7N",["^K",[]],"^7O",["^19"]]]]],"~:clj-info",["^ ","jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/local.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/template.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/string.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/cljs/tools/reader/reader_types.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/errors.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/api.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/impl.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/instant.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/js_deps.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/tagged_literals.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/externs.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/util.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/pprint.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/test.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/unify.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/time.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/pprint.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/test.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/default_data_readers.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/missionary/missionary/b.28/missionary-b.28.jar!/missionary/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/impl/inspect.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/data/json.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/passes/and_or.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/set.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/analyzer.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/walk.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/source_map/base64_vlq.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/core.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/impl.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/yield2.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/ast.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/edn.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/core.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/env/macros.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/hyperfiddle/electric/impl/array_fields.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm/utils.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/stacktrace.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader/reader_types.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1674331770000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/compiler.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf.cljc",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/vendor/clojure/tools/reader.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/reflect.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/rcf/20220926-202227/rcf-20220926-202227.jar!/hyperfiddle/rcf/queue.clj",1677656082000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojure/1.11.1/clojure-1.11.1.jar!/clojure/java/io.clj",1669480727000,"jar:file:/Users/bariscanates/.m2/repository/cloroutine/cloroutine/11/cloroutine-11.jar!/cloroutine/core.cljc",1678884165000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer/env.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/com/hyperfiddle/electric/v2-alpha-349-ge9996713/electric-v2-alpha-349-ge9996713.jar!/contrib/data.cljc",1691052515000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/instant.clj",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/clojurescript/1.11.60/clojurescript-1.11.60.jar!/cljs/analyzer/impl/namespaces.cljc",1674331854000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer/1.1.1/tools.analyzer-1.1.1.jar!/clojure/tools/analyzer.clj",1691052514000,"jar:file:/Users/bariscanates/.m2/repository/org/clojure/tools.analyzer.jvm/1.2.3/tools.analyzer.jvm-1.2.3.jar!/clojure/tools/analyzer/jvm.clj",1691052514000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1,"^8",14,"^9",1,"^:",47,"^;",true],"^<",["^ ","^=","^>","^?","^@","^A","^B","^C","^D","^E","^F"],"^G",["^ ","^H","^I"],"^J",["^K",["^L","^M"]],"^N","^O","^P",["^ "],"^S",["^ ","^T","^U","^V","^W","^X","^Y","^Z","^["],"^10",["^ ","^T","^U","^11","^12","^13","^13","^W","^W","^12","^12","^14","^15","^16","^16","^17","^17","^18","^13","^V","^W","^F","^F","^X","^Y","^19","^19","^1:","^1:","~$m","^16","^I","^I","^[","^[","^15","^15","~$l","^17","^1;","^1;","^1<","^1=","^Z","^[","^1=","^1=","^Y","^Y","^1>","^1;"],"^1?",["^K",["^1@"]],"~:shadow/js-access-global",["^K",["Error"]],"^1A",["^ ","^1B","^1:","^H","^I"],"~:defs",["^ ","~$target",["^ ","~:protocol-inline",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",630,"^8",7,"^9",630,"^:",13,"~:arglists",["^1E",["~$quote",["^1E",[["~$frame","~$slot","~$ctor"]]]]]],"^N","^3Z","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"~:method-params",["^1E",[["^;G","^;H","^;I"]]],"~:protocol-impl",null,"~:arglists-meta",["^1E",[null,null]],"^8",1,"~:variadic?",false,"^7",630,"~:ret-tag","~$clj-nil","^9",630,"~:max-fixed-arity",3,"~:fn-var",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^;I"]]]]]],"~$context-slot-event",["^ ","^N","^3Y","^6","hyperfiddle/electric/impl/runtime.cljc","^7",133,"^8",1,"^9",133,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",133,"^8",6,"^9",133,"^:",24],"~:tag","~$number"],"~$input-slot-terminator",["^ ","^N","^5U","^6","hyperfiddle/electric/impl/runtime.cljc","^7",167,"^8",1,"^9",167,"^:",27,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",167,"^8",6,"^9",167,"^:",27],"^;S","^;T"],"~$pure",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",95,"^8",7,"^9",95,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$x"]]]]]],"^N","^42","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["~$x"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",95,"^;N","~$any","^9",95,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$x"]]]]]],"~$frame-dispose",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",473,"^8",7,"^9",473,"^:",20,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"^N","^41","^6","hyperfiddle/electric/impl/runtime.cljc","^:",20,"^;J",["^1E",[["~$f"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",473,"^;N","^;O","^9",473,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"~$reverse-index",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",799,"^8",7,"^9",799,"^:",20,"^;E",["^1E",["^;F",["^1E",[["~$m"]]]]]],"^N","^43","^6","hyperfiddle/electric/impl/runtime.cljc","^:",20,"^;J",["^1E",[["~$m"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",799,"^;N",["^K",[null,"^;W"]],"^9",799,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$m"]]]]]],"~$frame-slot-position",["^ ","^N","^3R","^6","hyperfiddle/electric/impl/runtime.cljc","^7",153,"^8",1,"^9",153,"^:",25,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",153,"^8",6,"^9",153,"^:",25],"^;S","^;T"],"~$signal",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",121,"^8",7,"^9",121,"^:",13,"^;E",["^1E",["^;F",["^1E",[["~$<x"]]]]]],"^N","^5G","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"^;J",["^1E",[["^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",121,"^;N","~$missionary.impl.Reactor/Publisher","^9",121,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<0"]]]]]],"~$output-slot-current",["^ ","^N","^5J","^6","hyperfiddle/electric/impl/runtime.cljc","^7",178,"^8",1,"^9",178,"^:",25,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",178,"^8",6,"^9",178,"^:",25],"^;S","^;T"],"~$tier-walk-frames",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",448,"^8",7,"^9",448,"^:",23,"^;E",["^1E",["^;F",["^1E",[["~$tier","~$step","~$k","~$cb","~$start"]]]]]],"^N","^5F","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["^<4","^<5","~$k","^<6","^<7"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",448,"^;N",["^K",["^;W","^;O"]],"^9",448,"^;P",5,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<4","^<5","~$k","^<6","^<7"]]]]]],"~$recover",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",607,"^8",7,"^9",607,"^:",14,"^;E",["^1E",["^;F",["^1E",[["^<4","~$catch","^<0"]]]]]],"^N","^7F","^6","hyperfiddle/electric/impl/runtime.cljc","^:",14,"^;J",["^1E",[["^<4","^<9","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",607,"^;N","~$function","^9",607,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<4","^<9","^<0"]]]]]],"~$context-slot-pending-buffer",["^ ","^N","^4C","^6","hyperfiddle/electric/impl/runtime.cljc","^7",131,"^8",1,"^9",131,"^:",33,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",131,"^8",6,"^9",131,"^:",33],"^;S","^;T"],"~$context-slot-terminator",["^ ","^N","^4A","^6","hyperfiddle/electric/impl/runtime.cljc","^7",136,"^8",1,"^9",136,"^:",29,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",136,"^8",6,"^9",136,"^:",29],"^;S","^;T"],"~$empty-event",["^ ","^N","^4E","^6","hyperfiddle/electric/impl/runtime.cljc","^7",97,"^8",1,"^9",97,"^:",17,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",97,"^8",6,"^9",97,"^:",17],"^;S","~$cljs.core/IMap"],"~$input-slot-check",["^ ","^N","^79","^6","hyperfiddle/electric/impl/runtime.cljc","^7",170,"^8",1,"^9",170,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",170,"^8",6,"^9",170,"^:",22],"^;S","^;T"],"~$clause",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",603,"^8",7,"^9",603,"^:",13,"^;E",["^1E",["^;F",["^1E",[["~$f"],["~$f","~$c"]]]]],"~:top-fn",["^ ","^;M",false,"~:fixed-arity",2,"^;P",2,"^;J",[["~$f"],["~$f","~$c"]],"^;E",["^1E",[["~$f"],["~$f","~$c"]]],"^;L",["^1E",[null,null]]]],"^N","^3D","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"^<A",["^ ","^;M",false,"^<B",2,"^;P",2,"^;J",[["~$f"],["~$f","~$c"]],"^;E",["^1E",[["~$f"],["~$f","~$c"]]],"^;L",["^1E",[null,null]]],"^;J",[["~$f"],["~$f","~$c"]],"^;K",null,"^<B",2,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"~:methods",[["^ ","^<B",1,"^;M",false,"^;S","^<:"],["^ ","^<B",2,"^;M",false,"^;S","^<:"]],"^7",603,"^9",603,"^;P",2,"^;Q",true,"^;E",["^1E",[["~$f"],["~$f","~$c"]]]],"~$output-slot-time",["^ ","^N","^4H","^6","hyperfiddle/electric/impl/runtime.cljc","^7",183,"^8",1,"^9",183,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",183,"^8",6,"^9",183,"^:",22],"^;S","^;T"],"^L",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",819,"^8",7,"^9",819,"^:",14,"^;E",["^1E",["^;F",["^1E",[["~$inst",["^ ","~:keys",["~$nop","~$sub","~$pub","~$inject","~$lift","~$vget","~$bind","~$invoke","~$input","~$do","~$output","~$static","~$dynamic","~$global","~$literal","~$variable","~$source","~$constant","^;C","~$main"],"^1J","~$fns"]]]]]]],"^N","^4M","^6","hyperfiddle/electric/impl/runtime.cljc","^:",14,"^;J",["^1E",[["^<E","~$p__30937"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",819,"^;N",["^K",["^;W","^;O"]],"^9",819,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<E",["^ ","^<F",["^<G","^<H","^<I","^<J","^<K","^<L","^<M","^<N","^<O","^<P","^<Q","^<R","^<S","^<T","^<U","^<V","^<W","^<X","^;C","^<Y"],"^1J","^<Z"]]]]]]],"~$context-ack",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",657,"^8",7,"^9",657,"^:",18,"^;E",["^1E",["^;F",["^1E",[["~$context"]]]]]],"^N","^6R","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^=1"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",657,"^;N","^;O","^9",657,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1"]]]]]],"~$tier-slots",["^ ","^N","^4X","^6","hyperfiddle/electric/impl/runtime.cljc","^7",148,"^8",1,"^9",148,"^:",16,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",148,"^8",6,"^9",148,"^:",16],"^;S","^;T"],"~$make-frame",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",220,"^8",7,"^9",220,"^:",17,"^;E",["^1E",["^;F",["^1E",[["^=1","~$parent","~$id","~$position","~$foreign","^<R","^<S","~$variable-count","~$source-count","~$constant-count","~$target-count","~$output-count","~$input-count","~$buffer","~$vars","~$boot"]]]]]],"^N","^4@","^6","hyperfiddle/electric/impl/runtime.cljc","^:",17,"^;J",["^1E",[["^=1","^=4","^=5","^=6","^=7","^<R","^<S","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",220,"^;N","^;W","^9",220,"^;P",16,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1","^=4","^=5","^=6","^=7","^<R","^<S","^=8","^=9","^=:","^=;","^=<","^==","^=>","^=?","^=@"]]]]]],"~$globals",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1159,"^8",7,"^9",1159,"^:",14,"^;E",["^1E",["^;F",["^1E",[["~$program"]]]]]],"^N","^4T","^6","hyperfiddle/electric/impl/runtime.cljc","^:",14,"^;J",["^1E",[["^=B"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",1159,"^;N","^;W","^9",1159,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=B"]]]]]],"~$output-slot-id",["^ ","^N","^4R","^6","hyperfiddle/electric/impl/runtime.cljc","^7",176,"^8",1,"^9",176,"^:",20,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",176,"^8",6,"^9",176,"^:",20],"^;S","^;T"],"~$output-spawn",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",282,"^8",7,"^9",282,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^<O","^<Q"]]]]]],"^N","^48","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["^<O","^<Q"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",282,"^;N","~$objects","^9",282,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O","^<Q"]]]]]],"^M",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1184,"^8",7,"^9",1184,"^:",11,"^;E",["^1E",["^;F",["^1E",[["^<E"],["~$resolvef","^<E"]]]]],"^<A",["^ ","^;M",false,"^<B",2,"^;P",2,"^;J",[["^<E"],["^=F","^<E"]],"^;E",["^1E",[["^<E"],["^=F","^<E"]]],"^;L",["^1E",[null,null]]]],"^N","^6=","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^<A",["^ ","^;M",false,"^<B",2,"^;P",2,"^;J",[["^<E"],["^=F","^<E"]],"^;E",["^1E",[["^<E"],["^=F","^<E"]]],"^;L",["^1E",[null,null]]],"^;J",[["^<E"],["^=F","^<E"]],"^;K",null,"^<B",2,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^<C",[["^ ","^<B",1,"^;M",false,"^;S","^;W"],["^ ","^<B",2,"^;M",false,"^;S",["^K",["^;W","^;O"]]]],"^7",1184,"^9",1184,"^;P",2,"^;Q",true,"^;E",["^1E",[["^<E"],["^=F","^<E"]]]],"^<M",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",589,"^8",7,"^9",589,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$f","~$&","~$args"]]]]],"^<A",["^ ","^;M",true,"^<B",1,"^;P",1,"^;J",[["^1E",["~$f","^=G"]]],"^;E",["^1E",[["~$f","~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^5<","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^<A",["^ ","^;M",true,"^<B",1,"^;P",1,"^;J",[["^1E",["~$f","^=G"]]],"^;E",["^1E",[["~$f","~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["~$f","^=G"]]],"^;K",null,"^<B",1,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",1,"^;M",true,"^;S","^<:"]],"^7",589,"^;N","^;W","^9",589,"^;P",1,"^;Q",true,"^;E",["^1E",[["~$f","~$&","^=G"]]]],"~$eval-change-inst",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",737,"^8",7,"^9",737,"^:",23,"^;E",["^1E",["^;F",["^1E",[["^=1",["^=5","^;H"],"~$value"]]]]]],"^N","^5=","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["^=1","~$p__30895","^=I"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",737,"^;N","^=E","^9",737,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1",["^=5","^;H"],"^=I"]]]]]],"~$input-check",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",325,"^8",7,"^9",325,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"^N","^6?","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^<O"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",325,"^;N","^;O","^9",325,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"~$output-slot-iterator",["^ ","^N","^4?","^6","hyperfiddle/electric/impl/runtime.cljc","^7",177,"^8",1,"^9",177,"^:",26,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",177,"^8",6,"^9",177,"^:",26],"^;S","^;T"],"~$output-slot-dirty",["^ ","^N","^58","^6","hyperfiddle/electric/impl/runtime.cljc","^7",179,"^8",1,"^9",179,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",179,"^8",6,"^9",179,"^:",23],"^;S","^;T"],"~$missing-exports",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1167,"^8",7,"^9",1167,"^:",22,"^;E",["^1E",["^;F",["^1E",[["^=F","^=B"]]]]]],"^N","^51","^6","hyperfiddle/electric/impl/runtime.cljc","^:",22,"^;J",["^1E",[["^=F","^=B"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",1167,"^;N","~$cljs.core/Eduction","^9",1167,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=F","^=B"]]]]]],"~$context-slot-root",["^ ","^N","^5Z","^6","hyperfiddle/electric/impl/runtime.cljc","^7",126,"^8",1,"^9",126,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",126,"^8",6,"^9",126,"^:",23],"^;S","^;T"],"~$frame-cancel",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",519,"^8",7,"^9",519,"^:",19,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"^N","^52","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["~$f"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",519,"^;N",["^K",[null,"^;W","^;O"]],"^9",519,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"~$subject-at",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",654,"^8",7,"^9",654,"^:",17,"^;E",["^1E",["^;F",["^1E",[["~$arr","^;H"]]]]]],"^N","^40","^6","hyperfiddle/electric/impl/runtime.cljc","^:",17,"^;J",["^1E",[["^=S","^;H"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",654,"^;N","^<:","^9",654,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=S","^;H"]]]]]],"~$tier-slot-buffer",["^ ","^N","^63","^6","hyperfiddle/electric/impl/runtime.cljc","^7",142,"^8",1,"^9",142,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",142,"^8",6,"^9",142,"^:",22],"^;S","^;T"],"~$hook",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",633,"^8",7,"^9",633,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$k","~$v","^<0"]]]]]],"^N","^64","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["~$k","~$v","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",633,"^;N","^<:","^9",633,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$k","~$v","^<0"]]]]]],"~$lift-cancelled",["^ ","^N","^4[","^6","hyperfiddle/electric/impl/runtime.cljc","^7",111,"^8",1,"^9",111,"^:",20,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",111,"^8",6,"^9",111,"^:",20],"^;S","^<:"],"~$input-slot-dirty",["^ ","^N","^7B","^6","hyperfiddle/electric/impl/runtime.cljc","^7",169,"^8",1,"^9",169,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",169,"^8",6,"^9",169,"^:",22],"^;S","^;T"],"~$frame-slots",["^ ","^N","^7E","^6","hyperfiddle/electric/impl/runtime.cljc","^7",163,"^8",1,"^9",163,"^:",17,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",163,"^8",6,"^9",163,"^:",17],"^;S","^;T"],"~$latest-first",["^ ","^N","^7H","^6","hyperfiddle/electric/impl/runtime.cljc","^7",91,"^8",1,"^9",91,"^:",18,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",91,"^8",6,"^9",91,"^:",18],"^;S","^<:"],"~$unbound",["^ ","^N","^5?","^6","hyperfiddle/electric/impl/runtime.cljc","^7",652,"^8",1,"^9",652,"^:",13,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",652,"^8",6,"^9",652,"^:",13],"^;S","^;W"],"~$frame-slot-tiers",["^ ","^N","^78","^6","hyperfiddle/electric/impl/runtime.cljc","^7",161,"^8",1,"^9",161,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",161,"^8",6,"^9",161,"^:",22],"^;S","^;T"],"~$make-output",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",293,"^8",7,"^9",293,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^=5","^<0"]]]]]],"^N","^7;","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^=5","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",293,"^;N",["^K",["^;W","~$array"]],"^9",293,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=5","^<0"]]]]]],"~$output-slots",["^ ","^N","^54","^6","hyperfiddle/electric/impl/runtime.cljc","^7",184,"^8",1,"^9",184,"^:",18,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",184,"^8",6,"^9",184,"^:",18],"^;S","^;T"],"~$tier-slot-foreigns",["^ ","^N","^2I","^6","hyperfiddle/electric/impl/runtime.cljc","^7",144,"^8",1,"^9",144,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",144,"^8",6,"^9",144,"^:",24],"^;S","^;T"],"~$frame-slot-parent",["^ ","^N","^7:","^6","hyperfiddle/electric/impl/runtime.cljc","^7",151,"^8",1,"^9",151,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",151,"^8",6,"^9",151,"^:",23],"^;S","^;T"],"~$context-cancel",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",677,"^8",7,"^9",677,"^:",21,"^;E",["^1E",["^;F",["^1E",[["^=1"]]]]]],"^N","^5E","^6","hyperfiddle/electric/impl/runtime.cljc","^:",21,"^;J",["^1E",[["^=1"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",677,"^;N","^;W","^9",677,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1"]]]]]],"~$context-slot-incoming",["^ ","^N","^5B","^6","hyperfiddle/electric/impl/runtime.cljc","^7",137,"^8",1,"^9",137,"^:",27,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",137,"^8",6,"^9",137,"^:",27],"^;S","^;T"],"~$input-slot-pending",["^ ","^N","^4W","^6","hyperfiddle/electric/impl/runtime.cljc","^7",171,"^8",1,"^9",171,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",171,"^8",6,"^9",171,"^:",24],"^;S","^;T"],"^<V",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",613,"^8",7,"^9",613,"^:",15,"^;E",["^1E",["^;F",["^1E",[["^;G","^=?","^=6","^;H","~$<<x"]]]]]],"^N","^6V","^6","hyperfiddle/electric/impl/runtime.cljc","^:",15,"^;J",["^1E",[["^;G","^=?","^=6","^;H","^>8"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",613,"^;N","^;W","^9",613,"^;P",5,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^=?","^=6","^;H","^>8"]]]]]],"~$input-slot-notifier",["^ ","^N","^6W","^6","hyperfiddle/electric/impl/runtime.cljc","^7",166,"^8",1,"^9",166,"^:",25,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",166,"^8",6,"^9",166,"^:",25],"^;S","^;T"],"~$tree",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",403,"^8",7,"^9",403,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]],"~:doc","A snapshot of the tree below given frame, as nested vectors. Frame vectors start with their id."],"^N","^30","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["~$f"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",403,"^;N","^<>","^9",403,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]],"^>;","A snapshot of the tree below given frame, as nested vectors. Frame vectors start with their id."],"~$make-input",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",373,"^8",7,"^9",373,"^:",17,"^;E",["^1E",["^;F",["^1E",[["^;G","~$deps"]]]]]],"^N","^4P","^6","hyperfiddle/electric/impl/runtime.cljc","^:",17,"^;J",["^1E",[["^;G","^>="]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",373,"^;N",["^K",[null,"^;W"]],"^9",373,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^>="]]]]]],"~$input-slots",["^ ","^N","^6:","^6","hyperfiddle/electric/impl/runtime.cljc","^7",173,"^8",1,"^9",173,"^:",17,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",173,"^8",6,"^9",173,"^:",17],"^;S","^;T"],"~$input-freeze",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",313,"^8",7,"^9",313,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"^N","^6<","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["^<O"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",313,"^;N",["^K",["^;W","^;O"]],"^9",313,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"~$frame-slot-id",["^ ","^N","^5Y","^6","hyperfiddle/electric/impl/runtime.cljc","^7",152,"^8",1,"^9",152,"^:",19,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",152,"^8",6,"^9",152,"^:",19],"^;S","^;T"],"~$input-cancel",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",304,"^8",7,"^9",304,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"^N","^61","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["^<O"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",304,"^;N",["^K",["^;W","^;O"]],"^9",304,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"~$pst",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",68,"^8",7,"^9",68,"^:",10,"^;E",["^1E",["^;F",["^1E",[["~$e"]]]]]],"^N","^67","^6","hyperfiddle/electric/impl/runtime.cljc","^:",10,"^;J",["^1E",[["~$e"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",68,"^;N","~$js","^9",68,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$e"]]]]]],"~$context-slot-frame-store",["^ ","^N","^62","^6","hyperfiddle/electric/impl/runtime.cljc","^7",132,"^8",1,"^9",132,"^:",30,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",132,"^8",6,"^9",132,"^:",30],"^;S","^;T"],"~$this",["^ ","^N","^29","^6","hyperfiddle/electric/impl/runtime.cljc","^7",124,"^8",1,"^9",124,"^:",10,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",124,"^8",6,"^9",124,"^:",10],"^;S","~$cljs.core/Volatile"],"~$queue",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1268,"^8",7,"^9",1268,"^:",12,"^;E",["^1E",["^;F",["^1E",[[]]]]]],"^N","^6M","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^;J",["^1E",[[]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",1268,"^;N","^<:","^9",1268,"^;P",0,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[[]]]]]],"~$input-spawn",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",382,"^8",7,"^9",382,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^>="]]]]]],"^N","^6G","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^;G","^;H","^>="]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",382,"^;N","^<1","^9",382,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^>="]]]]]],"~$->It",["^ ","^;D",null,"^5",["^ ","~:protocols",["^K",["~$cljs.core/IFn","~$cljs.core/IDeref"]],"^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^8",10,"~:factory","~:positional","^7",103,"^9",103,"^;E",["^1E",["^;F",["^1E",[["~$state","~$cancel","~$transfer"]]]]],"~:skip-protocol-flag",["^K",["^>K","^>L"]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/It."],"^>J",["^K",["^>K","^>L"]],"^N","^6F","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^;J",["^1E",[["^>O","^>P","^>Q"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^>M","^>N","^7",103,"^;N","^6T","^9",103,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^>O","^>P","^>Q"]]]]],"^>R",["^K",["^>K","^>L"]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/It."],"~$frame-slot-foreign",["^ ","^N","^6S","^6","hyperfiddle/electric/impl/runtime.cljc","^7",154,"^8",1,"^9",154,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",154,"^8",6,"^9",154,"^:",24],"^;S","^;T"],"~$input-slot-cancel",["^ ","^N","^6L","^6","hyperfiddle/electric/impl/runtime.cljc","^7",172,"^8",1,"^9",172,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",172,"^8",6,"^9",172,"^:",23],"^;S","^;T"],"~$context-slot-check",["^ ","^N","^6K","^6","hyperfiddle/electric/impl/runtime.cljc","^7",134,"^8",1,"^9",134,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",134,"^8",6,"^9",134,"^:",24],"^;S","^;T"],"~$failure",["^ ","^N","^5K","^6","hyperfiddle/electric/impl/runtime.cljc","^7",61,"^8",1,"^9",61,"^:",13,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",61,"^8",6,"^9",61,"^:",13],"^;S","^<:"],"~$check-failure",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",75,"^8",7,"^9",75,"^:",20,"^;E",["^1E",["^;F",["^1E",[["~$debug-info","^<0"]]]]]],"^N","^6N","^6","hyperfiddle/electric/impl/runtime.cljc","^:",20,"^;J",["^1E",[["^>X","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",75,"^;N","^<:","^9",75,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^>X","^<0"]]]]]],"~$input-slot-current",["^ ","^N","^6O","^6","hyperfiddle/electric/impl/runtime.cljc","^7",168,"^8",1,"^9",168,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",168,"^8",6,"^9",168,"^:",24],"^;S","^;T"],"~$juxt-with",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1122,"^8",7,"^9",1122,"^:",16,"^;E",["^1E",["^;F",["^1E",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"],["~$f","~$g","~$h","~$i","~$&","^>C"]]]]],"^<A",["^ ","^;M",true,"^<B",4,"^;P",4,"^;J",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"]],"^;E",["^1E",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"],["~$f","~$g","~$h","~$i","~$&","^>C"]]],"^;L",["^1E",[null,null,null,null,null]]]],"^N","^6Q","^6","hyperfiddle/electric/impl/runtime.cljc","^:",16,"^<A",["^ ","^;M",true,"^<B",4,"^;P",4,"^;J",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"]],"^;E",["^1E",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"],["~$f","~$g","~$h","~$i","~$&","^>C"]]],"^;L",["^1E",[null,null,null,null,null]]],"^;J",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"]],"^;K",null,"^<B",4,"^;L",["^1E",[null,null,null,null,null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",1,"^;M",false,"^;S","^<:"],["^ ","^<B",2,"^;M",false,"^;S","^<:"],["^ ","^<B",3,"^;M",false,"^;S","^<:"],["^ ","^<B",4,"^;M",false,"^;S","^<:"],["^ ","^<B",4,"^;M",true,"^;S","^<:"]],"^7",1122,"^9",1122,"^;P",4,"^;Q",true,"^;E",["^1E",[["~$f"],["~$f","~$g"],["~$f","~$g","~$h"],["~$f","~$g","~$h","~$i"],["~$f","~$g","~$h","~$i","~$&","^>C"]]]],"~$parse-event",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",755,"^8",7,"^9",755,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^=1",["^ ","^<F",["~$acks","^>:","~$change","~$freeze"]]]]]]]],"^N","^6@","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^=1","~$p__30903"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",755,"^;N",["^K",[null,"^;W"]],"^9",755,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1",["^ ","^<F",["^?0","^>:","^?1","^?2"]]]]]]]],"~$frame-slot-variables",["^ ","^N","^6A","^6","hyperfiddle/electric/impl/runtime.cljc","^7",157,"^8",1,"^9",157,"^:",26,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",157,"^8",6,"^9",157,"^:",26],"^;S","^;T"],"~$peer",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",771,"^8",7,"^9",771,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$var-count","^<S","^=8","^=9","^=:","^=;","^=<","^==","^;I"]]]]]],"^N","^6E","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["^?6","^<S","^=8","^=9","^=:","^=;","^=<","^==","^;I"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",771,"^;N","^<:","^9",771,"^;P",9,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^?6","^<S","^=8","^=9","^=:","^=;","^=<","^==","^;I"]]]]]],"~$tier-slot-remote",["^ ","^N","^5D","^6","hyperfiddle/electric/impl/runtime.cljc","^7",147,"^8",1,"^9",147,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",147,"^8",6,"^9",147,"^:",22],"^;S","^;T"],"~$It",["^ ","~:num-fields",3,"^>J",["^K",["^>K","^>L"]],"^N","^6T","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"~:type",true,"^8",10,"^7",103,"~:record",false,"^9",103,"^;S","^<:","^>R",["^K",["^>K","^>L"]]],"~$->FrameIterator",["^ ","^;D",null,"^5",["^ ","^>J",["^K",["^>K","^>L"]],"^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^8",10,"^>M","^>N","^7",547,"^9",547,"^;E",["^1E",["^;F",["^1E",[["~$f","~$it"]]]]],"^>R",["^K",["^>K","^>L"]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/FrameIterator."],"^>J",["^K",["^>K","^>L"]],"^N","^6I","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["~$f","^?="]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^>M","^>N","^7",547,"^;N","^2[","^9",547,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f","^?="]]]]],"^>R",["^K",["^>K","^>L"]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/FrameIterator."],"^<X",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",555,"^8",7,"^9",555,"^:",15,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^;I"]]]]]],"^N","^73","^6","hyperfiddle/electric/impl/runtime.cljc","^:",15,"^;J",["^1E",[["^;G","^;H","^;I"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",555,"^;N","^;W","^9",555,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^;I"]]]]]],"~$context-slot-notifier",["^ ","^N","^6Y","^6","hyperfiddle/electric/impl/runtime.cljc","^7",135,"^8",1,"^9",135,"^:",27,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",135,"^8",6,"^9",135,"^:",27],"^;S","^;T"],"~$pending",["^ ","^N","^6P","^6","hyperfiddle/electric/impl/runtime.cljc","^7",63,"^8",1,"^9",63,"^:",13,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",63,"^8",6,"^9",63,"^:",13],"^;S","^5>"],"~$latest-apply",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",81,"^8",7,"^9",81,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^>X","~$&","^=G"]]]]],"^<A",["^ ","^;M",true,"^<B",1,"^;P",1,"^;J",[["^1E",["^>X","^=G"]]],"^;E",["^1E",[["^>X","~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^4<","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^<A",["^ ","^;M",true,"^<B",1,"^;P",1,"^;J",[["^1E",["^>X","^=G"]]],"^;E",["^1E",[["^>X","~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["^>X","^=G"]]],"^;K",null,"^<B",1,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",1,"^;M",true,"^;S","^;W"]],"^7",81,"^;N","^;W","^9",81,"^;P",1,"^;Q",true,"^;E",["^1E",[["^>X","~$&","^=G"]]]],"~$context-slot-pending-wpos",["^ ","^N","^6C","^6","hyperfiddle/electric/impl/runtime.cljc","^7",130,"^8",1,"^9",130,"^:",31,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",130,"^8",6,"^9",130,"^:",31],"^;S","^;T"],"~$tier-slot-hooks",["^ ","^N","^6B","^6","hyperfiddle/electric/impl/runtime.cljc","^7",145,"^8",1,"^9",145,"^:",21,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",145,"^8",6,"^9",145,"^:",21],"^;S","^;T"],"~$context-slot-remote-id",["^ ","^N","^44","^6","hyperfiddle/electric/impl/runtime.cljc","^7",128,"^8",1,"^9",128,"^:",28,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",128,"^8",6,"^9",128,"^:",28],"^;S","^;T"],"~$move",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",509,"^8",7,"^9",509,"^:",11,"^;E",["^1E",["^;F",["^1E",[["^<4","~$from","~$to"]]]]],"^>;","Move a frame. If origin position is equal to target position, frame is removed. Will search and call `hook`."],"^N","^2P","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["^<4","^?E","^?F"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",509,"^;N",["^K",[null,"^;W","^;O"]],"^9",509,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<4","^?E","^?F"]]]]],"^>;","Move a frame. If origin position is equal to target position, frame is removed. Will search and call `hook`."],"~$check-unbound-var",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",391,"^8",7,"^9",391,"^:",24,"^;E",["^1E",["^;F",["^1E",[["^>X","^<0"]]]]]],"^N","^2O","^6","hyperfiddle/electric/impl/runtime.cljc","^:",24,"^;J",["^1E",[["^>X","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",391,"^;N","^<:","^9",391,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^>X","^<0"]]]]]],"~$context-slots",["^ ","^N","^4L","^6","hyperfiddle/electric/impl/runtime.cljc","^7",138,"^8",1,"^9",138,"^:",19,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",138,"^8",6,"^9",138,"^:",19],"^;S","^;T"],"~$tier-slot-position",["^ ","^N","^7C","^6","hyperfiddle/electric/impl/runtime.cljc","^7",141,"^8",1,"^9",141,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",141,"^8",6,"^9",141,"^:",24],"^;S","^;T"],"~$output-slot-prev",["^ ","^N","^7D","^6","hyperfiddle/electric/impl/runtime.cljc","^7",181,"^8",1,"^9",181,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",181,"^8",6,"^9",181,"^:",22],"^;S","^;T"],"^<R",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",397,"^8",7,"^9",397,"^:",13,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H"]]]]]],"^N","^7G","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"^;J",["^1E",[["^;G","^;H"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",397,"^;N","^;W","^9",397,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H"]]]]]],"~$output-slot-next",["^ ","^N","^7I","^6","hyperfiddle/electric/impl/runtime.cljc","^7",182,"^8",1,"^9",182,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",182,"^8",6,"^9",182,"^:",22],"^;S","^;T"],"~$eval-tree-inst",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",715,"^8",7,"^9",715,"^:",21,"^;E",["^1E",["^;F",["^1E",[["^=1","^<E"]]]]]],"^N","^2L","^6","hyperfiddle/electric/impl/runtime.cljc","^:",21,"^;J",["^1E",[["^=1","^<E"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",715,"^;N","^=E","^9",715,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1","^<E"]]]]]],"~$tier-slot-size",["^ ","^N","^7?","^6","hyperfiddle/electric/impl/runtime.cljc","^7",143,"^8",1,"^9",143,"^:",20,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",143,"^8",6,"^9",143,"^:",20],"^;S","^;T"],"~$input-change",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",309,"^8",7,"^9",309,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^<O","~$x"]]]]]],"^N","^7<","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["^<O","~$x"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",309,"^;N",["^K",["^;W","^;O"]],"^9",309,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O","~$x"]]]]]],"~$frame-rotate",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",481,"^8",7,"^9",481,"^:",19,"^;E",["^1E",["^;F",["^1E",[["~$f","^?F"]]]]]],"^N","^2;","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["~$f","^?F"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",481,"^;N",["^K",[null,"^;W","^;O"]],"^9",481,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f","^?F"]]]]]],"^<W",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",625,"^8",7,"^9",625,"^:",13,"^;E",["^1E",["^;F",["^1E",[["^;G","^=?","^=6","^;H"]]]]]],"^N","^2:","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"^;J",["^1E",[["^;G","^=?","^=6","^;H"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",625,"^;N","^;O","^9",625,"^;P",4,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^=?","^=6","^;H"]]]]]],"~$tier-slot-vars",["^ ","^N","^2<","^6","hyperfiddle/electric/impl/runtime.cljc","^7",146,"^8",1,"^9",146,"^:",20,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",146,"^8",6,"^9",146,"^:",20],"^;S","^;T"],"~$context-slot-local-id",["^ ","^N","^2=","^6","hyperfiddle/electric/impl/runtime.cljc","^7",127,"^8",1,"^9",127,"^:",27,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",127,"^8",6,"^9",127,"^:",27],"^;S","^;T"],"~$output-slot-done",["^ ","^N","^7A","^6","hyperfiddle/electric/impl/runtime.cljc","^7",180,"^8",1,"^9",180,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",180,"^8",6,"^9",180,"^:",22],"^;S","^;T"],"~$tier-slot-parent",["^ ","^N","^76","^6","hyperfiddle/electric/impl/runtime.cljc","^7",140,"^8",1,"^9",140,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",140,"^8",6,"^9",140,"^:",22],"^;S","^;T"],"~$make-context",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",201,"^8",7,"^9",201,"^:",19,"^;E",["^1E",["^;F",["^1E",[[]]]]]],"^N","^24","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[[]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",201,"^;N",["^K",["^;W","^>1"]],"^9",201,"^;P",0,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[[]]]]]],"~$output-slot-input",["^ ","^N","^27","^6","hyperfiddle/electric/impl/runtime.cljc","^7",175,"^8",1,"^9",175,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",175,"^8",6,"^9",175,"^:",23],"^;S","^;T"],"~$sym",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",946,"^8",7,"^9",946,"^:",10,"^;E",["^1E",["^;F",["^1E",[["~$&","^=G"]]]]],"^<A",["^ ","^;M",true,"^<B",0,"^;P",0,"^;J",[["^1E",["^=G"]]],"^;E",["^1E",[["~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^2@","^6","hyperfiddle/electric/impl/runtime.cljc","^:",10,"^<A",["^ ","^;M",true,"^<B",0,"^;P",0,"^;J",[["^1E",["^=G"]]],"^;E",["^1E",[["~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["^=G"]]],"^;K",null,"^<B",0,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",0,"^;M",true,"^;S",["^K",["^;W","~$cljs.core/Symbol"]]]],"^7",946,"^;N","^;W","^9",946,"^;P",0,"^;Q",true,"^;E",["^1E",[["~$&","^=G"]]]],"~$frame-slot-static",["^ ","^N","^3L","^6","hyperfiddle/electric/impl/runtime.cljc","^7",155,"^8",1,"^9",155,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",155,"^8",6,"^9",155,"^:",23],"^;S","^;T"],"~$output-dirty",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",265,"^8",7,"^9",265,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^<Q"]]]]]],"^N","^2>","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^;J",["^1E",[["^<Q"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",265,"^;N",["^K",["^;W","^;O"]],"^9",265,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<Q"]]]]]],"~$update-event",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",319,"^8",7,"^9",319,"^:",19,"^;E",["^1E",["^;F",["^1E",[["^=1","~$k","~$f","~$&","^=G"]]]]],"^<A",["^ ","^;M",true,"^<B",3,"^;P",3,"^;J",[["^1E",["^=1","~$k","~$f","^=G"]]],"^;E",["^1E",[["^=1","~$k","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^3?","^6","hyperfiddle/electric/impl/runtime.cljc","^:",19,"^<A",["^ ","^;M",true,"^<B",3,"^;P",3,"^;J",[["^1E",["^=1","~$k","~$f","^=G"]]],"^;E",["^1E",[["^=1","~$k","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["^=1","~$k","~$f","^=G"]]],"^;K",null,"^<B",3,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",3,"^;M",true,"^;S","^;W"]],"^7",319,"^;N","^;W","^9",319,"^;P",3,"^;Q",true,"^;E",["^1E",[["^=1","~$k","~$f","~$&","^=G"]]]],"~$context-transfer",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",680,"^8",7,"^9",680,"^:",23,"^;E",["^1E",["^;F",["^1E",[["^=1"]]]]]],"^N","^3E","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["^=1"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",680,"^;N","^;W","^9",680,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1"]]]]]],"~$make-tier",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",210,"^8",7,"^9",210,"^:",16,"^;E",["^1E",["^;F",["^1E",[["^=4","^=6"]]]]]],"^N","^5L","^6","hyperfiddle/electric/impl/runtime.cljc","^:",16,"^;J",["^1E",[["^=4","^=6"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",210,"^;N","^;W","^9",210,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=4","^=6"]]]]]],"~$array-call",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",469,"^8",7,"^9",469,"^:",17,"^;E",["^1E",["^;F",["^1E",[["^=S"]]]]]],"^N","^2U","^6","hyperfiddle/electric/impl/runtime.cljc","^:",17,"^;J",["^1E",[["^=S"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",469,"^;N","^;O","^9",469,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=S"]]]]]],"~$frame-slot-sources",["^ ","^N","^5I","^6","hyperfiddle/electric/impl/runtime.cljc","^7",158,"^8",1,"^9",158,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",158,"^8",6,"^9",158,"^:",24],"^;S","^;T"],"~$eval-freeze-inst",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",746,"^8",7,"^9",746,"^:",23,"^;E",["^1E",["^;F",["^1E",[["^=1",["^=5","^;H"]]]]]]],"^N","^5H","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["^=1","~$p__30899"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",746,"^;N","^=E","^9",746,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1",["^=5","^;H"]]]]]]],"~$fail",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",59,"^8",7,"^9",59,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$x"]]]]]],"^N","^4D","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["~$x"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",59,"^;N","~$ignore","^9",59,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$x"]]]]]],"~$acopy",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",527,"^8",7,"^9",527,"^:",12,"^;E",["^1E",["^;F",["^1E",[["~$src","~$src-off","~$dest","~$dest-off","~$size"]]]]]],"^N","^2D","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^;J",["^1E",[["^@8","^@9","^@:","^@;","^@<"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",527,"^9",527,"^;P",5,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^@8","^@9","^@:","^@;","^@<"]]]]]],"~$t_hyperfiddle$electric$impl$runtime30669",["^ ","^?9",2,"^>J",["^K",["^>K","~$cljs.core/IMeta","^>L","~$cljs.core/IWithMeta"]],"^N","^5A","^6","hyperfiddle/electric/impl/runtime.cljc","^?:",true,"~:anonymous",true,"^8",7,"^7",114,"^?;",false,"^;S","^<:","^>R",["^K",["^>K","^@>","^>L","^@?"]]],"~$snapshot",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",796,"^8",7,"^9",796,"^:",15,"^;E",["^1E",["^;F",["^1E",[["~$env","~$f","~$&","^=G"]]]]],"^<A",["^ ","^;M",true,"^<B",2,"^;P",2,"^;J",[["^1E",["^@B","~$f","^=G"]]],"^;E",["^1E",[["^@B","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^2G","^6","hyperfiddle/electric/impl/runtime.cljc","^:",15,"^<A",["^ ","^;M",true,"^<B",2,"^;P",2,"^;J",[["^1E",["^@B","~$f","^=G"]]],"^;E",["^1E",[["^@B","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["^@B","~$f","^=G"]]],"^;K",null,"^<B",2,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",2,"^;M",true,"^;S",["^K",["~$clj","^;W"]]]],"^7",796,"^;N","^;W","^9",796,"^;P",2,"^;Q",true,"^;E",["^1E",[["^@B","~$f","~$&","^=G"]]]],"~$input-transfer",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",360,"^8",7,"^9",360,"^:",21,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"^N","^2N","^6","hyperfiddle/electric/impl/runtime.cljc","^:",21,"^;J",["^1E",[["^<O"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",360,"^9",360,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"~$empty-frame",["^ ","^N","^5S","^6","hyperfiddle/electric/impl/runtime.cljc","^7",803,"^8",1,"^9",803,"^:",17,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",803,"^8",6,"^9",803,"^:",17],"^;S","^<>"],"~$frame-slot-constants",["^ ","^N","^5T","^6","hyperfiddle/electric/impl/runtime.cljc","^7",162,"^8",1,"^9",162,"^:",26,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",162,"^8",6,"^9",162,"^:",26],"^;S","^;T"],"^<J",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",579,"^8",7,"^9",579,"^:",13,"^;E",["^1E",["^;F",["^1E",[["~$v"]]]]]],"^N","^37","^6","hyperfiddle/electric/impl/runtime.cljc","^:",13,"^;J",["^1E",[["~$v"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",579,"^;N","^<:","^9",579,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$v"]]]]]],"~$input-slot-frame",["^ ","^N","^33","^6","hyperfiddle/electric/impl/runtime.cljc","^7",165,"^8",1,"^9",165,"^:",22,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",165,"^8",6,"^9",165,"^:",22],"^;S","^;T"],"~$dynamic-resolve",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",1174,"^8",7,"^9",1174,"^:",22,"^;E",["^1E",["^;F",["^1E",[["~$nf","~$x"]]]]]],"^N","^4=","^6","hyperfiddle/electric/impl/runtime.cljc","^:",22,"^;J",["^1E",[["^@I","~$x"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",1174,"^9",1174,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^@I","~$x"]]]]]],"^<S",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",400,"^8",7,"^9",400,"^:",14,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^>X"]]]]]],"^N","^4:","^6","hyperfiddle/electric/impl/runtime.cljc","^:",14,"^;J",["^1E",[["^;G","^;H","^>X"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",400,"^;N","^<:","^9",400,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^;H","^>X"]]]]]],"~$notify-rotate",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",460,"^8",7,"^9",460,"^:",20,"^;E",["^1E",["^;F",["^1E",[["~$f","~$k"]]]]]],"^N","^46","^6","hyperfiddle/electric/impl/runtime.cljc","^:",20,"^;J",["^1E",[["~$f","~$k"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",460,"^9",460,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f","~$k"]]]]]],"~$frame-slot-targets",["^ ","^N","^22","^6","hyperfiddle/electric/impl/runtime.cljc","^7",159,"^8",1,"^9",159,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",159,"^8",6,"^9",159,"^:",24],"^;S","^;T"],"~$FrameIterator",["^ ","^?9",2,"^>J",["^K",["^>K","^>L"]],"^N","^2[","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^?:",true,"^8",10,"^7",547,"^?;",false,"^9",547,"^;S","^<:","^>R",["^K",["^>K","^>L"]]],"~$with",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",597,"^8",7,"^9",597,"^:",11,"^;E",["^1E",["^;F",["^1E",[["^<4","^<0"]]]]]],"^N","^26","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["^<4","^<0"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",597,"^;N","^<:","^9",597,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<4","^<0"]]]]]],"~$input-ready",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",260,"^8",7,"^9",260,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"^N","^45","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^<O"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",260,"^;N",["^K",["^;W","^;O"]],"^9",260,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<O"]]]]]],"~$doto-aset",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",198,"^8",7,"^9",198,"^:",16,"^;E",["^1E",["^;F",["^1E",[["^=S","~$k","~$v"]]]]]],"^N","^5R","^6","hyperfiddle/electric/impl/runtime.cljc","^:",16,"^;J",["^1E",[["^=S","~$k","~$v"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",198,"^;N","^=E","^9",198,"^;P",3,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=S","~$k","~$v"]]]]]],"~$context-slot-pending-rpos",["^ ","^N","^5;","^6","hyperfiddle/electric/impl/runtime.cljc","^7",129,"^8",1,"^9",129,"^:",31,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",129,"^8",6,"^9",129,"^:",31],"^;S","^;T"],"~$frame-slot-dynamic",["^ ","^N","^3M","^6","hyperfiddle/electric/impl/runtime.cljc","^7",156,"^8",1,"^9",156,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",156,"^8",6,"^9",156,"^:",24],"^;S","^;T"],"~$constructor",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",532,"^8",7,"^9",532,"^:",18,"^;E",["^1E",["^;F",["^1E",[["^<R","^<S","^=8","^=9","^=:","^=;","^=<","^==","^=@"]]]]]],"^N","^3H","^6","hyperfiddle/electric/impl/runtime.cljc","^:",18,"^;J",["^1E",[["^<R","^<S","^=8","^=9","^=:","^=;","^=<","^==","^=@"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",532,"^;N","^<:","^9",532,"^;P",9,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^<R","^<S","^=8","^=9","^=:","^=;","^=<","^==","^=@"]]]]]],"~$frame-walk-tiers",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",434,"^8",7,"^9",434,"^:",23,"^;E",["^1E",["^;F",["^1E",[["^;G","^<5","~$k","^<6","^<7"]]]]]],"^N","^3N","^6","hyperfiddle/electric/impl/runtime.cljc","^:",23,"^;J",["^1E",[["^;G","^<5","~$k","^<6","^<7"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",434,"^;N",["^K",["^;W","^;O"]],"^9",434,"^;P",5,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^;G","^<5","~$k","^<6","^<7"]]]]]],"~$frame-slot-context",["^ ","^N","^3=","^6","hyperfiddle/electric/impl/runtime.cljc","^7",150,"^8",1,"^9",150,"^:",24,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",150,"^8",6,"^9",150,"^:",24],"^;S","^;T"],"~$frame-slot-inputs",["^ ","^N","^2X","^6","hyperfiddle/electric/impl/runtime.cljc","^7",160,"^8",1,"^9",160,"^:",23,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",160,"^8",6,"^9",160,"^:",23],"^;S","^;T"],"~$emit",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",949,"^8",7,"^9",949,"^:",11,"^;E",["^1E",["^;F",["^1E",[["~$prefix","^<E"]]]]]],"^N","^2Z","^6","hyperfiddle/electric/impl/runtime.cljc","^:",11,"^;J",["^1E",[["^@W","^<E"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",949,"^;N",["^K",["^;W","^;O"]],"^9",949,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^@W","^<E"]]]]]],"~$->t_hyperfiddle$electric$impl$runtime30669",["^ ","^;D",null,"^5",["^ ","^@@",true,"^>J",["^K",["^>K","^@>","^>L","^@?"]],"^>R",["^K",["^>K","^@>","^>L","^@?"]],"^>M","^>N","^;E",["^1E",["^;F",["^1E",[["^?=","~$meta30670"]]]]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669.","^6",null],"^>J",["^K",["^>K","^@>","^>L","^@?"]],"^N","^53","^6","hyperfiddle/electric/impl/runtime.cljc","^;J",["^1E",[["^?=","^@Y"]]],"^;K",null,"^;L",["^1E",[null,null]],"^@@",true,"^8",7,"^;M",false,"^>M","^>N","^7",114,"^;N","^5A","^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^?=","^@Y"]]]]],"^>R",["^K",["^>K","^@>","^>L","^@?"]],"^>;","Positional factory function for hyperfiddle.electric.impl.runtime/t_hyperfiddle$electric$impl$runtime30669."],"~$select-debug-info",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",72,"^8",7,"^9",72,"^:",24,"^;E",["^1E",["^;F",["^1E",[["^>X"]]]]]],"^N","^3B","^6","hyperfiddle/electric/impl/runtime.cljc","^:",24,"^;J",["^1E",[["^>X"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",72,"^;N",["^K",["^;W","^;O"]],"^9",72,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^>X"]]]]]],"~$find-scope",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",426,"^8",7,"^9",426,"^:",17,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"^N","^3X","^6","hyperfiddle/electric/impl/runtime.cljc","^:",17,"^;J",["^1E",[["~$f"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",426,"^;N","^;W","^9",426,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["~$f"]]]]]],"~$process-incoming-events",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",763,"^8",7,"^9",763,"^:",30,"^;E",["^1E",["^;F",["^1E",[["^=1","~$>incoming"]]]]]],"^N","^3[","^6","hyperfiddle/electric/impl/runtime.cljc","^:",30,"^;J",["^1E",[["^=1","^A1"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",763,"^;N","^<:","^9",763,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^=1","^A1"]]]]]],"~$aswap",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",186,"^8",7,"^9",186,"^:",12,"^;E",["^1E",["^;F",["^1E",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"],["^=S","^;H","~$f","~$a","~$b","~$c","~$&","~$ds"]]]]],"^<A",["^ ","^;M",true,"^<B",6,"^;P",6,"^;J",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"]],"^;E",["^1E",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"],["^=S","^;H","~$f","~$a","~$b","~$c","~$&","^A3"]]],"^;L",["^1E",[null,null,null,null,null]]]],"^N","^2C","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^<A",["^ ","^;M",true,"^<B",6,"^;P",6,"^;J",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"]],"^;E",["^1E",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"],["^=S","^;H","~$f","~$a","~$b","~$c","~$&","^A3"]]],"^;L",["^1E",[null,null,null,null,null]]],"^;J",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"]],"^;K",null,"^<B",6,"^;L",["^1E",[null,null,null,null,null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",3,"^;M",false,"^;S","^;W"],["^ ","^<B",4,"^;M",false,"^;S","^;W"],["^ ","^<B",5,"^;M",false,"^;S","^;W"],["^ ","^<B",6,"^;M",false,"^;S","^;W"],["^ ","^<B",6,"^;M",true,"^;S","^;W"]],"^7",186,"^9",186,"^;P",6,"^;Q",true,"^;E",["^1E",[["^=S","^;H","~$f"],["^=S","^;H","~$f","~$a"],["^=S","^;H","~$f","~$a","~$b"],["^=S","^;H","~$f","~$a","~$b","~$c"],["^=S","^;H","~$f","~$a","~$b","~$c","~$&","^A3"]]]],"~$error",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",65,"^8",7,"^9",65,"^:",12,"^;E",["^1E",["^;F",["^1E",[["~$msg"]]]]]],"^N","^4V","^6","hyperfiddle/electric/impl/runtime.cljc","^:",12,"^;J",["^1E",[["^A5"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",65,"^;N","^>C","^9",65,"^;P",1,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^A5"]]]]]],"~$collapse",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",790,"^8",7,"^9",790,"^:",15,"^;E",["^1E",["^;F",["^1E",[["~$s","~$n","~$f","~$&","^=G"]]]]],"^<A",["^ ","^;M",true,"^<B",3,"^;P",3,"^;J",[["^1E",["~$s","~$n","~$f","^=G"]]],"^;E",["^1E",[["~$s","~$n","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]]],"^N","^3Q","^6","hyperfiddle/electric/impl/runtime.cljc","^:",15,"^<A",["^ ","^;M",true,"^<B",3,"^;P",3,"^;J",[["^1E",["~$s","~$n","~$f","^=G"]]],"^;E",["^1E",[["~$s","~$n","~$f","~$&","^=G"]]],"^;L",["^1E",[null]]],"^;J",[["^1E",["~$s","~$n","~$f","^=G"]]],"^;K",null,"^<B",3,"^;L",["^1E",[null]],"^8",1,"^;M",true,"^<C",[["^ ","^<B",3,"^;M",true,"^;S","^@C"]],"^7",790,"^;N","^;W","^9",790,"^;P",3,"^;Q",true,"^;E",["^1E",[["~$s","~$n","~$f","~$&","^=G"]]]],"~$write-outgoing-events",["^ ","^;D",null,"^5",["^ ","^6","hyperfiddle/electric/impl/runtime.cljc","^7",766,"^8",7,"^9",766,"^:",28,"^;E",["^1E",["^;F",["^1E",[["~$write","~$>events"]]]]]],"^N","^3U","^6","hyperfiddle/electric/impl/runtime.cljc","^:",28,"^;J",["^1E",[["^A8","^A9"]]],"^;K",null,"^;L",["^1E",[null,null]],"^8",1,"^;M",false,"^7",766,"^;N","^<:","^9",766,"^;P",2,"^;Q",true,"^;E",["^1E",["^;F",["^1E",[["^A8","^A9"]]]]]]],"^1C",["^ ","^14","^15","^16","^16","^17","^17","^F","^F","^1:","^1:","~$m","^16","^I","^I","^15","^15","~$l","^17"],"~:cljs.analyzer/constants",["^ ","^1?",["^K",["~$res","~:hyperfiddle.electric.impl.ir/fn","^2:","~:hyperfiddle.electric.debug/name","~:hyperfiddle.electric.impl.ir/op","~:remove","~:lift","^<I","~:tree","~:variable","~:hyperfiddle.electric.debug/type","~:frame","~:do","~:freeze","~:hyperfiddle.electric.impl.ir/name","~:hyperfiddle.electric.impl.ir/value","~:else","^=?","~$cljs.core/aset","~:global","^37","~:sub","~:create","~:sources","^3H","~:hyperfiddle.electric.impl.ir/inst","~:constant","~:static","^;G","^3Z","^42","~:hyperfiddle.electric.impl.ir/args","^<P","^4:","~:hyperfiddle.electric.impl.runtime/unbound","^Q","^1U","^0","^4<","~:targets","^>Q","^4P","~$cljs.core/let","~:hyperfiddle.electric.impl.ir/index","~:hyperfiddle.electric.impl.ir/init","~:inputs","~:nop","~:dynamic","~:hyperfiddle.electric.impl.ir/deps","~:inject","~:hyperfiddle.electric.impl.ir/ns","~:id","^>O","^5G","~:literal","~:apply","~:hyperfiddle.electric.impl.ir/form","~$cljs.core/fn","~$cljs.core/int","~:stack","~:invoke","~:hyperfiddle.electric.impl.ir/slot","^?=","~:vget","~:rotate","~:position","~:hyperfiddle.electric.debug/args","~:cancel","~:input","~:acks","~:hyperfiddle.electric.impl.runtime/not-found","~:target","^;F","~:change","^@Y","^6E","~:tiers","^6G","~:main","~:unknown-apply","^6N","^6V","~:hyperfiddle.electric.debug","~:pub","^73","~$prev","^7;","~:bind","~$cljs.core/aget","~:vars","^>P","^7G","~$f","~:eval"]],"~:order",["^A>","^BH","^B>","^BA","^AA","^BD","^AF","^>O","^>P","^>Q","^AI","^?=","^@Y","^AS","^A=","^B2","^AX","^AT","^AN","^BE","^Q","^AD","^B=","^B<","~$f~:ns-specs",["^ "],"~:ns-spec-vars",["^K",[]],"~:compiler-options",["^7K",[["^BR","~:static-fns"],true,["^BR","~:shadow-tweaks"],null,["^BR","~:source-map-inline"],null,["^BR","~:elide-asserts"],false,["^BR","~:optimize-constants"],null,["^BR","^1T"],null,["^BR","~:external-config"],null,["^BR","~:tooling-config"],null,["^BR","~:emit-constants"],null,["^BR","~:load-tests"],null,["^BR","~:form-size-threshold"],null,["^BR","~:global-goog-object&array"],null,["^BR","~:data-readers"],null,["^BR","~:infer-externs"],"~:auto",["^BR","^1V"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^BR","~:fn-invoke-direct"],null,["^BR","~:source-map"],"/dev/null"]]]