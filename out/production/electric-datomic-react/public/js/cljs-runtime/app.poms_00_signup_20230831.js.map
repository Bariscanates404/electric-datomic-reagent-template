{"version":3,"sources":["app/poms_00_signup_20230831.cljc"],"mappings":";;;;;AAmBS,AAAA;;;0CAAA,kDAAAA,5FAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,sEAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,sEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,wEAAA,xEAAMD,mFAEFE;AAFJ,AAEU,OAACC,sEAAYD,KAAK,4CAAK,AAACE;;;AAFlC,CAAA,wEAAA,xEAAMJ,mFAGFE,KAAKG;AAHT,AAIG,4DAAA,rDAACC,gDAAoBJ,2BAA4BG;;;AAJpD,CAAA,kEAAA,lEAAML;;AAAN,AAKA,AAAA,qCAAA,6CAAAF,lFAAMc;AAAN,AAAA,IAAAL,qBAAA;AAAA,AAAA,IAAAC,0BAAA,AAAA;AAAA,AAAA,IAAAC,wBAAA;;AAAA,AAAA,GAAA,CAAAA,wBAAAD;AAAA,AAAA,AAAAD,wBAAA,CAAA,UAAAE;;AAAA,eAAA,CAAAA,wBAAA;;;;AAAA;;;;AAAA,IAAAC,uBAAA,EAAA,CAAA,MAAA,AAAAH,4BAAA,AAAA,KAAAI,qBAAA,AAAAJ,yBAAA,KAAA,IAAA,OAAA;AAAA,AAAA,OAAAK,wEAAA,CAAA,UAAA,MAAAF;;;AAAA,AAAA,CAAA,0EAAA,1EAAME,qFAAQM,KAAOC;AAArB,AACE,OAASD,YAAK,AAACE,sDAAa,6CAAA,mFAAA,hIAACC,yLAAWF;;;AAD1C,CAAA,6DAAA,7DAAMP;;AAAN;AAAA,CAAA,uDAAA,WAAAC,lEAAMD;AAAN,AAAA,IAAAE,WAAA,AAAAC,gBAAAF;IAAAA,eAAA,AAAAG,eAAAH;AAAA,AAAA,IAAAI,qBAAA;AAAA,AAAA,OAAAA,wDAAAH,SAAAD;;;AAAA,AAST,uCAAA,vCAAMS,sFAAUC;AAAhB,AAAwB,OAAQ,sHAAA,tHAACC,4CAAI,AAAY,4DAAA,5DAACA,4CAAI,AAAYD;;AAClE,oCAAA,pCAAME,gFAAOC,KAAKC;AAAlB,AAEK,IAAAC,aAAe,AAACE,yCAAe;AAAA,AAAO,OAACC,qDAAU,AAACC;;aAAlD,AAAAH,4CAAAD,WAAA,IAAA,pEAAOL;AAAP,AAAA,0FAAA,gGAAA,2CAAA,gEAAA,qEAAA,mFAAA,2CAAA,6DAAA,mFAAA,2CAAA,gKAAA,qDAAA,4BAAA,3wBACMU,qJACYV,2bAEU,AAAA,oFAAQG,oKAGlB,WAAKQ;AAAL,AACE,yGAAA,kIAAA,3OAACC,6MAAwBD,5CAAM,kDAAA,lDAACV,AAAO,5CAAa,4GAAA,5GAACA,AAAO;;AAC5D,QAACG,0CAAAA,iDAAAA,TAAUO,6BAAAA;WAT/B,mFAAA,mGAAA,2CAAA,/FAUOE,6JACS,WAAKC;AAAL,AAEE,GAAM,mDAAA,nDAACC,6CAAE,AAAOD;AAAhB,AACE,gHAAA,zGAACF;;AADH;;;;AAQd,sCAAA,CAAA,UAAA,jDAAKI,sEAEoC,WAAKC;AAAL,AAAU,OAASA;KAF5D,UAAA,oBAGwC,WAAKA;AAAL,AAAU,OAAQA;;AAE1D,mCAAA,CAAA,QAAA,cAAA,uBAAA,SAAA,QAAA,cAAA,wBAAA,xIAAKC;AAKL,0CAAA,1CAAMC;AAAN,AAAA,0FAAA,wGAAA,2CAAA,+FAAA,nMAAyBC,+JAAoBJ,yFAAeE;;AAErE","names":["var_args","G__35451","app.poms-00-signup-20230831/create-root","js/Error","node","app.poms_00_signup_20230831.create_root","cljs.core.gensym","id-prefix","js/module$node_modules$react_dom$client.createRoot","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","app.poms-00-signup-20230831/render","seq35452","G__35453","cljs.core/first","cljs.core/next","self__5754__auto__","root","args","reagent.core.as_element","cljs.core.into","app.poms-00-signup-20230831/get-text","editor","cljs.core.get","app.poms-00-signup-20230831/block","data","on-change","vec__35455","cljs.core.nth","js/module$node_modules$react$index.useState","js/module$node_modules$slate_react$dist$index.withReact","js/module$node_modules$slate$dist$index.createEditor","js/module$node_modules$slate_react$dist$index.Slate","value","cljs.core.println","js/module$node_modules$slate_react$dist$index.Editable","e","cljs.core._EQ_","app.poms-00-signup-20230831/columns","row","app.poms-00-signup-20230831/data","app.poms-00-signup-20230831/MyComponent","js/shadow.js.shim.module$react_data_table_component$default"],"sourcesContent":["(ns app.poms-00-signup-20230831\n  #?(:cljs (:require-macros [app.poms-00-signup-20230831 :refer [with-reagent]]))\n  (:require contrib.str\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n            [hyperfiddle.electric-ui4 :as ui]\n            [clojure.string :as str]\n\n            #?(:cljs [\"react\" :as react])\n            #?(:cljs [\"slate\" :refer [createEditor]])\n            #?(:cljs [\"slate-react\" :refer [Slate Editable withReact]])\n            #?(:cljs [reagent.core :as r])\n            #?(:cljs [reagent.dom :as rdom])\n            #?(:cljs [\"react-dom/client\" :as ReactDom])\n            #?(:cljs [\"react-data-table-component$default\" :as DataTable])\n            )\n  )\n\n;;- BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE ;;\n#?(:cljs (defn create-root\n           \"See https://reactjs.org/docs/react-dom-client.html#createroot\"\n           ([node] (create-root node (str (gensym))))\n           ([node id-prefix]\n            (ReactDom/createRoot node #js {:identifierPrefix id-prefix}))))\n#?(:cljs (defn render [root & args]\n           (.render root (r/as-element (into [:f>] args)))))\n(defmacro with-reagent [& args]\n  `(dom/div\n     (let [root# (create-root dom/node)]\n       (render root# ~@args)\n       (e/on-unmount #(.unmount root#)))))\n;; - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE  ;;\n\n(defn get-text [editor] (.-text (get (.-children (get (.-children editor) 0)) 0)))\n(defn block [data on-change]\n  #?(:cljs\n     (let [[editor] (react/useState (fn [] (withReact (createEditor))))]\n       [:> Slate\n        {:editor       editor\n         :initialValue [{:children\n                         [{:text (:value data)}],\n                         :type \"paragraph\"}]\n         ;; :onChange on-change also works\n         :onChange     (fn [value]\n                         (println \"onChange:\" (-> value (get 0) (.-children) (get 0) (.-text)) \".  Not a plain function\")\n                         (on-change value))}\n        [:> Editable\n         {:onKeyDown (fn [e]\n\n                       (when (= (.-key e) \"Enter\")\n                         (println \"onKeyDown: Enter, A plain function. \")\n\n                         )\n\n                       )}]])))\n;; - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE - BOILER PLATE  ;;\n\n#?(:cljs (def columns\n           #js\n                   [#js {:name \"Title\", :selector (fn [row] (.-title row))}\n                    #js {:name \"Year\", :selector (fn [row] (.-year row))}]))\n\n#?(:cljs (def data\n           #js\n                   [#js {:id 1, :title \"Beetlejuice\", :year \"1988\"}\n                    #js {:id 2, :title \"Ghostbusters\", :year \"1984\"}]))\n\n#?(:cljs (defn MyComponent [] [:> DataTable {:columns columns, :data data}]))\n\n(e/defn signup-page []\n        (e/client\n          (dom/text \"hello\")\n          (with-reagent MyComponent)\n          )\n        )\n"]}