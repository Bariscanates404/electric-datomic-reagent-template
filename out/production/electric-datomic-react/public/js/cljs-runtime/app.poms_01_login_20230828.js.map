{"version":3,"sources":["app/poms_01_login_20230828.cljc"],"mappings":";AAWA,AACA,AAyBA","names":[],"sourcesContent":["(ns app.poms-01-login-20230828\n  (:require contrib.str\n            [hyperfiddle.electric :as e]\n            [hyperfiddle.electric-dom2 :as dom]\n    ;datomic require'\u0131 asag\u0131daki\n            #?(:clj [datomic.client.api :as d])\n            [hyperfiddle.electric-ui4 :as ui]\n            [hyperfiddle.history :as router]\n            ))\n\n;; bu k\u0131s\u0131mda zorunlu\n(e/def conn)\n(e/def db)\n;; bu k\u0131s\u0131mda zorunlu\n\n\n#?(:clj (defn login-check [user-id]\n          (if (clojure.string/blank? (str user-id))\n            false\n            true)\n          )\n   )\n#?(:clj (defn login-test [username password db] (ffirst (d/q\n                                                          '[:find ?result\n                                                            :in $ ?name ?password\n                                                            :where\n                                                            [?e :user/name ?name]\n                                                            [?e :user/password ?password]\n                                                            [?e :user/id ?id]\n                                                            [(app.poms-01-login-20230828/login-check ?id) ?result]\n                                                            ]\n                                                          db username password)\n                                                        )\n          )\n   )\n\n\n(e/defn login-page []\n        (e/server\n          (binding [conn @(requiring-resolve 'user/datomic-conn)]\n            (binding [db (d/db conn)]\n              ;bind etmek zorunday\u0131z dbyi cal\u0131st\u0131rmak i\u00e7in.\n              (e/client\n                (let [!state (atom {\n                                    :in         \"\"\n                                    :in2        \"\"\n                                    :button1    \"\"\n                                    :button2    \"\"\n                                    :login-outh \"\"\n                                    :login-info \"Welcome! Colabio makes life easier...\"\n                                    })\n                      in (get (e/watch !state) :in)\n                      in2 (get (e/watch !state) :in2)\n                      ]\n                  (dom/element \"style\" (dom/text \"\n                  ul{list-style-type: none; margin: 0; padding: 0; background-color: black; overflow: auto; }\n                  li {float: left;}\n                  li a {color: white; padding: 15px 25px; display: inline-block; text-align: center; text-decoration: none;}\n                  .home {background-color: darkred;}\n                  li a:hover {\n                  background-color: #405d27;\n                  }\"))\n\n\n                  (dom/ul (dom/props {:class \"ul\"})\n                          (dom/li\n                            (dom/a (dom/props {:class \"home\" :href \"http://localhost:8080/\"})\n                                   (dom/text \"Home\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"http://localhost:8080/(app.poms-02-createprojectpage-20230901!create-project)\"})\n                                   (dom/text \"Create Project\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"#contact\"})\n                                   (dom/text \"contact\")))\n                          (dom/li\n                            (dom/a (dom/props {:href \"#about\"})\n                                   (dom/text \"about\")))\n                          )\n\n                  (dom/div\n                    (dom/form\n                      (dom/props {:il \"FORM\"\n                                  })\n                      (dom/fieldset\n                        (dom/props {:name \"FORM\"\n                                    })\n                        (dom/legend\n                          (dom/text \"POMS LOGIN\")\n                          (dom/props {:style {:text-align \"center\"}}))\n\n                        (dom/p (dom/text \"USERNAME:\")\n                               (ui/input in\n                                         (e/fn [v] (swap! !state assoc :in v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button1 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"USERNAME\"}})\n                                         ))\n                        (dom/p (dom/text \"PASSWORD:\")\n                               (ui/input in2\n                                         (e/fn [v] (swap! !state assoc :in2 v))\n                                         (dom/on \"keyup\" (e/fn [keyup]\n                                                               (when-some [givenValue (contrib.str/empty->nil (->\n                                                                                                                keyup\n                                                                                                                .-target\n                                                                                                                .-value))]\n                                                                 (swap! !state assoc :button2 givenValue)\n                                                                 )))\n                                         (dom/props {:style {:name \"PASSWORD\"}})\n                                         ))\n                        (ui/button\n                          (e/fn []\n                                  (swap! !state assoc\n                                         :login-outh (e/server (login-test (e/client (get (e/watch !state) :in)) (e/client (get (e/watch !state) :in2)) db))\n                                         )\n\n\n                                )\n\n                          (dom/text \"Login\")\n                          (dom/props {:class \"button1\"\n                                      :name  \"login-button\"\n                                      :style {:text-align \"center\"}\n                                      }))\n                        (dom/p (dom/text (get (e/watch !state) :login-info)\n                                         (dom/props {:class \"login-info\"\n                                                     :name  \"login-text\"\n                                                     })))\n                        (swap! !state assoc :login-info (if (= (get (e/watch !state) :login-outh) true)\n                                                          \"login succesfully completed!\"\n                                                          \"Wrong username or password!\")\n                               )\n\n                        )\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n        )\n\n"]}